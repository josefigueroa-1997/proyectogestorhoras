ALTER PROCEDURE [dbo].[OBTENERPROYECTOS]
    @ID INT,
    @IDCLIENTE INT,
    @NOMBRE VARCHAR(200),
    @ID_TIPOEMPRESA INT,
    @STATUS_PROYECTO INT,
    @NUMPROYECTO VARCHAR(100),
    @IDTIPOLOGIA INT,
    @UNIDADNEGOCIO INT,
    @IDCENTROCOSTO INT
AS
BEGIN
    SELECT 
        P.ID,
        P.NUM_PROYECTO,
        Un.TIPO_UNEGOCIO,
        Un.ID AS IDUNEGOCIO,
        COSTO.ID AS IDCOSTO,
        COSTO.TIPO_CCOSTO,
        CU.CODIGO,
        C.ID AS IDCLIENTE,
        C.NOMBRE AS NOMBRECLIENTE,
        P.NOMBRE AS NOMBREPROYECTO,
        T.TIPO_TIPOLOGIA,
        T.ID AS IDTIPOLOGIA,
        E.TIPO_EMPRESA,
        E.ID AS IDEMPRESA,
        PR.AFECTAIVA,
        PR.MONTO,
        PR.MONEDA,
        ST.TIPO_STATUS,
        ST.ID AS STATUSPROYECTO,
        P.PROBABILIDAD,
        P.PORCENTAJE_PROBABILIDAD,
        P.PLAZO,
        P.FECHA_INICIO,
        P.FECHA_TERMINO,
        P.FECHA_PLAZO_NEG,
        S.ID AS IDDEPARTAMENTO,
        S.NOMBRE AS NOMBREDEPARTAMENTO,

        -- Horas y Costo para Socios
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Socio' THEN UP.HH_SOCIOS END) AS HH_SOCIOS,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Socio' THEN CT.CUENTA END) AS CUENTA_SOCIOS,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Socio' THEN CT.IDCUENTA END) AS IDCUENTA_SOCIOS,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Socio' THEN SE.NOMBRE END) AS SEGMENTO_SOCIOS,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Socio' THEN UP.CostoUnitarioAsignado END) AS COSTO_SOCIO,

        -- Horas y Costo para Staff
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Staff' THEN UP.HH_STAFF END) AS HH_STAFF,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Staff' THEN CT.CUENTA END) AS CUENTA_STAFF,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Staff' THEN CT.IDCUENTA END) AS IDCUENTA_STAFF,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Staff' THEN SE.NOMBRE END) AS SEGMENTO_STAFF,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Staff' THEN UP.CostoUnitarioAsignado END) AS COSTO_STAFF,

        -- Horas y Costo para Consultor A
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 1 THEN UP.HH_CONSULTORA END) AS HH_CONSULTOR_A,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 1 THEN CT.CUENTA END) AS CUENTA_CONSULTOR_A,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 1 THEN CT.IDCUENTA END) AS IDCUENTA_CONSULTOR_A,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 1 THEN SE.NOMBRE END) AS SEGMENTO_CONSULTOR_A,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 1 THEN UP.COSTOCONSULTORA END) AS COSTO_CONSULTORA,

        -- Horas y Costo para Consultor B
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 2 THEN UP.HH_CONSULTORB END) AS HH_CONSULTOR_B,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 2 THEN CT.CUENTA END) AS CUENTA_CONSULTOR_B,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 2 THEN CT.IDCUENTA END) AS IDCUENTA_CONSULTOR_B,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 2 THEN SE.NOMBRE END) AS SEGMENTO_CONSULTOR_B,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 2 THEN UP.COSTOCONSULTORB END) AS COSTO_CONSULTORB,

        -- Horas y Costo para Consultor C
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 3 THEN UP.HH_CONSULTORC END) AS HH_CONSULTOR_C,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 3 THEN CT.CUENTA END) AS CUENTA_CONSULTOR_C,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 3 THEN CT.IDCUENTA END) AS IDCUENTA_CONSULTOR_C,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 3 THEN SE.NOMBRE END) AS SEGMENTO_CONSULTOR_C,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND CA.RN = 3 THEN UP.COSTOCONSULTORC END) AS COSTO_CONSULTORC

    FROM PROYECTO P
    INNER JOIN SUCURSAL_CLIENTE SC ON SC.ID = P.ID_CLIENTE_SUCURSAL
    LEFT JOIN USUARIO_PROYECTO UP ON UP.ID_PROYECTO = P.ID
    LEFT JOIN USUARIO U ON U.ID = UP.ID_USUARIO
    LEFT JOIN RECURSO R ON R.ID = U.ID_RECURSO
    LEFT JOIN CLIENTE C ON C.ID = SC.ID_CLIENTE
    LEFT JOIN SUCURSAL S ON S.ID = SC.ID_SUCURSAL
    LEFT JOIN TIPOLOGIA T ON T.ID = P.ID_TIPOLOGIA
    LEFT JOIN EMPRESA E ON E.ID = P.TIPO_EMPRESA
    LEFT JOIN CCOSTO_UNEGOCIO CU ON CU.ID = P.ID_CCOSTO_UNEGOCIO 
    LEFT JOIN CCOSTO COSTO ON COSTO.ID = CU.ID_CCOSTO
    LEFT JOIN UNEGOCIO Un ON Un.ID = CU.ID_UNEGOCIO
    LEFT JOIN PRESUPUESTO PR ON PR.ID = P.ID_PRESUPUESTO
    LEFT JOIN STATUS_PROYECTO ST ON ST.ID = P.STATUS_PROYECTO
    LEFT JOIN SEGMENTO SE ON UP.IDSEGMENTO = SE.ID
    LEFT JOIN CUENTA CT ON CT.ID = SE.ID_CUENTA
    CROSS APPLY (
    SELECT 
        ROW_NUMBER() OVER (PARTITION BY UP.ID_PROYECTO ORDER BY U.ID) AS RN
    FROM USUARIO_PROYECTO UP2
    INNER JOIN USUARIO U2 ON UP2.ID_USUARIO = U2.ID
    INNER JOIN RECURSO R2 ON U2.ID_RECURSO = R2.ID
    WHERE R2.NOMBRE_RECURSO = 'Consultor Externo'
      AND UP2.ID_PROYECTO = UP.ID_PROYECTO
) AS CA
    WHERE (P.ID = @ID OR @ID = 0 OR @ID IS NULL) 
      AND (C.ID = @IDCLIENTE OR @IDCLIENTE = 0 OR @IDCLIENTE IS NULL) 
      AND (P.NOMBRE = @NOMBRE OR @NOMBRE IS NULL)
      AND (P.TIPO_EMPRESA = @ID_TIPOEMPRESA OR @ID_TIPOEMPRESA = 0 OR @ID_TIPOEMPRESA IS NULL) 
      AND (ST.ID = @STATUS_PROYECTO OR @STATUS_PROYECTO = 0 OR @STATUS_PROYECTO IS NULL)
      AND (P.NUM_PROYECTO = @NUMPROYECTO OR @NUMPROYECTO IS NULL)
      AND (P.ID_TIPOLOGIA = @IDTIPOLOGIA OR @IDTIPOLOGIA = 0 OR @IDTIPOLOGIA IS NULL)
      AND (U.ID = @UNIDADNEGOCIO OR @UNIDADNEGOCIO = 0 OR @UNIDADNEGOCIO IS NULL)
      AND (COSTO.ID = @IDCENTROCOSTO OR @IDCENTROCOSTO = 0 OR @IDCENTROCOSTO IS NULL)
    GROUP BY  P.ID, P.NUM_PROYECTO, Un.TIPO_UNEGOCIO, PR.MONTO,PR.MONEDA,COSTO.TIPO_CCOSTO, 
        CU.CODIGO, C.NOMBRE, P.NOMBRE, T.TIPO_TIPOLOGIA, 
        E.TIPO_EMPRESA, PR.AFECTAIVA, ST.TIPO_STATUS, 
        P.PROBABILIDAD, P.PORCENTAJE_PROBABILIDAD, P.PLAZO, 
        P.FECHA_INICIO, P.FECHA_TERMINO, P.FECHA_PLAZO_NEG,un.ID,costo.ID, 
        t.ID,e.ID,st.ID,C.ID,S.ID,S.NOMBRE;
END


ALTER PROCEDURE [dbo].[CREAR_PROYECTO]
@MONTO DECIMAL(10,2),
@MONEDA VARCHAR(200),
@AFECTAIVA VARCHAR(10),
@ID_TIPOLOGIA INT,
@NOMBRE VARCHAR(MAX),
@NUM_PROYECTO VARCHAR(MAX),
@FECHA_INICIO DATE,
@FECHA_TERMINO DATE,
@PLAZO INT,
@TIPO_EMPRESA INT,
@ID_CCOSTO_UNEGOCIO INT,
@ID_CLIENTE_SUCURSAL INT,
@STATUS_PROYECTO INT,
@PROBABILIDAD VARCHAR(200),
@PORCENTAJE_PROBABILIDAD DECIMAL(10,2),
@FECHA_PLAZO_NEG DATE,
@HHSOCIOS INT,
@HHSTAFF INT,
@HHCONSULTORA INT,
@HHCONSULTORB INT,
@HHCONSULTORC INT,
@IDSEGMENTOSOCIO INT,
@IDSEGMENTOSTAFF INT,
@IDSEGMENTOCONSULTORA INT,
@IDSEGMENTOCONSULTORB INT,
@IDSEGMENTOCONSULTORC INT,
@IDSEGMENTOFACTURA INT,
@ID_PROYECTO INT OUTPUT
AS
BEGIN
DECLARE @ID_PRESUPUESTO INT;
 
 DECLARE @MONTOIVA DECIMAL(10,2) = 0;
 IF(@AFECTAIVA = 'si')
 BEGIN
 SET @MONTOIVA = @MONTO * 0.19;
 END;
INSERT INTO PRESUPUESTO (MONTO,MONEDA,AFECTAIVA,MONTOIVA) VALUES (@MONTO,@MONEDA,@AFECTAIVA,@MONTOIVA)

SET @ID_PRESUPUESTO= SCOPE_IDENTITY();

INSERT INTO PROYECTO(ID_PRESUPUESTO,ID_TIPOLOGIA,NOMBRE,NUM_PROYECTO,FECHA,FECHA_INICIO,FECHA_TERMINO,PLAZO,TIPO_EMPRESA,ID_CCOSTO_UNEGOCIO,ID_CLIENTE_SUCURSAL,
STATUS_PROYECTO,PROBABILIDAD,PORCENTAJE_PROBABILIDAD,FECHA_PLAZO_NEG)
VALUES(@ID_PRESUPUESTO,@ID_TIPOLOGIA,@NOMBRE,@NUM_PROYECTO,GETDATE(),@FECHA_INICIO,@FECHA_TERMINO,@PLAZO,@TIPO_EMPRESA,@ID_CCOSTO_UNEGOCIO,@ID_CLIENTE_SUCURSAL
,@STATUS_PROYECTO,@PROBABILIDAD,@PORCENTAJE_PROBABILIDAD,@FECHA_PLAZO_NEG)




SET @ID_PROYECTO = SCOPE_IDENTITY();

INSERT INTO FACTURA (ID_PROYECTO,IDSEGMENTO) VALUES (@ID_PROYECTO,@IDSEGMENTOFACTURA)


IF(@HHSOCIOS>0)
BEGIN
DECLARE @COSTOUNITARIO DECIMAL(10,2)
SELECT @COSTOUNITARIO=COSTO_UNITARIO FROM RECURSO WHERE NOMBRE_RECURSO = 'Socio'  
INSERT INTO USUARIO_PROYECTO (ID_PROYECTO, ID_USUARIO,HH_SOCIOS,CostoUnitarioAsignado,IDSEGMENTO)
        SELECT @ID_PROYECTO, U.ID,@HHSOCIOS,@COSTOUNITARIO,@IDSEGMENTOSOCIO
        FROM USUARIO U
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Socio';
END;
IF(@HHSTAFF>0)
BEGIN
DECLARE @COSTOUNITARIOstaff DECIMAL(10,2)
SELECT @COSTOUNITARIOstaff=COSTO_UNITARIO FROM RECURSO WHERE NOMBRE_RECURSO = 'Staff'  
INSERT INTO USUARIO_PROYECTO (ID_PROYECTO, ID_USUARIO,HH_STAFF,CostoUnitarioAsignado,IDSEGMENTO)
        SELECT @ID_PROYECTO, U.ID,@HHSTAFF,@COSTOUNITARIOstaff,@IDSEGMENTOSTAFF
        FROM USUARIO U
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Staff';
END;
-- Para Consultores Externos
DECLARE @ConsultorA INT;
DECLARE @ConsultorB INT;
DECLARE @ConsultorC INT;

-- Asignar consultores A, B y C
SELECT 
    @ConsultorA = U.ID
FROM 
    USUARIO U
INNER JOIN 
    RECURSO R ON U.ID_RECURSO = R.ID
WHERE 
    R.NOMBRE_RECURSO = 'Consultor Externo'
ORDER BY 
    U.ID
OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY; -- Primer consultor (A)

SELECT 
    @ConsultorB = U.ID
FROM 
    USUARIO U
INNER JOIN 
    RECURSO R ON U.ID_RECURSO = R.ID
WHERE 
    R.NOMBRE_RECURSO = 'Consultor Externo'
ORDER BY 
    U.ID
OFFSET 1 ROWS FETCH NEXT 1 ROWS ONLY; -- Segundo consultor (B)

SELECT 
    @ConsultorC = U.ID
FROM 
    USUARIO U
INNER JOIN 
    RECURSO R ON U.ID_RECURSO = R.ID
WHERE 
    R.NOMBRE_RECURSO = 'Consultor Externo'
ORDER BY 
    U.ID
OFFSET 2 ROWS FETCH NEXT 1 ROWS ONLY; -- Tercer consultor (C)

-- Insertar horas para los consultores
IF (@HHCONSULTORA >= 0 AND @ConsultorA IS NOT NULL)
BEGIN
    DECLARE @COSTOUNITARIOCONSULTORA DECIMAL(10,2);
    SELECT @COSTOUNITARIOCONSULTORA = R.COSTO_UNITARIO
    FROM USUARIO U
	INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
    WHERE U.ID = @ConsultorA; -- Utilizar directamente el ID del usuario (consultor A)

    INSERT INTO USUARIO_PROYECTO (ID_PROYECTO, ID_USUARIO, HH_CONSULTORA, COSTOCONSULTORA, IDSEGMENTO)
    VALUES (@ID_PROYECTO, @ConsultorA, @HHCONSULTORA, @COSTOUNITARIOCONSULTORA, @IDSEGMENTOCONSULTORA);
END;

-- Para Consultor B
IF (@HHCONSULTORB >= 0 AND @ConsultorB IS NOT NULL)
BEGIN
    DECLARE @COSTOUNITARIOCONSULTORB DECIMAL(10,2);
    SELECT @COSTOUNITARIOCONSULTORB = R.COSTO_UNITARIO
    FROM USUARIO U
	INNER JOIN RECURSO R ON R.ID = U.ID_RECURSO
    WHERE U.ID = @ConsultorB; -- Utilizar directamente el ID del usuario (consultor B)

    INSERT INTO USUARIO_PROYECTO (ID_PROYECTO, ID_USUARIO, HH_CONSULTORB, COSTOCONSULTORB, IDSEGMENTO)
    VALUES (@ID_PROYECTO, @ConsultorB, @HHCONSULTORB, @COSTOUNITARIOCONSULTORB, @IDSEGMENTOCONSULTORB);
END;

-- Para Consultor C
IF (@HHCONSULTORC >= 0 AND @ConsultorC IS NOT NULL)
BEGIN
    DECLARE @COSTOUNITARIOCONSULTORC DECIMAL(10,2);
    SELECT @COSTOUNITARIOCONSULTORC = R.COSTO_UNITARIO
    FROM USUARIO U
	INNER JOIN RECURSO R ON R.ID = U.ID_RECURSO
    WHERE U.ID = @ConsultorC; -- Utilizar directamente el ID del usuario (consultor C)

    INSERT INTO USUARIO_PROYECTO (ID_PROYECTO, ID_USUARIO, HH_CONSULTORC, COSTOCONSULTORC, IDSEGMENTO)
    VALUES (@ID_PROYECTO, @ConsultorC, @HHCONSULTORC, @COSTOUNITARIOCONSULTORC, @IDSEGMENTOCONSULTORC);
END;



END;
