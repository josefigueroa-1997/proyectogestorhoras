

alter PROCEDURE [dbo].[EDITAR_PROYECTO]
    @IDPROYECTO INT,
    @IDPRESUPUESTO INT,
    @MONTO DECIMAL(10,2),
    @MONEDA VARCHAR(200),
    @AFECTAIVA VARCHAR(10),
    @ID_TIPOLOGIA INT,
    @NOMBRE VARCHAR(MAX),
    @FECHA_INICIO DATE,
    @FECHA_TERMINO DATE,
    @PLAZO INT,
    @TIPO_EMPRESA INT,
    @ID_CCOSTO_UNEGOCIO INT,  
    @STATUS_PROYECTO INT,
    @PROBABILIDAD VARCHAR(200),
    @PORCENTAJE_PROBABILIDAD DECIMAL(10,2),
    @FECHA_PLAZO_NEG DATE,
    @HHSOCIOS INT,
    @HHSTAFF INT,
    @HHCONSULTORA INT,
    @HHCONSULTORB INT,
    @HHCONSULTORC INT,
    @IDSEGMENTOSOCIO INT,
    @IDSEGMENTOSTAFF INT,
    @IDSEGMENTOCONSULTORA INT,
    @IDSEGMENTOCONSULTORB INT,
    @IDSEGMENTOCONSULTORC INT,
    @IDSEGMENTOFACTURA INT
AS
BEGIN
    DECLARE @MONTOIVA DECIMAL(10,2) = 0;
    IF(@AFECTAIVA = 'si')
    BEGIN
        SET @MONTOIVA = @MONTO * 0.19;
    END;

    UPDATE PRESUPUESTO 
    SET MONTO = @MONTO, 
        MONEDA = @MONEDA, 
        AFECTAIVA = @AFECTAIVA, 
        MONTOIVA = @MONTOIVA 
    WHERE ID = @IDPRESUPUESTO;

    UPDATE PROYECTO 
    SET ID_PRESUPUESTO = @IDPRESUPUESTO,
        ID_TIPOLOGIA = @ID_TIPOLOGIA,
        NOMBRE = @NOMBRE,
        FECHA_INICIO = @FECHA_INICIO,
        FECHA_TERMINO = @FECHA_TERMINO,
        PLAZO = @PLAZO,
        TIPO_EMPRESA = @TIPO_EMPRESA,
        ID_CCOSTO_UNEGOCIO = @ID_CCOSTO_UNEGOCIO,
        STATUS_PROYECTO = @STATUS_PROYECTO,
        PROBABILIDAD = @PROBABILIDAD,
        PORCENTAJE_PROBABILIDAD = @PORCENTAJE_PROBABILIDAD,
        FECHA_PLAZO_NEG = @FECHA_PLAZO_NEG 
    WHERE ID = @IDPROYECTO;

    UPDATE FACTURA 
    SET IDSEGMENTO = @IDSEGMENTOFACTURA 
    WHERE ID_PROYECTO = @IDPROYECTO;

    DECLARE @ESTADO INT;
    SELECT @ESTADO = STATUS_PROYECTO FROM PROYECTO WHERE ID = @IDPROYECTO;

    -- Llamada al procedimiento para Socios
    /*EXEC ActualizarUsuarioProyecto @IDPROYECTO, @HHSOCIOS, 'Socio', @IDSEGMENTOSOCIO, @ESTADO;*/

    -- Llamada al procedimiento para Staff
    /*EXEC ActualizarUsuarioProyecto @IDPROYECTO, @HHSTAFF, 'Staff', @IDSEGMENTOSTAFF, @ESTADO;*/

    -- Para Consultores Externos
    DECLARE @ConsultorA INT, @ConsultorB INT, @ConsultorC INT;

    -- Asignar consultores A, B y C
    SELECT @ConsultorA = U.ID
    FROM USUARIO U
    INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
    WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor A';

    SELECT @ConsultorB = U.ID
    FROM USUARIO U
    INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
    WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor B';

    SELECT @ConsultorC = U.ID
    FROM USUARIO U
    INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
    WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor C';

    -- Consultor A
    IF(@HHCONSULTORA <= 0)
    BEGIN
        DELETE UP
        FROM USUARIO_PROYECTO UP
        INNER JOIN USUARIO U ON UP.ID_USUARIO = U.ID
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor A'
          AND UP.ID_PROYECTO = @IDPROYECTO;
    END
    ELSE
    BEGIN
		DECLARE @CONSULTORAID INT;
			SELECT @CONSULTORAID=ID_USUARIO FROM USUARIO_PROYECTO UP  
			INNER JOIN USUARIO U ON U.ID = UP.ID_USUARIO
			INNER JOIN RECURSO R ON R.ID=U.ID_RECURSO
			WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor A' AND UP.ID_PROYECTO = @IDPROYECTO
        DECLARE @COSTOUNITARIOCONSULTORA DECIMAL(10,2);
        IF(@ESTADO = 1 OR @ESTADO = 5)
        BEGIN
            SELECT @COSTOUNITARIOCONSULTORA = COSTO_UNITARIO
            FROM RECURSO R
            WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor A';
        END;
		IF(@CONSULTORAID IS NULL)
		BEGIN
			 DECLARE @COSTOUNITARIOCONSULTORAA DECIMAL(10,2);
			SELECT @COSTOUNITARIOCONSULTORAA = R.COSTO_UNITARIO
			FROM USUARIO U
			INNER JOIN RECURSO R ON R.ID = U.ID_RECURSO
			WHERE U.ID = @ConsultorA;

			INSERT INTO USUARIO_PROYECTO (ID_PROYECTO, ID_USUARIO, HH_CONSULTORA, COSTOCONSULTORA, IDSEGMENTO)
			VALUES (@IDPROYECTO, @ConsultorA, @HHCONSULTORA, @COSTOUNITARIOCONSULTORAA, @IDSEGMENTOCONSULTORA);
		END;
		ELSE
		BEGIN
        UPDATE UP
        SET UP.HH_CONSULTORA = @HHCONSULTORA,
            UP.CostoUnitarioAsignado = CASE WHEN @ESTADO = 1 OR @ESTADO = 5 THEN @COSTOUNITARIOCONSULTORA ELSE UP.COSTOCONSULTORA END,
            UP.IDSEGMENTO = @IDSEGMENTOCONSULTORA
        FROM USUARIO_PROYECTO UP
        INNER JOIN USUARIO U ON UP.ID_USUARIO = U.ID
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor A'
          AND UP.ID_PROYECTO = @IDPROYECTO;
		END;
    END;

    -- Consultor B
    IF(@HHCONSULTORB <= 0)
    BEGIN
        DELETE UP
        FROM USUARIO_PROYECTO UP
        INNER JOIN USUARIO U ON UP.ID_USUARIO = U.ID
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor B'
          AND UP.ID_PROYECTO = @IDPROYECTO;
    END
    ELSE
    BEGIN
			DECLARE @CONSULTORBID INT;
			SELECT @CONSULTORBID=ID_USUARIO FROM USUARIO_PROYECTO UP  
			INNER JOIN USUARIO U ON U.ID = UP.ID_USUARIO
			INNER JOIN RECURSO R ON R.ID=U.ID_RECURSO
			WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor B' AND UP.ID_PROYECTO = @IDPROYECTO

        DECLARE @COSTOUNITARIOCONSULTORB DECIMAL(10,2);
        IF(@ESTADO = 1 OR @ESTADO = 5)
        BEGIN
            SELECT @COSTOUNITARIOCONSULTORB = COSTO_UNITARIO
            FROM RECURSO R
            WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor B';
        END;
		IF(@CONSULTORBID IS NULL)
		BEGIN
			 DECLARE @COSTOUNITARIOCONSULTORBB DECIMAL(10,2);
			SELECT @COSTOUNITARIOCONSULTORBB = R.COSTO_UNITARIO
			FROM USUARIO U
			INNER JOIN RECURSO R ON R.ID = U.ID_RECURSO
			WHERE U.ID = @ConsultorB;

			INSERT INTO USUARIO_PROYECTO (ID_PROYECTO, ID_USUARIO, HH_CONSULTORB, COSTOCONSULTORB, IDSEGMENTO)
			VALUES (@IDPROYECTO, @ConsultorB, @HHCONSULTORB, @COSTOUNITARIOCONSULTORBB, @IDSEGMENTOCONSULTORB);
		END;
		ELSE
		BEGIN
        UPDATE UP
        SET UP.HH_CONSULTORB = @HHCONSULTORB,
            UP.CostoUnitarioAsignado = CASE WHEN @ESTADO = 1 OR @ESTADO = 5 THEN @COSTOUNITARIOCONSULTORB ELSE UP.COSTOCONSULTORB END,
            UP.IDSEGMENTO = @IDSEGMENTOCONSULTORB
        FROM USUARIO_PROYECTO UP
        INNER JOIN USUARIO U ON UP.ID_USUARIO = U.ID
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor B'
          AND UP.ID_PROYECTO = @IDPROYECTO;
		END;
    END;

    -- Consultor C
	
	
    IF(@HHCONSULTORC <= 0)
	
    BEGIN
        DELETE UP
        FROM USUARIO_PROYECTO UP
        INNER JOIN USUARIO U ON UP.ID_USUARIO = U.ID
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor C'
          AND UP.ID_PROYECTO = @IDPROYECTO;
    END
    ELSE
    BEGIN
			DECLARE @CONSULTORCID INT;
			SELECT @CONSULTORCID=ID_USUARIO FROM USUARIO_PROYECTO UP  
			INNER JOIN USUARIO U ON U.ID = UP.ID_USUARIO
			INNER JOIN RECURSO R ON R.ID=U.ID_RECURSO
			WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor C' AND UP.ID_PROYECTO = @IDPROYECTO

        DECLARE @COSTOUNITARIOCONSULTORC DECIMAL(10,2);
        IF(@ESTADO = 1 OR @ESTADO = 5)
        BEGIN
            SELECT @COSTOUNITARIOCONSULTORC = COSTO_UNITARIO
            FROM RECURSO R
            WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor C';
        END;

		IF(@CONSULTORCID IS NULL)
		BEGIN
			 DECLARE @COSTOUNITARIOCONSULTORCC DECIMAL(10,2);
			SELECT @COSTOUNITARIOCONSULTORCC = R.COSTO_UNITARIO
			FROM USUARIO U
			INNER JOIN RECURSO R ON R.ID = U.ID_RECURSO
			WHERE U.ID = @ConsultorC;

			INSERT INTO USUARIO_PROYECTO (ID_PROYECTO, ID_USUARIO, HH_CONSULTORC, COSTOCONSULTORC, IDSEGMENTO)
			VALUES (@IDPROYECTO, @ConsultorC, @HHCONSULTORC, @COSTOUNITARIOCONSULTORCC, @IDSEGMENTOCONSULTORC);
		END;
		ELSE
		BEGIN
        UPDATE UP
        SET UP.HH_CONSULTORC = @HHCONSULTORC,
            UP.CostoUnitarioAsignado = CASE WHEN @ESTADO = 1 OR @ESTADO = 5 THEN @COSTOUNITARIOCONSULTORC ELSE UP.COSTOCONSULTORC END,
            UP.IDSEGMENTO = @IDSEGMENTOCONSULTORC
        FROM USUARIO_PROYECTO UP
        INNER JOIN USUARIO U ON UP.ID_USUARIO = U.ID
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor C'
          AND UP.ID_PROYECTO = @IDPROYECTO;
		END;
    END;


	/*HH SOCIOS*/
   IF(@HHSOCIOS <= 0)
    BEGIN
        DELETE UP
        FROM USUARIO_PROYECTO UP
        INNER JOIN USUARIO U ON UP.ID_USUARIO = U.ID
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Socio' 
          AND UP.ID_PROYECTO = @IDPROYECTO;
    END
    ELSE
    BEGIN
			DECLARE @SOCIOID INT;
			SELECT @SOCIOID=ID_USUARIO FROM USUARIO_PROYECTO UP  
			INNER JOIN USUARIO U ON U.ID = UP.ID_USUARIO
			INNER JOIN RECURSO R ON R.ID=U.ID_RECURSO
			WHERE R.NOMBRE_RECURSO = 'Socio'  AND UP.ID_PROYECTO = @IDPROYECTO

        DECLARE @COSTOUNITARIO DECIMAL(10,2);
        IF(@ESTADO = 1 OR @ESTADO = 5)
        BEGIN
            SELECT @COSTOUNITARIO = COSTO_UNITARIO
            FROM RECURSO R
            WHERE R.NOMBRE_RECURSO = 'Socio' ;
        END;
		IF(@SOCIOID IS NULL)
		BEGIN
			INSERT INTO USUARIO_PROYECTO (ID_PROYECTO, ID_USUARIO,HH_SOCIOS,CostoUnitarioAsignado,IDSEGMENTO)
			SELECT @IDPROYECTO, U.ID,@HHSOCIOS,@COSTOUNITARIO,@IDSEGMENTOSOCIO
			FROM USUARIO U
			INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
			WHERE R.NOMBRE_RECURSO = 'Socio';
		END;
		ELSE
		BEGIN
        UPDATE UP
        SET UP.HH_SOCIOS = @HHSOCIOS,
            UP.CostoUnitarioAsignado = CASE WHEN @ESTADO = 1 OR @ESTADO = 5 THEN @COSTOUNITARIO ELSE UP.CostoUnitarioAsignado END,
            UP.IDSEGMENTO = @IDSEGMENTOSOCIO
        FROM USUARIO_PROYECTO UP
        INNER JOIN USUARIO U ON UP.ID_USUARIO = U.ID
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Socio' 
          AND UP.ID_PROYECTO = @IDPROYECTO;
		END;
    END;


	/*HHSTAFF*/
	IF(@HHSTAFF <= 0)
    BEGIN
        DELETE UP
        FROM USUARIO_PROYECTO UP
        INNER JOIN USUARIO U ON UP.ID_USUARIO = U.ID
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Staff' 
          AND UP.ID_PROYECTO = @IDPROYECTO;
    END
    ELSE
    BEGIN
		DECLARE @STAFFID INT;
			SELECT @STAFFID=ID_USUARIO FROM USUARIO_PROYECTO UP  
			INNER JOIN USUARIO U ON U.ID = UP.ID_USUARIO
			INNER JOIN RECURSO R ON R.ID=U.ID_RECURSO
			WHERE R.NOMBRE_RECURSO = 'Staff'  AND UP.ID_PROYECTO = @IDPROYECTO
        DECLARE @COSTOUNITARIOS DECIMAL(10,2);
        IF(@ESTADO = 1 OR @ESTADO = 5)
        BEGIN
            SELECT @COSTOUNITARIOS = COSTO_UNITARIO
            FROM RECURSO R
            WHERE R.NOMBRE_RECURSO = 'Staff' ;
        END;
		IF(@STAFFID IS NULL)
		BEGIN
			DECLARE @COSTOUNITARIOstaff DECIMAL(10,2)
			SELECT @COSTOUNITARIOstaff=COSTO_UNITARIO FROM RECURSO WHERE NOMBRE_RECURSO = 'Staff'  
			INSERT INTO USUARIO_PROYECTO (ID_PROYECTO, ID_USUARIO,HH_STAFF,CostoUnitarioAsignado,IDSEGMENTO)
			SELECT @IDPROYECTO, U.ID,@HHSTAFF,@COSTOUNITARIOstaff,@IDSEGMENTOSTAFF
			FROM USUARIO U
			INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
			WHERE R.NOMBRE_RECURSO = 'Staff';
		END;
		ELSE
		BEGIN
        UPDATE UP
        SET UP.HH_STAFF = @HHSTAFF,
            UP.CostoUnitarioAsignado = CASE WHEN @ESTADO = 1 OR @ESTADO = 5 THEN @COSTOUNITARIOS ELSE UP.CostoUnitarioAsignado END,
            UP.IDSEGMENTO = @IDSEGMENTOSTAFF
        FROM USUARIO_PROYECTO UP
        INNER JOIN USUARIO U ON UP.ID_USUARIO = U.ID
        INNER JOIN RECURSO R ON U.ID_RECURSO = R.ID
        WHERE R.NOMBRE_RECURSO = 'Staff' 
          AND UP.ID_PROYECTO = @IDPROYECTO;
		END;
    END;

END;


ALTER PROCEDURE [dbo].[OBTENERPROYECTOS]
    @ID INT,
    @IDCLIENTE INT,
    @NOMBRE VARCHAR(200),
    @ID_TIPOEMPRESA INT,
    @STATUS_PROYECTO INT,
    @NUMPROYECTO VARCHAR(100),
    @IDTIPOLOGIA INT,
    @UNIDADNEGOCIO INT,
    @IDCENTROCOSTO INT
AS
BEGIN
    SELECT 
        P.ID,
        P.NUM_PROYECTO,
        Un.TIPO_UNEGOCIO,
        Un.ID AS IDUNEGOCIO,
        COSTO.ID AS IDCOSTO,
        COSTO.TIPO_CCOSTO,
        CU.CODIGO,
        C.ID AS IDCLIENTE,
        C.NOMBRE AS NOMBRECLIENTE,
        P.NOMBRE AS NOMBREPROYECTO,
        T.TIPO_TIPOLOGIA,
        T.ID AS IDTIPOLOGIA,
        E.TIPO_EMPRESA,
        E.ID AS IDEMPRESA,
		PR.ID AS IDPRESUPESTO,
        PR.AFECTAIVA,
        PR.MONTO,
        PR.MONEDA,
        ST.TIPO_STATUS,
        ST.ID AS STATUSPROYECTO,
        P.PROBABILIDAD,
        P.PORCENTAJE_PROBABILIDAD,
        P.PLAZO,
        P.FECHA_INICIO,
        P.FECHA_TERMINO,
        P.FECHA_PLAZO_NEG,
        S.ID AS IDDEPARTAMENTO,
        S.NOMBRE AS NOMBREDEPARTAMENTO,

        -- Horas y Costo para Socios
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Socio' THEN UP.HH_SOCIOS END) AS HH_SOCIOS,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Socio' THEN CT.CUENTA END) AS CUENTA_SOCIOS,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Socio' THEN CT.IDCUENTA END) AS IDCUENTA_SOCIOS,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Socio' THEN SE.NOMBRE END) AS SEGMENTO_SOCIOS,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Socio' THEN UP.CostoUnitarioAsignado END) AS COSTO_SOCIO,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Socio' THEN R.NOMBRE_RECURSO END) AS NOMBRE_RECURSO,

        -- Horas y Costo para Staff
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Staff' THEN UP.HH_STAFF END) AS HH_STAFF,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Staff' THEN CT.CUENTA END) AS CUENTA_STAFF,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Staff' THEN CT.IDCUENTA END) AS IDCUENTA_STAFF,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Staff' THEN SE.NOMBRE END) AS SEGMENTO_STAFF,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Staff' THEN UP.CostoUnitarioAsignado END) AS COSTO_STAFF,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Staff' THEN R.NOMBRE_RECURSO END) AS NOMBRE_RECURSO,

        -- Horas y Costo para Consultor A
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor A' THEN UP.HH_CONSULTORA END) AS HH_CONSULTOR_A,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor A' THEN CT.CUENTA END) AS CUENTA_CONSULTOR_A,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor A' THEN CT.IDCUENTA END) AS IDCUENTA_CONSULTOR_A,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor A' THEN SE.NOMBRE END) AS SEGMENTO_CONSULTOR_A,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor A' THEN UP.COSTOCONSULTORA END) AS COSTO_CONSULTORA,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor A' THEN R.TIPO_CONSULTOR END) AS TIPO_CONSULTOR,

        -- Horas y Costo para Consultor B
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor B' THEN UP.HH_CONSULTORB END) AS HH_CONSULTOR_B,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor B' THEN CT.CUENTA END) AS CUENTA_CONSULTOR_B,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor B' THEN CT.IDCUENTA END) AS IDCUENTA_CONSULTOR_B,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor B' THEN SE.NOMBRE END) AS SEGMENTO_CONSULTOR_B,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor B' THEN UP.COSTOCONSULTORB END) AS COSTO_CONSULTORB,
		 MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor B' THEN R.TIPO_CONSULTOR END) AS TIPO_CONSULTOR,

        -- Horas y Costo para Consultor C
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor C' THEN UP.HH_CONSULTORC END) AS HH_CONSULTOR_C,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor C' THEN CT.CUENTA END) AS CUENTA_CONSULTOR_C,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor C' THEN CT.IDCUENTA END) AS IDCUENTA_CONSULTOR_C,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor C' THEN SE.NOMBRE END) AS SEGMENTO_CONSULTOR_C,
        MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor C' THEN UP.COSTOCONSULTORC END) AS COSTO_CONSULTORC,
		MAX(CASE WHEN R.NOMBRE_RECURSO = 'Consultor Externo' AND R.TIPO_CONSULTOR = 'Consultor C' THEN R.TIPO_CONSULTOR END) AS TIPO_CONSULTOR

    FROM PROYECTO P
    INNER JOIN SUCURSAL_CLIENTE SC ON SC.ID = P.ID_CLIENTE_SUCURSAL
    LEFT JOIN USUARIO_PROYECTO UP ON UP.ID_PROYECTO = P.ID
    LEFT JOIN USUARIO U ON U.ID = UP.ID_USUARIO
    LEFT JOIN RECURSO R ON R.ID = U.ID_RECURSO
    LEFT JOIN CLIENTE C ON C.ID = SC.ID_CLIENTE
    LEFT JOIN SUCURSAL S ON S.ID = SC.ID_SUCURSAL
    LEFT JOIN TIPOLOGIA T ON T.ID = P.ID_TIPOLOGIA
    LEFT JOIN EMPRESA E ON E.ID = P.TIPO_EMPRESA
    LEFT JOIN CCOSTO_UNEGOCIO CU ON CU.ID = P.ID_CCOSTO_UNEGOCIO 
    LEFT JOIN CCOSTO COSTO ON COSTO.ID = CU.ID_CCOSTO
    LEFT JOIN UNEGOCIO Un ON Un.ID = CU.ID_UNEGOCIO
    LEFT JOIN PRESUPUESTO PR ON PR.ID = P.ID_PRESUPUESTO
    LEFT JOIN STATUS_PROYECTO ST ON ST.ID = P.STATUS_PROYECTO
    LEFT JOIN SEGMENTO SE ON UP.IDSEGMENTO = SE.ID
    LEFT JOIN CUENTA CT ON CT.ID = SE.ID_CUENTA
   
    WHERE (P.ID = @ID OR @ID = 0 OR @ID IS NULL) 
      AND (C.ID = @IDCLIENTE OR @IDCLIENTE = 0 OR @IDCLIENTE IS NULL) 
      AND (P.NOMBRE = @NOMBRE OR @NOMBRE IS NULL)
      AND (P.TIPO_EMPRESA = @ID_TIPOEMPRESA OR @ID_TIPOEMPRESA = 0 OR @ID_TIPOEMPRESA IS NULL) 
      AND (ST.ID = @STATUS_PROYECTO OR @STATUS_PROYECTO = 0 OR @STATUS_PROYECTO IS NULL)
      AND (P.NUM_PROYECTO = @NUMPROYECTO OR @NUMPROYECTO IS NULL)
      AND (P.ID_TIPOLOGIA = @IDTIPOLOGIA OR @IDTIPOLOGIA = 0 OR @IDTIPOLOGIA IS NULL)
      AND (U.ID = @UNIDADNEGOCIO OR @UNIDADNEGOCIO = 0 OR @UNIDADNEGOCIO IS NULL)
      AND (COSTO.ID = @IDCENTROCOSTO OR @IDCENTROCOSTO = 0 OR @IDCENTROCOSTO IS NULL)
    GROUP BY  P.ID, P.NUM_PROYECTO, Un.TIPO_UNEGOCIO, PR.MONTO,PR.MONEDA,COSTO.TIPO_CCOSTO, 
        CU.CODIGO, C.NOMBRE, P.NOMBRE, T.TIPO_TIPOLOGIA, 
        E.TIPO_EMPRESA, PR.AFECTAIVA, ST.TIPO_STATUS, 
        P.PROBABILIDAD, P.PORCENTAJE_PROBABILIDAD, P.PLAZO, 
        P.FECHA_INICIO, P.FECHA_TERMINO, P.FECHA_PLAZO_NEG,un.ID,costo.ID, 
        t.ID,e.ID,st.ID,C.ID,PR.ID,S.ID,S.NOMBRE;
END




ALTER PROCEDURE [dbo].[OBTENERGASTOSPROYECTO]
@IDPROYECTO INT
AS
BEGIN

SELECT G.ID AS IDGASTOS,G.NOMBRE AS NOMBREGASTO,SE.ID AS IDSEGMENTO,SE.NOMBRE AS NOMBRSEGMENTO,C.CUENTA  ,C.IDCUENTA,PG.MONTO FROM PROYECTO P

INNER JOIN PROYECTO_GASTOS PG ON P.ID = PG.ID_PROYECTO
INNER JOIN GASTOS G ON G.ID = PG.ID_GASTOS
INNER JOIN SEGMENTO SE ON SE.ID = PG.IDSEGMENTO
INNER JOIN CUENTA C ON C.ID = SE.ID_CUENTA
WHERE P.ID = @IDPROYECTO
END;
