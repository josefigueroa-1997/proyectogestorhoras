
ALTER TABLE TIPOLOGIA
DROP COLUMN MONTO

ALTER TABLE TIPOLOGIA
ADD  MONTO DECIMAL(12,2) not null


ALTER TABLE TIPOLOGIA
ADD DESDE DATE

ALTER TABLE TIPOLOGIA
ADD HASTA DATE

ALTER TABLE TIPOLOGIA
ADD HHSOCIOS INT

ALTER TABLE TIPOLOGIA
ADD HHSTAFF INT

ALTER TABLE TIPOLOGIA
ADD CONSULTORA INT

ALTER TABLE TIPOLOGIA
ADD CONSUTLROB INT

ALTER TABLE TIPOLOGIA
ADD CONSULTORC INT

ALTER TABLE TIPOLOGIA
DROP COLUMN DESDE

ALTER TABLE TIPOLOGIA
DROP COLUMN HASTA


alter table tipologia
aDD DESDE int

alter table tipologia
aDD  HASTA int



CREATE TABLE COSTO_PROMEDIO(

	ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
	TIPO_RECURSO VARCHAR(200),
	VALOR DECIMAL(10,2)

);



ALTER PROCEDURE [dbo].[EDITARUSUARIO]
    @IDUSUARIO INT,
    @NOMBRE VARCHAR(200),
    @NOMBRE_USUARIO VARCHAR(200),
    @TELEFONO VARCHAR(20),
    @EMAIL VARCHAR(90),
    @NUMERO_HORAS_SEMANALES INT,
    @COSTO_UNITARIO DECIMAL(10,2),
    @PORCENTAJEHORAS FLOAT,
    @FECHAINICIO DATE,
    @FECHAFIN DATE
AS
BEGIN
    DECLARE @IDRECURSO INT;
    DECLARE @HHANUALES DECIMAL(10,2);
    DECLARE @TOTALHHASIGNADAS INT;
    DECLARE @RECURSO VARCHAR(100);
    DECLARE @PROMEDIO_COSTO DECIMAL(10,2);
    DECLARE @TOTALHHANUAL DECIMAL(10,2);
    DECLARE @HHANUALES_ACTUAL DECIMAL(10,2);

    -- Cálculo de horas anuales
    SET @HHANUALES = dbo.CALCULARHHANUALES(@NUMERO_HORAS_SEMANALES, @PORCENTAJEHORAS);

    -- Obtener tipo de recurso (Socio, Staff, Consultor Externo) para este usuario
    SELECT @RECURSO = R.NOMBRE_RECURSO, @HHANUALES_ACTUAL = R.HH_ANUALES
    FROM USUARIO U
    INNER JOIN RECURSO R ON R.ID = U.ID_RECURSO
    WHERE U.ID = @IDUSUARIO;

    -- Si el recurso es 'Socio' o 'Staff', restar las horas asignadas solo de este usuario
    SELECT @TOTALHHASIGNADAS = ISNULL(SUM(REGISTRO_HH_PROYECTO), 0) 
    FROM PLANILLA_USUSARIO_PROYECTO pu
    INNER JOIN USUARIO_PROYECTO UP ON UP.ID = PU.ID_USU_PROY
    INNER JOIN PROYECTO P ON P.ID = up.ID_PROYECTO
    WHERE UP.ID_USUARIO = @IDUSUARIO AND P.STATUS_PROYECTO = 2;

    -- Actualizar el recurso con los nuevos datos
    UPDATE RECURSO 
    SET 
        NUMERO_HORAS = @NUMERO_HORAS_SEMANALES,
        COSTO_UNITARIO = @COSTO_UNITARIO,
        PROCENTAJE_PROYECTO = @PORCENTAJEHORAS,
        DESDE = @FECHAINICIO,
        HASTA = @FECHAFIN,
        HH_ANUALES = @HHANUALES
    WHERE ID = (SELECT ID_RECURSO FROM USUARIO WHERE ID = @IDUSUARIO);

    -- Actualizar el usuario con los nuevos datos
    UPDATE USUARIO 
    SET 
        NOMBRE = @NOMBRE,
        NOMBRE_USUARIO = @NOMBRE_USUARIO,
        TELEFONO = @TELEFONO,
        EMAIL = @EMAIL 
    WHERE ID = @IDUSUARIO;

    -- Actualizar el total de horas anuales
    IF (@RECURSO = 'Socio' OR @RECURSO = 'Staff')
    BEGIN
        -- Eliminar el HHANUALES actual del total
        SELECT @TOTALHHANUAL = TOTAL_HH_ANUALES FROM TOTAL_RECURSOS WHERE TIPO_RECURSO = @RECURSO;
        
        -- Actualizar el total
        SET @TOTALHHANUAL = @TOTALHHANUAL - @HHANUALES_ACTUAL + @HHANUALES;

        -- Actualizar en TOTAL_RECURSOS
        UPDATE TOTAL_RECURSOS
        SET TOTAL_HH_ANUALES = @TOTALHHANUAL
        WHERE TIPO_RECURSO = @RECURSO;

        -- Actualizar el costo promedio si es necesario
        SELECT @PROMEDIO_COSTO = AVG(COSTO_UNITARIO)
        FROM RECURSO
        WHERE NOMBRE_RECURSO = @RECURSO;

        UPDATE COSTO_PROMEDIO
        SET VALOR = @PROMEDIO_COSTO
        WHERE TIPO_RECURSO = @RECURSO;
    END;

END;


ALTER PROCEDURE [dbo].[INGRESAR_USUARIO]
@NOMBRE VARCHAR(200),
@NOMBRE_USUARIO VARCHAR(200),
@CONTRASENA NVARCHAR(MAX),
@TELEFONO VARCHAR(20),
@EMAIL VARCHAR(90),
@ID_ROL INT,
@NOMBRE_RECURSO VARCHAR(200),
@NUMERO_HORAS_SEMANALES INT,
@COSTO_UNITARIO DECIMAL(10,2),
@PORCENTAJEHORAS FLOAT,
@FECHAINICIO DATE,
@FECHAFIN DATE
AS
BEGIN
DECLARE @IDRECURSO INT;
DECLARE @HHMENSUALES DECIMAL(10,2);
DECLARE @HHANUALES DECIMAL(10,2);
DECLARE @PROMEDIO_COSTO DECIMAL(10,2);
declare @TIPO_CONSULTOR varchar(200);


 IF @NOMBRE_RECURSO = 'Consultor Externo'
    BEGIN
        DECLARE @CONSULTOR_COUNT INT;

        -- Contar cuántos consultores externos ya existen
        SELECT @CONSULTOR_COUNT = COUNT(*)
        FROM RECURSO
        WHERE NOMBRE_RECURSO = 'Consultor Externo';

        -- Determinar el siguiente tipo de consultor
        SET @TIPO_CONSULTOR = 'Consultor ' + CHAR(65 + @CONSULTOR_COUNT); -- A = 65, B = 66, C = 67, etc.
    END
ELSE
BEGIN
SET @TIPO_CONSULTOR = ''
END


SET @HHANUALES = dbo.CALCULARHHANUALES(@NUMERO_HORAS_SEMANALES, @PORCENTAJEHORAS);
SET @HHMENSUALES =  dbo.CALCULARHHMENSUALES(@NUMERO_HORAS_SEMANALES, @PORCENTAJEHORAS);
INSERT INTO RECURSO (NOMBRE_RECURSO,NUMERO_HORAS,COSTO_UNITARIO,PROCENTAJE_PROYECTO,HH_MENSUALES,DESDE,HASTA,HH_ANUALES,TIPO_CONSULTOR) VALUES (@NOMBRE_RECURSO,@NUMERO_HORAS_SEMANALES,@COSTO_UNITARIO,@PORCENTAJEHORAS,@HHMENSUALES,@FECHAINICIO,@FECHAFIN,@HHANUALES,@TIPO_CONSULTOR)

SET @IDRECURSO = SCOPE_IDENTITY();


INSERT INTO USUARIO(NOMBRE,NOMBRE_USUARIO,CONTRASENA,TELEFONO,EMAIL,ID_ROL,ID_RECURSO) VALUES(@NOMBRE,@NOMBRE_USUARIO,@CONTRASENA,@TELEFONO,@EMAIL,@ID_ROL,@IDRECURSO)


  IF @NOMBRE_RECURSO = 'Socio'
    BEGIN
        -- Actualizar horas anuales en TOTAL_HORAS_ANUALES
        UPDATE TOTAL_RECURSOS
        SET TOTAL_HH_ANUALES = TOTAL_HH_ANUALES + @HHANUALES
        WHERE TIPO_RECURSO = 'Socio';

        -- Calcular el promedio de costo unitario para 'Socio'
        SELECT @PROMEDIO_COSTO = AVG(COSTO_UNITARIO)
        FROM RECURSO
        WHERE NOMBRE_RECURSO = 'Socio';

        -- Actualizar o insertar en COSTO_PROMEDIO
        IF EXISTS (SELECT 1 FROM COSTO_PROMEDIO WHERE TIPO_RECURSO = 'Socio')
        BEGIN
            -- Si existe, actualizar el valor promedio
            UPDATE COSTO_PROMEDIO
            SET VALOR = @PROMEDIO_COSTO
            WHERE TIPO_RECURSO = 'Socio';
        END
        ELSE
        BEGIN
            -- Si no existe, insertar un nuevo registro
            INSERT INTO COSTO_PROMEDIO (TIPO_RECURSO, VALOR)
            VALUES ('Socio', @PROMEDIO_COSTO);
			INSERT INTO TOTAL_RECURSOS(TIPO_RECURSO, TOTAL_HH_ANUALES)
            VALUES ('Socio', @HHANUALES);
        END
    END
    ELSE IF @NOMBRE_RECURSO = 'Staff'
    BEGIN
        -- Actualizar horas anuales en TOTAL_HORAS_ANUALES
        UPDATE TOTAL_RECURSOS
        SET TOTAL_HH_ANUALES = TOTAL_HH_ANUALES + @HHANUALES
        WHERE TIPO_RECURSO = 'Staff';

        -- Calcular el promedio de costo unitario para 'Staff'
        SELECT @PROMEDIO_COSTO = AVG(COSTO_UNITARIO)
        FROM RECURSO
        WHERE NOMBRE_RECURSO = 'Staff';

        -- Actualizar o insertar en COSTO_PROMEDIO
        IF EXISTS (SELECT 1 FROM COSTO_PROMEDIO WHERE TIPO_RECURSO = 'Staff')
        BEGIN
            -- Si existe, actualizar el valor promedio
            UPDATE COSTO_PROMEDIO
            SET VALOR = @PROMEDIO_COSTO
            WHERE TIPO_RECURSO = 'Staff';
        END
        ELSE
        BEGIN
            -- Si no existe, insertar un nuevo registro
            INSERT INTO COSTO_PROMEDIO (TIPO_RECURSO, VALOR)
            VALUES ('Staff', @PROMEDIO_COSTO);
			INSERT INTO TOTAL_RECURSOS(TIPO_RECURSO, TOTAL_HH_ANUALES)
            VALUES ('Staff', @HHANUALES);
        END
    END
END;



ALTER PROCEDURE [dbo].[BUSCAR_USUARIO]
    @ID INT,
    @NOMBRE VARCHAR(200),
    @ID_RECURSO INT
AS
BEGIN
    SELECT U.ID,
           U.NOMBRE,
           U.NOMBRE_USUARIO,
           U.TELEFONO,
           U.EMAIL,
           
           CASE 
               WHEN R.NOMBRE_RECURSO = 'Consultor Externo' THEN 
                   R.TIPO_CONSULTOR  -- Usar el campo TIPO_CONSULTOR en lugar de generar letras correlativas
               ELSE 
                   CONCAT(R.NOMBRE_RECURSO, ' ', ROW_NUMBER() OVER (PARTITION BY R.NOMBRE_RECURSO ORDER BY U.ID))
           END AS NOMBRE_RECURSO_CORRELATIVO,
           R.NUMERO_HORAS,
           R.COSTO_UNITARIO,
           P.NOMBRE AS ROL,
           R.HH_MENSUALES,
		   R.ID AS ID_RECURSO,
		   R.HH_ANUALES,
		   R.PROCENTAJE_PROYECTO,
		   R.DESDE,
		   R.HASTA,
		   R.TIPO_CONSULTOR
		
    FROM USUARIO U
    INNER JOIN RECURSO R ON R.ID = U.ID_RECURSO 
    INNER JOIN ROL P ON P.ID = U.ID_ROL
    WHERE (U.ID = @ID OR @ID IS NULL OR @ID = 0) 
      AND (U.NOMBRE = @NOMBRE OR @NOMBRE IS NULL) 
      AND (U.ID_RECURSO = @ID_RECURSO OR @ID_RECURSO IS NULL OR @ID_RECURSO = 0)
    ORDER BY CASE 
                 WHEN R.NOMBRE_RECURSO = 'Socio' THEN 1
                 WHEN R.NOMBRE_RECURSO = 'Staff' THEN 2
                 WHEN R.NOMBRE_RECURSO = 'Consultor Externo' THEN 3
                 ELSE 4
             END
END;