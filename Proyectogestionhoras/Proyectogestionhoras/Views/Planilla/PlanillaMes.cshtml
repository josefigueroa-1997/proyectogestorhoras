@{
    ViewData["Title"] = "Planilla Mes";
}

@{
    var proyectosJson = ViewData["Proyectos"];
}

<style>
    body {
        font-family: 'Montserrat', sans-serif;
        background-color: #f5f5f5;
    }

    .form-container {
        max-width: 1200px;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-top:50px;
    }

    .form-title {
        font-size: 1.8rem;
        font-weight: 600;
        color: #333;
        text-align: center;
        margin-bottom: 10px;
    }

    .form-subtitle {
        font-size: 1.2rem;
        color: #666;
        text-align: center;
        margin-bottom: 20px;
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .form-group {
        flex: 1;
        min-width: 220px;
    }

        .form-group label {
            display: block;
            font-size: 1rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 5px;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px;
            font-size: 1rem;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        .form-group select {
            cursor: pointer;
        }

    .form-group-radio {
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .form-group-radio label {
            margin-bottom: 0;
        }

    .button-container {
        text-align: center;
        margin-top: 20px;
    }

    .submit-btn, .planilla-btn {
        padding: 8px 20px; /* Disminuir el padding */
        font-size: 0.9rem;
        font-weight: 600;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
        margin-left: 10px;
    }

    .submit-btn {
        color: #fff;
        background-color: #fcaa67;
    }

        .submit-btn:hover {
            background-color: #e39450;
        }


    .planilla-btn {
        color: #fff;
        background-color: royalblue;
    }


    .horas-disponibles {
        display: block;
        font-size: 0.9rem;
        color: #666;
        margin-top: 5px;
        margin-bottom: 10px;
    }

    .eliminar-btn {
        padding: 10px 30px;
        font-size: 1rem;
        font-weight: 600;
        color: #fff;
        background-color: red;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .tabla-margen td {
        text-align: right;
    }

    .alert {
        padding: 15px;
        font-size: 16px;
        font-weight: bold;
        border: 1px solid transparent;
        border-radius: 5px;
        margin-bottom: 15px;
        text-align: center;
        transition: opacity 0.3s ease-in-out;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border-color: #f5c6cb;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border-color: #c3e6cb;
    }
</style>

<div class="form-container">
    @{
        string? nombre = Context.Session.GetString("nombre");
        int? idusuario = Context.Session.GetInt32("id");
        string? recurso = Context.Session.GetString("recurso");
    }
    @if (TempData["ErrorMessageEliminacion"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErrorMessageEliminacion"]
        </div>
    }
    @if (TempData["SuccessMessageEliminacion"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["SuccessMessageEliminacion"]
        </div>
    }
    @if (ViewBag.Planilla != null)
    {
        @foreach (var planilla in ViewBag.Planilla)
        {
            <h1 class="form-title">Planilla: @planilla.NombreUsuario</h1>
            <p class="form-subtitle">Rol:@planilla.Rol</p>
    
            <p class="form-subtitle">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(planilla.Mes) - @planilla.Anio</p>
            <div class="button-container">
                <a href="@Url.Action("ExportarExcel", new { idplanilla = planilla.IdPlanilla })" class="planilla-btn" style="background-color: #28a745; color: white;">Descargar Planilla</a>
            </div>
            break;
        }
    }
    <br />
    <div class="form-group">
        <table id="planillausuario" style="width: 100%; border-collapse: collapse; text-align: left;">
            <thead>
                <tr style="background-color: #d9e2f3; color: black;">
                    <th style="padding: 10px; border: 1px solid #ddd;">Fecha</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Actividad</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Proyecto</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Número Horas</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Costo Unitario</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Costo Total</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Observaciones</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Editar</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Eliminar</th>
                    
                </tr>
            </thead>
            <tbody id="tabla-body">
                
                @if (ViewBag.Planilla != null)
                {
                    
                        decimal totalhoras = 0;
                        decimal totalcostoshoras = 0;

                    @foreach (var planilla in ViewBag.Planilla)
                    {
                        <tr>
                            
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:center;">

                                @if (planilla.estado == 1 || planilla.estado == 2)
                                {
                                    <input type="date" name="fecharegistro" value="@planilla.FechaRegistro.ToString("yyyy-MM-dd")" max="@DateTime.Now.ToString("yyyy-MM-dd")" />
                                }
                                else
                                {
                                    <input type="hidden" name="fecharegistro" />
                                    @planilla.FechaRegistro.ToString("dd/MM/yyyy")
                                }

                               
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:center;">
                                @if (planilla.estado == 1 || planilla.estado == 2)
                                {
                                    <input type="hidden" name="controlhhactividad" class="controlhh-hidden" value="">
                                    <select name="idactividad" class="actividadSelect" data-idactividad="@planilla.IdActividad">
                                        <option value="">Cargando...</option>
                                    </select>

                                }
                                else
                                {
                                    <input type="hidden" name="idactividad" value="@planilla.IdActividad"/>
                                    @planilla.NombreActividad
                                }

                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd; ">
                                @if(planilla.estado == 1 || planilla.estado == 2)
                                {
                                    
                                    <select name="idproyecto" class="nombreSelect">
                                        @foreach (var actividad in ViewBag.Actividad)
                                        {
                                            if (actividad.Id == planilla.IdActividad && actividad.Controlhh == "Proyecto En Ejecucion")
                                            {

                                                @foreach (var proyecto in ViewBag.Ejecucion)
                                                {
                                                    if (proyecto.Nombre == planilla.Nombre)
                                                    {
                                                        <option value="@proyecto.Id" selected>@proyecto.Nombre</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@proyecto.Id">@proyecto.Nombre</option>
                                                    }
                                                }



                                            }
                                            if (actividad.Id == planilla.IdActividad && actividad.Controlhh == "Proyecto En Negociación")
                                            {
                                                @foreach (var p in ViewBag.Negociacion)
                                                {
                                                    if (p.Nombre == planilla.Nombre)
                                                    {
                                                        <option value="@p.Id" selected>@p.Nombre</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@p.Id">@p.Nombre</option>
                                                    }
                                                }
                                            }
                                            @if (actividad.Id == planilla.IdActividad && actividad.Controlhh == "Empresa")
                                            {
                                                @foreach (var p in ViewBag.Subactividades)
                                                {
                                                    // Filtrar solo las subactividades con el mismo Id de actividad
                                                    if (p.Idactividad == actividad.Id)
                                                    {
                                                        if (p.Nombre == planilla.Nombre)
                                                        {
                                                            <option value="@p.Id" selected>@p.Nombre</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@p.Id">@p.Nombre</option>
                                                        }
                                                    }
                                                }
                                            }

                                        }
                                      
                                        

                                    </select>
                                }
                                else
                                {
                                    <input type="hidden" name="idproyecto" value="@planilla.IdProyecto" />
                                    @planilla.Nombre
                                }
                            </td>
                            
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:right;">
                                @if (planilla.estado == 1 || planilla.estado == 2)
                                {
                                    <input type="number" name="hhregistradas" value="@planilla.HHregistradas.ToString(System.Globalization.CultureInfo.InvariantCulture)" step="0.5" min="0" />
                                }

                                else
                                {
                                    <input type="hidden" name="hhregistradas" value="@planilla.HHregistradas" />
                                    @planilla.HHregistradas
                                }
                                
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:right;">
                               
                                @String.Format("{0:N0}", @planilla.CostoUnitario)
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:right;">
                                @String.Format("{0:N0}", @planilla.CostoTotal)
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:center;">
                                @planilla.Observaciones
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:center;">
                                @if (planilla.estado == 1 || planilla.estado == 2)
                                {
                                    <form>

                                    </form>
                                    <input type="hidden" class="idusuarioproyecto" name="idusuarioproyecto" value="@planilla.idusuproy"/>
                                    <input type="hidden" name="idregistro" value="@planilla.IdRegistro" />
                                    <input class="proyectoid" type="hidden" name="idproyecto" value="@planilla.IDPROYECTO" />
                                    <button type="button" class="editarBtn" style="background-color: orange; color: white; border: none; padding: 5px 10px; cursor: pointer;">
                                             
                                              
                                        Editar
                                    </button>
                                }
                                
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align: center;">
                                @if (planilla.estado == 1 || planilla.estado == 2)
                                {
                                    <form action="@Url.Action("EliminarRegistroPlanilla", "Planilla")" method="post" onsubmit="return confirmarEliminacion();">
                                        <input type="hidden" name="idregistro" value="@planilla.IdRegistro" />
                                        <button type="submit" style="background-color: red; color: white; border: none; padding: 5px 10px; cursor: pointer;">
                                            Eliminar
                                        </button>
                                    </form>
                                }
                               
                            </td>
                        </tr>
                        totalhoras += planilla.HHregistradas;
                        totalcostoshoras += planilla.CostoTotal;
                    }
                    <tr>
                        <td colspan="3"  style="padding: 10px; border: 1px solid #ddd; background-color:#d9e2f3;text-align:left;"><strong>Totales</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd; text-align:right;background-color:#d9e2f3;"><strong>@totalhoras</strong></td>
                        <td colspan="2" style="padding: 10px; border: 1px solid #ddd; text-align:right;background-color:#d9e2f3;"><strong> @String.Format("{0:N0}", totalcostoshoras)</strong></td>
                        
                        
                    </tr>
                }


            </tbody>
        </table>


    </div>
   
</div>
<script>
    function confirmarEliminacion() {
        return confirm("¿Estás seguro de que deseas eliminar este registro?");
    }

    var idusuario = @Context.Session.GetInt32("id");
        document.addEventListener("DOMContentLoaded", function () {
            let recurso = '@Context.Session.GetString("recurso")'; 

            fetch(`/Usuario/RecuperarActividades?recurso=${recurso}`)
                .then(response => response.json())
                .then(data => {
                    document.querySelectorAll(".actividadSelect").forEach(select => {
                        let actividadSeleccionada = select.getAttribute("data-idactividad"); 
                        select.innerHTML = ""; 
                        data.forEach(item => {
                            let option = document.createElement("option");
                            option.value = item.id;
                            option.textContent = item.nombre;
                            option.setAttribute("data-controlhh", item.controlhh);
                            
                            if (item.id == actividadSeleccionada) {
                                option.selected = true;
                            }

                            select.appendChild(option);
                        if (option.selected) {
                            // Encontrar el input hidden en la misma fila
                            const fila = select.closest('tr');
                            fila.querySelector('.controlhh-hidden').value = item.controlhh.toLowerCase().trim();
                        }
                        });
                    });
                })
                .catch(error => console.error("Error al cargar actividades:", error));
        });

    function cargarSubactividades(idActividad, fila) {
        $.ajax({
            url: '@Url.Action("RecuperarSubActividades", "Usuario")',
            type: 'GET',
            data: { idactividad: idActividad },
            success: function (subactividades) {
                const select = fila.find('.nombreSelect'); 
                select.empty();
                select.append('<option value="" disabled selected>Seleccione un Item</option>');

                $.each(subactividades, function (index, subactividad) {
                    select.append($('<option>', {
                        value: subactividad.id,
                        text: subactividad.nombre
                    }));
                });
            },
            error: function (error) {
                console.error("Error al obtener las subactividades:", error);
            }
        });
    }

    function cargarProyectosNegociacion(fila) {
        if (idusuario) {
            $.ajax({
                url: '@Url.Action("ObtenerProyectoNegociacion", "Usuario")',
                type: 'GET',
                success: function (response) {
                    const select = fila.find('.nombreSelect'); 
                    select.empty();
                    select.append('<option value="" disabled selected>Seleccione un proyecto</option>');

                    if (response.length > 0) {
                        $.each(response, function (index, proyecto) {
                            select.append($('<option>', {
                                value: proyecto.id,
                                text: proyecto.numProyecto + ' - ' + proyecto.nombre
                            }));
                        });

                        select.on('change', function () {
                            var idproyecto = $(this).val();
                            cargarInformacionUsuario(idproyecto);
                        });
                    } else {
                        select.append('<option value="" disabled>No hay proyectos disponibles</option>');
                    }
                },
                error: function (error) {
                    console.error("Error al obtener los proyectos:", error);
                }
            });
        }
    }
    function cargarProyectos(fila) {
        if (idusuario) {
            $.ajax({
                url: '@Url.Action("ObtenerMisproyectos", "Usuario")',
                type: 'GET',
                data: { idusuario: idusuario },
                success: function (response) {
                    const select = fila.find('.nombreSelect');
                    select.empty();
                    select.append('<option value="" disabled selected>Seleccione un proyecto</option>');

                    if (response.length > 0) {
                        $.each(response, function (index, proyecto) {
                            select.append($('<option>', {
                                value: proyecto.id,
                                text: proyecto.numproyecto + ' - ' + proyecto.nombreproyecto
                            }));
                        });

              
                        select.on('change', function () {
                            var idproyecto = $(this).val();
                            cargarInformacionUsuario(idproyecto); 
                        });
                    } else {
                        select.append('<option value="" disabled>No hay proyectos disponibles</option>');
                    }
                },
                error: function (error) {
                    console.error("Error al obtener los proyectos:", error);
                }
            });
        }
    }
    $(document).on('change', '.nombreSelect', function () {
        var idproyecto = $(this).val();

        cargarInformacionUsuario(idproyecto); 
    });
    function cargarInformacionUsuario(idproyecto) {
    
        $.ajax({
            url: '@Url.Action("Recuperarhhusuarios", "Usuario")',
            type: 'GET',
            data: { idusuario: idusuario, idproyecto: idproyecto },
            success: function (informacionusuario) {
                if (informacionusuario && informacionusuario.length > 0) {
                    $('.rolrecurso').val(informacionusuario[0].recurso);
                    $('.hhrestantes').val(informacionusuario[0].hhasignadas);
                    $('.idusuarioproyecto').val(informacionusuario[0].idusuarioproyecto);
                } else {
                    $('.rolrecurso').val('Recurso no disponible');
                }
            },
            error: function (error) {
                console.error("Error al obtener la información del recurso:", error);
                $('.rolrecurso').val('Error al obtener recurso');
            }
        });
    }

    var controlvalor = 0;
    $(document).on('change', '.actividadSelect', function () {
        const idActividad = $(this).val();
        const controlhh = $(this).find(':selected').data('controlhh').toLowerCase().trim();

        const fila = $(this).closest('tr');
        fila.find('.controlhh-hidden').val(controlhh);
        if (idActividad) {
            if (controlhh === 'proyecto en ejecucion') {
               
                cargarProyectos(fila);
                fila.find('.proyectoid').val(0);
                controlvalor = 1;

            } else if (controlhh === 'empresa') {
                fila.find('.idusuarioproyecto').val(0); 
                cargarSubactividades(idActividad, fila);
                controlvalor = 2;
            } else if (controlhh === "proyecto en negociación") {
                fila.find('.proyectoid').val(0);
                cargarProyectosNegociacion(fila);
                controlvalor = 1;
            }
        } else {
            console.log("Error al mostrar datos");
        }
    });



    /*editar registro*/
    $(document).ready(function () {
        $(".editarBtn").on("click", function (event) {
            event.preventDefault();
        
            let row = $(this).closest("tr");
            var tipoactividad = row.find("[name='controlhhactividad']").val();
            let idregistro = row.find("[name='idregistro']").val();
            let idusuarioeditar = @Context.Session.GetInt32("id");
            let idusuproy = row.find("[name='idusuarioproyecto']").val();;
            let horasasignadas = row.find("[name='hhregistradas']").val();
            let fecharegistro = row.find("[name='fecharegistro']").val();
            let observaciones = row.find("[name='observaciones']").val() || "";
            let idactividad = row.find("[name='idactividad']").val();
            let idsubactividad = row.find("[name='idproyecto']").val();
            if (tipoactividad === "proyecto en ejecucion" || tipoactividad === "proyecto en negociación") {
                idsubactividad = 0;
            }
            if (tipoactividad === "empresa") {
                idusuproy = 0;
            }

            $.ajax({
                url: "/Planilla/EditarRegistroPlanilla",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    idregistro: parseInt(idregistro),
                    idusuario: parseInt(idusuarioeditar),
                    idusuproy: parseInt(idusuproy),
                    horasasignadas: horasasignadas,
                    Fecharegistro: fecharegistro,
                    observaciones: observaciones,
                    Idactividad: parseInt(idactividad),
                    idsubactividad: parseInt(idsubactividad)
                }),
                success: function (data) {
                    if (data.success) {
                        alert("✅ " + data.message);
                    } else {
                        alert("⚠️ Error: " + data.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("❌ Error:", error);
                }
            });
        });
    });


</script>



