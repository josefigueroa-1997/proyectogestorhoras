@{
    ViewData["Title"] = "Planilla de Registro";
}

<style>
    body {
        font-family: 'Montserrat', sans-serif;
        background-color: #f5f5f5;
    }

    .form-container {
        max-width: 1200px;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-title {
        font-size: 1.8rem;
        font-weight: 600;
        color: #333;
        text-align: center;
        margin-bottom: 10px;
    }

    .form-subtitle {
        font-size: 1.2rem;
        color: #666;
        text-align: center;
        margin-bottom: 20px;
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .form-group {
        flex: 1;
        min-width: 220px;
    }

        .form-group label {
            display: block;
            font-size: 1rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 5px;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px;
            font-size: 1rem;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        .form-group select {
            cursor: pointer;
        }

    .form-group-radio {
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .form-group-radio label {
            margin-bottom: 0;
        }

    .button-container {
        text-align: center;
        margin-top: 20px;
    }

    .submit-btn,.planilla-btn,.gantt-btn {
        padding: 8px 20px; /* Disminuir el padding */
        font-size: 0.9rem;
        font-weight: 600;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
        margin-left: 10px;
    }

    .submit-btn {
        color: #fff;
        background-color: #fcaa67;
    }

        .submit-btn:hover {
            background-color: #e39450;
        }


    .planilla-btn {
        color: #fff; 
        background-color: #333; 
        border-left: 4px solid #fcaa67;
        cursor: pointer; 
        text-decoration: none; 
        padding: 10px; 
        display: inline-block;
    }

        .planilla-btn:hover {
            background-color: #333; 
            border-color: #fcaa67; 
        }

        .planilla-btn:hover {
            color: #fcaa67; 
        }

    .gantt-btn {
        color: #fff;
        background-color: #4caf50; /* Un tono de verde que combina con los otros botones */
        border-left: 4px solid #fcaa67; /* Borde izquierdo para mantener la coherencia */
    }

        .gantt-btn:hover {
            background-color: #388e3c; /* Color de fondo al pasar el mouse, un tono más oscuro de verde */
        }

    .horas-disponibles {
        display: block;
        font-size: 0.9rem;
        color: #666;
        margin-top: 5px;
        margin-bottom: 10px;
    }

    .eliminar-btn {
        padding: 10px 30px;
        font-size: 1rem;
        font-weight: 600;
        color: #fff;
        background-color: red;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .tabla-margen td {
        text-align: right;
    }

    .pagination {
        margin-top: 20px;
        display: flex;
        justify-content: center; /* Centra los botones en el contenedor */
    }

    .page-btn {
        margin: 0 5px;
        padding: 8px 12px; /* Aumentar el tamaño del botón */
        background-color: #007bff; /* Color de fondo del botón */
        color: white; /* Color del texto */
        border: none; /* Sin borde */
        border-radius: 5px; /* Bordes redondeados */
        cursor: pointer; /* Cursor de puntero */
        transition: background-color 0.3s; /* Transición para efectos de hover */
    }

        .page-btn:hover {
            background-color: #0056b3; /* Color al pasar el mouse */
        }

        .page-btn:disabled {
            background-color: #cccccc; /* Color para botones deshabilitados */
            cursor: not-allowed; /* Cursor de no permitido */
            opacity: 0.7; /* Opacidad para indicar deshabilitado */
        }
</style>

<div class="form-container">
    @{
        string? nombre = Context.Session.GetString("nombre");
        int? idusuario = Context.Session.GetInt32("id");
        string? recurso = Context.Session.GetString("recurso");
    }
    
    <div style="display: flex; justify-content: flex-end; margin-top: 10px; margin-right: 20px;">
        <a href="@Url.Action("MisPlanillas","Planilla",new{idusuario=idusuario})" class="planilla-btn">Mis Planillas</a>
        <a href="@Url.Action("GanttUsuario","Planilla")" class="gantt-btn">Ver mi Gantt</a>
    </div>
    <h1 class="form-title">Planilla: @nombre</h1>
    <p class="form-subtitle">Rol:@recurso</p>
    <div class="form-group">
        <input type="text" id="searchInput" placeholder="Buscar...">
        <table id="planillausuario" style="width: 100%; border-collapse: collapse; text-align: left;">
            <thead>
                <tr style="background-color: #d9e2f3; color: black;">
                    <th style="padding: 10px; border: 1px solid #ddd;">Fecha</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Proyecto</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Actividad</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Número Horas</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">Observación</th>
                    
                    
                </tr>
            </thead>
            <tbody id="tabla-body">
                <tr>

                    <td style="padding: 10px; border: 1px solid #ddd;"><input type="date" name="fecharegistro" class="fecharegistro"   /></td>
                    <td style="padding: 10px; border: 1px solid #ddd;">
                        <select class="proyectosSelect" name="proyecto">
                            <option value="" disabled selected></option>


                        </select>
                    </td>
                    <td style="padding: 10px; border: 1px solid #ddd;">

                        <select class="actividadesSelect" name="actividad">
                            <option value="" disabled selected></option>

                        </select>
                    </td>
                    <td style="padding: 10px; border: 1px solid #ddd;"><input type="number" name="hhregistradas" style="text-align:center;"/></td>
                    <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" name="observaciones" /></td>
                
                    <td style="padding: 10px; border: 1px solid #ddd;"><button type="submit" class="submit-btn registrar-horas">Registrar Hora</button></td>

                </tr>
                @if (ViewBag.Planilla != null)
                {
                    @foreach (var planilla in ViewBag.Planilla)
                    {
                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:center;">@planilla.FechaRegistro.ToString("dd/MM/yyyy")</td>
                            <td style="padding: 10px; border: 1px solid #ddd; ">
                                @planilla.NumProyecto - @planilla.NombreProyecto
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:center;">
                                @planilla.NombreActividad
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:center;">
                                @planilla.HHregistradas
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:center;">
                                @planilla.Observaciones
                            </td>
                        </tr>
                    }
                }
               
               
            </tbody>
        </table>
        <div class="pagination">
            <!-- Los botones de paginación se agregarán aquí dinámicamente -->
        </div>

    </div>
    <input type="hidden" class="rolrecurso" name="rolrecurso"/>
    <input type="hidden" class="idusuarioproyecto" name="idusuarioproyecto" />
    <div class="fixed inset-0 flex items-center justify-center z-50" id="mensajeModal" style="display: none;">
        <div class="bg-white rounded-lg shadow-lg max-w-md w-full">
            <div class="flex justify-between items-center border-b p-4">
                <h5 class="text-lg font-semibold">Registro de Horas</h5>
                <button type="button" class="text-gray-600 hover:text-gray-900" onclick="closeModal()">&times;</button>
            </div>
            <div class="p-4">
                <p id="modalMensaje"></p>
            </div>
            <div class="flex justify-end border-t p-4">
                <button type="button" class="bg-gray-500 text-white px-4 py-2 rounded" onclick="closeModal()">Cerrar</button>
            </div>
        </div>
    </div>
</div>




<script>
    $(document).ready(function () {
        var today = new Date().toISOString().split('T')[0];
        $('.fecharegistro').val(today);

        // Restringir la selección de fechas futuras
        $('.fecharegistro').attr('max', today);

        window.closeModal = function () {
            $('#mensajeModal').hide();
        };

        var idusuario = @Context.Session.GetInt32("id");

        function cargarProyectos() {
            if (idusuario) {
                $.ajax({
                    url: '@Url.Action("ObtenerMisproyectos", "Usuario")',
                    type: 'GET',
                    data: { idusuario: idusuario },
                    success: function (response) {
                        $('.proyectosSelect').empty();
                        $('.proyectosSelect').append('<option value="" disabled selected>Seleccione un proyecto</option>');

                        if (response.length > 0) {
                            // Si hay proyectos, los agregamos al select
                            $.each(response, function (index, proyecto) {
                                $('.proyectosSelect').append(
                                    $('<option>', {
                                        value: proyecto.id,
                                        text: proyecto.numproyecto + ' - ' + proyecto.nombreproyecto
                                    })
                                );
                            });

                            $('.proyectosSelect').on('change', function () {
                                var idproyecto = $(this).val();
                                cargarInformacionUsuario(idproyecto);
                            });
                        } else {
                            // Si no hay proyectos, mostramos un mensaje
                            $('.proyectosSelect').append('<option value="" disabled>No hay proyectos disponibles</option>');
                        }
                    },
                    error: function (error) {
                        console.error("Error al obtener los proyectos:", error);
                    }
                });
            }
        }

        function cargarInformacionUsuario(idproyecto) {
            $.ajax({
                url: '@Url.Action("Recuperarhhusuarios", "Usuario")',
                type: 'GET',
                data: { idusuario: idusuario, idproyecto: idproyecto },
                success: function (informacionusuario) {
                    if (informacionusuario && informacionusuario.length > 0) {
                        $('.rolrecurso').val(informacionusuario[0].recurso);
                        
                        $('.idusuarioproyecto').val(informacionusuario[0].idusuarioproyecto);
                        cargarActividades(informacionusuario[0].recurso);
                    } else {
                        $('.rolrecurso').val('Recurso no disponible');
                    }
                },
                error: function (error) {
                    console.error("Error al obtener la información del recurso:", error);
                    $('.rolrecurso').val('Error al obtener recurso');
                }
            });
        }

        function cargarActividades(recurso) {
            $.ajax({
                url: '@Url.Action("RecuperarActividades", "Usuario")',
                type: 'GET',
                data: { recurso: recurso },
                success: function (actividades) {
                    $('.actividadesSelect').empty();
                    $('.actividadesSelect').append('<option value="" disabled selected>Seleccione una actividad</option>');

                    $.each(actividades, function (index, actividad) {
                        $('.actividadesSelect').append(
                            $('<option>', {
                                value: actividad.id,
                                text: actividad.nombre
                            })
                        );
                    });
                },
                error: function (error) {
                    console.error("Error al obtener las actividades:", error);
                }
            });
        }

        cargarProyectos();

        $(document).on('click', '.submit-btn', function (event) {
            event.preventDefault();

            var fecha = $('.fecharegistro').val();
            var idproyecto = $('.proyectosSelect').val();
            var idactividad = $('.actividadesSelect').val();
            var horasRegistradas = parseInt($('input[name="hhregistradas"]').val()) || 0;
            var observaciones = $('input[name="observaciones"]').val();
            var idusuarioproyecto = $('.idusuarioproyecto').val();
            

            if (!fecha || !idproyecto || !idactividad || horasRegistradas === 0) {
                alert("Por favor, completa todos los campos requeridos.");
                return;
            }


           

            $('#modalMensaje').text("Procesando Su Solicitud...");
            $('#mensajeModal').show();
            $.ajax({
                url: '@Url.Action("RegistrarHoras", "Planilla")',
                type: 'POST',
                data: {
                    idusuario: idusuario,
                    idusuproy: idusuarioproyecto,
                    horasasignadas: horasRegistradas,
                    Fecharegistro: fecha,
                    observaciones: observaciones,
                    idactividad: idactividad,
                },
                success: function (response) {
                    if (response.success) {
                        $('#modalMensaje').text(response.message);
                       

                        $('#planillausuario input, #planillausuario select').prop('disabled', true);
                        $('.submit-btn').hide();
                      

                        let filaRegistrada = $('#tabla-body tr:first-child');

                        // Obtener el texto de la actividad seleccionada
                        let actividadSeleccionadaTexto = $('.actividadesSelect option:selected').text();

                        // Reemplazar el select de actividades con un input de texto
                        filaRegistrada.find('.actividadesSelect').replaceWith(`<input type="text" value="${actividadSeleccionadaTexto}" readonly />`);


                        let nuevaFila = `
                                <tr>
                                        <td style="padding: 10px; border: 1px solid #ddd;"><input type="date" name="fecharegistro" class="fecharegistro" value="${today}" max="${today}" /></td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <select class="proyectosSelect" name="proyecto">
                                            <option value="" disabled selected>Seleccione un proyecto</option>
                                        </select>
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <select class="actividadesSelect" name="actividad">
                                            <option value="" disabled selected>Seleccione una actividad</option>
                                        </select>
                                    </td>
                                        <td style="padding: 10px; border: 1px solid #ddd;"><input type="number" name="hhregistradas" style="text-align:center;"/></td>
                                    <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" name="observaciones" /></td>
                                        
                                    <td style="padding: 10px; border: 1px solid #ddd;"><button type="submit" class="submit-btn registrar-horas">Registrar Hora</button></td>
                                </tr>`;

                        $('#tabla-body').prepend(nuevaFila);
                        cargarProyectosEnNuevaFila($('#tabla-body tr:first-child'));
                    } else {
                        $('#modalMensaje').text(response.message);
                    }
                    $('#mensajeModal').show();
                    updatePagination();
                },
                error: function (error) {
                    console.error("Error al registrar horas:", error);
                    alert("Ocurrió un error al registrar las horas.");
                }
            });
        });

        function cargarProyectosEnNuevaFila(nuevaFila) {
            $.ajax({
                url: '@Url.Action("ObtenerMisproyectos", "Usuario")',
                type: 'GET',
                data: { idusuario: idusuario },
                success: function (response) {
                    nuevaFila.find('.proyectosSelect').empty();
                    nuevaFila.find('.proyectosSelect').append('<option value="" disabled selected>Seleccione un proyecto</option>');

                    $.each(response, function (index, proyecto) {
                        nuevaFila.find('.proyectosSelect').append(
                            $('<option>', {
                                value: proyecto.id,
                                text: proyecto.numproyecto + ' - ' + proyecto.nombreproyecto
                            })
                        );
                    });

                    nuevaFila.find('.proyectosSelect').on('change', function () {
                        var idproyecto = $(this).val();
                        cargarInformacionUsuario(idproyecto);
                    });
                },
                error: function (error) {
                    console.error("Error al obtener los proyectos:", error);
                }
            });
        }

        // Paginación
        let currentPage = 1;
        let rowsPerPage = 10; 
        let totalPages = Math.ceil($('#tabla-body tr').length / rowsPerPage);

        function updatePagination() {
            $('.pagination').empty(); 

            // Crear la nueva paginación
            for (let i = 1; i <= totalPages; i++) {
                const pageButton = $('<button class="page-btn"></button>').text(i);
                pageButton.on('click', function () {
                    currentPage = i; 
                    displayPage(currentPage); 
                });
                $('.pagination').append(pageButton);
            }
            displayPage(currentPage); 
        }

        function displayPage(page) {
            const start = (page - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            $('#tabla-body tr').hide(); 
            $('#tabla-body tr').slice(start, end).show(); 
        }

        
        updatePagination();
    });

</script>
<script>
    // Función para filtrar la tabla
    document.getElementById('searchInput').addEventListener('keyup', function () {
        let input = this.value.toLowerCase();
        let rows = document.querySelectorAll('#tabla-body tr');

        rows.forEach(row => {
            let cells = row.getElementsByTagName('td');
            let found = false;

            for (let i = 0; i < cells.length; i++) {
                // Comprueba si el contenido de la celda incluye el texto de búsqueda
                if (cells[i].innerText.toLowerCase().includes(input)) {
                    found = true;
                    break; // Si se encuentra una coincidencia, no es necesario seguir buscando
                }
            }

            // Muestra u oculta la fila según si se encontró una coincidencia
            row.style.display = found ? '' : 'none';
        });
        if (input === '') {
            // Si la barra de búsqueda está vacía, actualiza la paginación
            updatePagination();
        }
    });
</script>