@{
    ViewData["Title"] = "Reporte Margen de Contribución";
}

<h2 class="text-2xl font-bold mb-4">Margen de Contribución de Proyectos</h2>
<button id="exportButton" class="mt-4 bg-green-500 text-white p-2 rounded">Exportar a Excel</button>
<div class="container mx-auto mt-4 p-4 bg-white rounded-lg shadow-md">
    <div class="overflow-x-auto">
        <table id="facturasTable" class="min-w-full border-collapse border border-black">
            <thead class="bg-blue-100">
                <tr>
                    <th class="text-left text-xs font-medium ">Num Proyecto</th>
                    <th class="text-left text-xs font-medium ">Nombre</th>
                    <th class="text-left text-xs font-medium ">Monto</th>
                    <th class="text-left text-xs font-medium ">HHSocios</th>
                    <th class="text-left text-xs font-medium ">HHStaff</th>
                    <th class="text-left text-xs font-medium ">Consultor A</th>
                    <th class="text-left text-xs font-medium ">Consultor B</th>
                    <th class="text-left text-xs font-medium ">Consultor C</th>
                    <th class="text-left text-xs font-medium ">Total Servicios</th>
                    <th class="text-left text-xs font-medium ">Total Gastos</th>
                    <th class="text-left text-xs font-medium ">Margen Contribución</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @{
                    decimal
                    totalMonto = 0;
                    decimal
                    totalHHSocios = 0;
                    decimal
                    totalHHLeads = 0;
                    decimal
                    totalConsultorA = 0;
                    decimal
                    totalConsultorB = 0;
                    decimal
                    totalConsultorD = 0;
                    decimal
                    totalServicios = 0;
                    decimal
                    totalGastos = 0;
                    decimal
                    totalMargen = 0;

                }
                

                @if (ViewBag.Margen != null)
                {
                    @foreach (var margen in ViewBag.Margen)
                    {
                        <tr>
                            <td class="text-xs border font-medium text-left border-black px-4 py-2 min-w-[150px]">@margen.NumProyecto</td>
                            <td class="text-xs border font-medium text-left border-black px-4 py-2 min-w-[150px]">@margen.NombreProyecto</td>
                            <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( @margen.Monto))</td>
                            <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( @margen.CostosSocios))</td>
                            <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( @margen.CostosStaff))</td>
                            <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( @margen.CostoConsultorA))</td>
                            <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( @margen.CostoConsultorB))</td>
                            <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( @margen.CostoConsultorC))</td>
                            <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( @margen.TotalServicios))</td>
                            <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round(@margen.TotalGastos))</td>
                            <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round(@margen.Margen))</td>
                        </tr>

                       
                        totalMonto += margen.Monto;
                        totalHHSocios += margen.CostosSocios;
                        totalHHLeads += margen.CostosStaff;
                        totalConsultorA += margen.CostoConsultorA;
                        totalConsultorB += margen.CostoConsultorB;
                        totalConsultorD += margen.CostoConsultorC;
                        totalServicios += margen.TotalServicios;
                        totalGastos += margen.TotalGastos;
                        totalMargen += margen.Margen;
                    }
                }
                
                <tr class="font-bold bg-gray-100">
                    <td class="text-xs border font-medium text-left border-black px-4 py-2 min-w-[150px]" colspan="2">Totales</td>
                    <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( totalMonto))</td>
                    <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( totalHHSocios))</td>
                    <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( totalHHLeads))</td>
                    <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( totalConsultorA))</td>
                    <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( totalConsultorB))</td>
                    <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( totalConsultorD))</td>
                    <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( totalServicios))</td>
                    <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round( totalGastos))</td>
                    <td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[150px]">@String.Format("{0:N2}", Math.Round(totalMargen))</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<script>

    document.addEventListener("DOMContentLoaded", function () {
       async function exportToExcel() {
            const workbook = new ExcelJS.Workbook();
            const worksheet = workbook.addWorksheet('Reporte Margen de Contribución');
            const response = await fetch('/images/unitt.png');
            const imageBlob = await response.blob();
            const arrayBuffer = await imageBlob.arrayBuffer();
            const logoImageId = workbook.addImage({
                buffer: arrayBuffer,
                extension: 'png'
            });

            worksheet.addImage(logoImageId, {
                tl: { col: 0, row: 0 }, 
                ext: { width: 150, height: 50 } 
            });
            worksheet.mergeCells('E3:H3');
            const titulo = worksheet.getCell('E3');
            titulo.value = "Margen de Contribución de Proyectos";
            titulo.font = { size: 16, bold: true };
            titulo.alignment = { vertical: 'middle', horizontal: 'center' };
            worksheet.addRow([]);
            worksheet.addRow([]);
         
            const headers = [
                "Num Proyecto",
                "Nombre",
                "Monto",
                "HHSocios",
                "HHLeads",
                "Consultor A",
                "Consultor B",
                "Consultor C",
                "Total Servicios",
                "Total Gastos",
                "Margen Contribución"
            ];
            worksheet.addRow(headers);
            worksheet.columns.forEach(column => {
                column.width = 15;
            });
           


            const table = document.getElementById('facturasTable');
            const rows = table.querySelectorAll('tbody tr');

            let totalMonto = 0;
            let totalHHSocios = 0;
            let totalHHLeads = 0;
            let totalConsultorA = 0;
            let totalConsultorB = 0;
            let totalConsultorD = 0;
            let totalServicios = 0;
            let totalGastos = 0;
            let totalMargen = 0;

            
            rows.forEach((row) => {
                const cols = row.querySelectorAll('td');
                const rowData = [];

                cols.forEach((col, colIndex) => {
                   
                    if (!row.classList.contains('font-bold')) {
                        if (colIndex > 1) { 
                            const number = parseFloat(col.innerText.replace(/\./g, '').replace(',', '.'));
                            rowData.push(number);
                            
                            if (!isNaN(number)) {
                                if (colIndex === 2) totalMonto += number; 
                                if (colIndex === 3) totalHHSocios += number; 
                                if (colIndex === 4) totalHHLeads += number; 
                                if (colIndex === 5) totalConsultorA += number; 
                                if (colIndex === 6) totalConsultorB += number; 
                                if (colIndex === 7) totalConsultorD += number; 
                                if (colIndex === 8) totalServicios += number; 
                                if (colIndex === 9) totalGastos += number; 
                                if (colIndex === 10) totalMargen += number; 
                            }
                        } else {
                            rowData.push(col.innerText);
                        }
                    }
                });

               
                if (rowData.length) {
                    worksheet.addRow(rowData);
                }
            });

            const totalRow = [
                "Totales", 
                "", 
                totalMonto,
                totalHHSocios,
                totalHHLeads,
                totalConsultorA,
                totalConsultorB,
                totalConsultorD,
                totalServicios,
                totalGastos,
                totalMargen
            ];
            worksheet.addRow(totalRow).getCell(2).style = { font: { bold: true }, alignment: { horizontal: 'left' } }; // Aplicar estilo al nombre

            worksheet.columns.forEach((column) => {
                column.numFmt = '#,##0.00'; 
                column.alignment = { horizontal: 'right' }; 
            });

            workbook.xlsx.writeBuffer().then(function (buffer) {
                const blob = new Blob([buffer], { type: 'application/octet-stream' });
                const link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = 'Reporte_Margen_de_Contribucion.xlsx';
                link.click();
            });
        }

        
        const exportButton = document.getElementById('exportButton');
        exportButton.addEventListener('click', exportToExcel);
    });
</script>