
@{
    ViewData["Title"] = "Reportes Control Avance HH";
}
@{
    string? numproyecto = Context.Session.GetString("numproyecto");
    string? nombreproyecto = Context.Session.GetString("nombreproyecto");
    
}

<h2 style="margin-top: 50px;" class="text-2xl font-bold mb-4">Control Avance HH Proyecto:@numproyecto - @nombreproyecto</h2>
<div class="container mx-auto mt-4 p-4 bg-white rounded-lg shadow-md">
    <div id="table-container"></div>

</div>

<script>
    async function obtenerControlHH(idproyecto) {
        const response = await fetch(`/Reporte/ObtenerControlHH?idproyecto=${idproyecto}`);
        return await response.json();
    }

    function crearTablaPorTipo(datos) {
        const tableContainer = document.getElementById('table-container');

        
        const tipos = [...new Set(datos.map(d => d.tipo))];

        tipos.forEach(tipo => {
            
            const datosPorTipo = datos.filter(d => d.tipo === tipo);

           
            const estados = [...new Set(datosPorTipo.map(d => d.estado))];
            const mesesAnos = [...new Set(datosPorTipo.map(d => `${d.mes}/${d.anio}`))];

            
            mesesAnos.sort((a, b) => {
                const [mesA, anioA] = a.split('/').map(Number);
                const [mesB, anioB] = b.split('/').map(Number);
                return anioA !== anioB ? anioA - anioB : mesA - mesB;
            });
            estados.sort();
        
            let html = `<h2>Control: ${tipo}</h2>`;
            html += '<table class="min-w-full divide-y divide-gray-200"><thead class="bg-blue-100"><tr class="text-left text-xs font-medium"><th>Estado</th>';

         
            mesesAnos.forEach(ma => {
                html += `<th>${ma}</th>`;
            });
            html += '<th>Total</th>';
            html += '</tr></thead><tbody class="bg-white divide-y divide-gray-200">';

            
            estados.forEach(estado => {
                html += `<tr><td class="border border-black text-left text-xs font-medium">${estado}</td>`;
                let totalHH = 0;

               
                mesesAnos.forEach(ma => {
                    const [mes, anio] = ma.split('/').map(Number); 
                    const hh = datosPorTipo.find(d => d.estado === estado && d.mes === mes && d.anio === anio);      

                    const hhValue = hh ? hh.hh : 0; 
                    totalHH += hhValue;
                    html += `<td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[50px]">${hhValue !== 0 ? hhValue + ' hr/mes' : ''}</td>`;
                });

                html += `<td class="text-xs border font-medium text-right border-black px-4 py-2 min-w-[50px]">${totalHH + ' hrs'}</td>`;
                html += '</tr>';
            });

            html += '</tbody></table>';

            tableContainer.innerHTML += html; 
        });
    }

    async function init() {
        const idproyecto = '@Context.Session.GetInt32("IDproyecto")'; 
        const datos = await obtenerControlHH(idproyecto);
        crearTablaPorTipo(datos);
    }

   
    document.addEventListener('DOMContentLoaded', init);
</script>