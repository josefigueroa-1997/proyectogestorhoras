@{
    ViewData["Title"] = "Proyectos En Negociación";

}
<h1 class="text-2xl font-bold mb-4">Proyectos en Negociación</h1>
<div class="container mx-auto mt-4 p-4 bg-white rounded-lg shadow-md">
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200" id="tablaReporte">
            <thead class="bg-blue-100">
                <tr>
                    <th class="text-left text-xs font-medium ">Probabilidad</th>
                    <th class="text-left text-xs font-medium ">Tipología</th>
                    <th class="text-left text-xs font-medium ">U. Negocio</th>
                    <th class="text-left text-xs font-medium ">Cliente</th>
                    <th class="text-left text-xs font-medium ">Num Proyecto</th>
                    <th class="text-left text-xs font-medium ">Nombre</th>
                    <th class="text-left text-xs font-medium ">C. Costo</th>

                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>

<script>
    function formatearNumero(num) {
        num = Math.round(num);  
        return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
    }

    $(document).ready(function () {
        cargarReporte();
    });

    function cargarReporte() {
        $.ajax({
            url: '/Reporte/ObtenerDatosNegociacion',
            method: 'GET',
            dataType: 'json',
            success: function (datos) {
                const tabla = $('#tablaReporte');
                const fechasUnicas = new Set();

                datos.forEach(item => {
                    const fecha = new Date(item.fechaFactura);
                    const mes = String(fecha.getMonth() + 1).padStart(2, '0');
                    const anio = fecha.getFullYear();
                    const mesAnio = `${mes}/${anio}`;
                    fechasUnicas.add(mesAnio);
                });

                const fechasOrdenadas = Array.from(fechasUnicas).sort((a, b) => {
                    const [mesA, anioA] = a.split('/');
                    const [mesB, anioB] = b.split('/');
                    return anioA - anioB || mesA - mesB;
                });

                const filaCabecera = tabla.find('thead tr');
                fechasOrdenadas.forEach(mesAnio => {
                    const th = $('<th class="text-left text-xs font-medium "></th>').text(mesAnio);
                    filaCabecera.append(th);
                });
                filaCabecera.append('<th class="text-left text-xs font-medium ">Total General</th>');

                const ordenProbabilidad = {
                    "Alto": 1,
                    "Medio": 2,
                    "Bajo": 3
                };

                const datosAgrupados = {};
                datos.forEach(item => {
                    const numProyecto = item.numProyecto;
                    if (!datosAgrupados[numProyecto]) {
                        datosAgrupados[numProyecto] = {
                            ...item,
                            montos: {}
                        };
                    }
                    const fecha = new Date(item.fechaFactura);
                    const mes = String(fecha.getMonth() + 1).padStart(2, '0');
                    const anio = fecha.getFullYear();
                    const mesAnio = `${mes}/${anio}`;
                    datosAgrupados[numProyecto].montos[mesAnio] = item.neto;
                });

                const datosArray = Object.values(datosAgrupados);

                datosArray.sort((a, b) => {
                    const comparacionProbabilidad = ordenProbabilidad[a.probabilidad] - ordenProbabilidad[b.probabilidad];
                    if (comparacionProbabilidad !== 0) {
                        return comparacionProbabilidad;
                    }
                    const comparacionTipologia = a.tipoTipologia.localeCompare(b.tipoTipologia);
                    if (comparacionTipologia !== 0) {
                        return comparacionTipologia;
                    }
                    return a.unegocio.localeCompare(b.unegocio);
                });

                function crearFilaTotal(titulo, totalPorMes) {
                    let totalFila = 0;
                    for (const mesAnio in totalPorMes) {
                        totalFila += totalPorMes[mesAnio] || 0;
                    }

                    // Solo crear la fila si el total es mayor a 0
                    if (totalFila > 0) {
                        const filaTotal = $('<tr class="text-left text-xs font-medium border border-black"></tr>').addClass('fila-total').html(
                            `<td class="text-left text-xs font-medium border border-black" colspan="7">Total ${titulo}</td>`
                        );

                        fechasOrdenadas.forEach(mesAnio => {
                            const totalMes = totalPorMes[mesAnio] || 0;
                            const td = $('<td class="text-left text-xs font-medium text-right border border-black"></td>').html(`${formatearNumero(totalMes)}`);
                            filaTotal.append(td);
                        });

                        filaTotal.append(`<td class="text-left text-xs font-medium text-right border border-black">${formatearNumero(totalFila)}</td>`);
                        return filaTotal;
                    }
                    return null; // No crear fila si el total es 0
                }

                let totalPorMesProbabilidad = {};
                let totalPorMesTipologia = {};
                let totalPorMesNegocio = {};
                let probabilidadActual = null;
                let tipologiaActual = null;
                let negocioActual = null;

                let totalGeneral = 0;

                datosArray.forEach(item => {
                    if (tipologiaActual && (tipologiaActual !== item.tipoTipologia || probabilidadActual !== item.probabilidad)) {
                        const filaTotal = crearFilaTotal(`Unidad de Negocio ${negocioActual}`, Math.round(totalPorMesNegocio));
                        if (filaTotal) {
                            tabla.find('tbody').append(filaTotal);
                        }
                        const filaTotalTipologia = crearFilaTotal(`Tipología ${tipologiaActual} (Probabilidad ${probabilidadActual})`, totalPorMesTipologia);
                        if (filaTotalTipologia) {
                            tabla.find('tbody').append(filaTotalTipologia);
                        }
                        totalPorMesTipologia = {};
                        totalPorMesNegocio = {};
                    }

                    if (probabilidadActual && probabilidadActual !== item.probabilidad) {
                        const filaTotalProbabilidad = crearFilaTotal(`Probabilidad ${probabilidadActual}`, totalPorMesProbabilidad);
                        if (filaTotalProbabilidad) {
                            tabla.find('tbody').append(filaTotalProbabilidad);
                        }
                        totalPorMesProbabilidad = {};
                    }

                    if (negocioActual && negocioActual !== item.unegocio) {
                        const filaTotalNegocio = crearFilaTotal(`Unidad de Negocio ${negocioActual}`, totalPorMesNegocio);
                        if (filaTotalNegocio) {
                            tabla.find('tbody').append(filaTotalNegocio);
                        }
                        totalPorMesNegocio = {};
                    }

                    probabilidadActual = item.probabilidad;
                    tipologiaActual = item.tipoTipologia;
                    negocioActual = item.unegocio;

                    const fila = $('<tr></tr>').html(
                        `<td class="text-left text-xs font-medium ">${item.probabilidad}</td>
                         <td class="text-left text-xs font-medium ">${item.tipoTipologia}</td>
                         <td class="text-left text-xs font-medium">${item.unegocio}</td>
                         <td class="text-left text-xs font-medium">${item.nombreCliente}</td>
                         <td class="text-left text-xs font-medium"> ${item.numProyecto}</td>
                         <td class="text-left text-xs font-medium">${item.nombre}</td>
                         <td class="text-left text-xs font-medium">${item.cCosto}</td>`
                    );

                    let totalFila = 0;

                    fechasOrdenadas.forEach(mesAnio => {
                        const monto = item.montos[mesAnio] || 0;
                        const td = $('<td class="text-left text-xs border font-medium text-right border-black"></td>').text(formatearNumero(Math.round(monto)));
                        fila.append(td);

                        totalFila += monto;
                        totalGeneral += monto;

                        if (!totalPorMesProbabilidad[mesAnio]) totalPorMesProbabilidad[mesAnio] = 0;
                        if (!totalPorMesTipologia[mesAnio]) totalPorMesTipologia[mesAnio] = 0;
                        if (!totalPorMesNegocio[mesAnio]) totalPorMesNegocio[mesAnio] = 0;

                        totalPorMesTipologia[mesAnio] = (totalPorMesTipologia[mesAnio] || 0) + monto;
                        totalPorMesProbabilidad[mesAnio] = (totalPorMesProbabilidad[mesAnio] || 0) + monto;
                        totalPorMesNegocio[mesAnio] = (totalPorMesNegocio[mesAnio] || 0) + monto;
                    });

                    fila.append(`<td class="text-left text-xs font-medium border text-right border-black">${formatearNumero(Math.round(totalFila))}</td>`);
                    tabla.find('tbody').append(fila);
                });

                const filaTotalNegocio = crearFilaTotal(`Unidad de Negocio ${negocioActual}`, Math.round(totalPorMesNegocio));
                if (filaTotalNegocio) {
                    tabla.find('tbody').append(filaTotalNegocio);
                }
                const filaTotalTipologia = crearFilaTotal(`Tipología ${tipologiaActual} (Probabilidad ${probabilidadActual})`, totalPorMesTipologia);
                if (filaTotalTipologia) {
                    tabla.find('tbody').append(filaTotalTipologia);
                }
                const filaTotalProbabilidad = crearFilaTotal(`Probabilidad ${probabilidadActual}`, totalPorMesProbabilidad);
                if (filaTotalProbabilidad) {
                    tabla.find('tbody').append(filaTotalProbabilidad);
                }

                const filaTotalGeneral = $('<tr class="text-left text-xs font-medium text-right border border-black"></tr>').addClass('totales').html(
                    '<td class="text-left text-xs font-medium border border-black" colspan="7">Total General</td>'
                );

                fechasOrdenadas.forEach(mesAnio => {
                    const totalPorMes = datosArray.reduce((acumulado, item) => {
                        return acumulado + (item.montos[mesAnio] || 0);
                    }, 0);
                    const td = $('<td class="text-left text-xs font-medium text-right border border-black"></td>').html(`${formatearNumero(Math.round(totalPorMes))}`);
                    filaTotalGeneral.append(td);
                });

                filaTotalGeneral.append(`<td class="text-left text-xs font-medium text-right border border-black">${formatearNumero(Math.round(totalGeneral))}</td>`);
                tabla.find('tbody').append(filaTotalGeneral);
                $('.fila-total').css('background-color', '#f2f2f2');
                $('.totales').css('background-color', '#a1d7f3');
            },
            error: function () {
                alert('Error al cargar los datos');
            }
        });
    }

</script>