@{
    ViewData["Title"] = "Meta de Facturación";
}
<style>
    .monto-oculto {
        visibility: hidden;
    }
</style>
<h2 style="margin-top: 50px;" class="text-2xl font-bold mb-4">Metas de Facturación</h2>
<div class="container mx-auto mb-4 p-4 bg-white rounded-lg shadow-md">
    <p class="text-sm text-gray-600">Muestra las metas de facturaciones por mes,tomando como referencia el mes actual,junto con sus 3 meses predecesores y sucesores. Se muestra las facturas proyectadas, forecast y las reales acomapañda con su detalles.
        Haga click en el signo "+" para ver el desglose de los proyectos junto con sus respectivas facturas.

    </p>
</div>
<div class="container mx-auto mt-4 p-4 bg-white rounded-lg shadow-md">
    <div class="overflow-x-auto relative">
        <div class="w-full max-w-3xl border-collapse text-left text-xs justify-center" id="tables-container"></div>

    </div>


</div>


<script>

    function formatearMiles(valor) {
        return valor.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 });

    }


    window.onload = function () {
        fetch('/Reporte/ObtenerMetasFacturaciones')
            .then(response => response.json())
            .then(data => {
                procesarDatos(data);
            })
            .catch(error => console.error('Error:', error));
    };

    function procesarDatos(datos) {
        const mesesRelevantes = getRelevantMonths();
        const datosProcesados = {};
        const datosDetallados = {};

        // Agrupa datos por tipo y calcula suma de montos para cada mes/año
        datos.forEach(item => {
            if (!datosProcesados[item.tipo]) {
                datosProcesados[item.tipo] = {};
            }

            const mesAnio = `${item.mes}/${item.anio}`;
            if (mesesRelevantes.includes(mesAnio)) {
                if (!datosProcesados[item.tipo][mesAnio]) {
                    datosProcesados[item.tipo][mesAnio] = 0;
                }
                datosProcesados[item.tipo][mesAnio] += item.monto;
            }

            // Agrupa datos por tipo y nombre para el detalle
            if (item.nombre) {
          if (!datosDetallados[item.tipo]) {
              datosDetallados[item.tipo] = {};
          }
          if (!datosDetallados[item.tipo][item.nombre]) {
              datosDetallados[item.tipo][item.nombre] = {};
          }
          if (!datosDetallados[item.tipo][item.nombre][mesAnio]) {
              datosDetallados[item.tipo][item.nombre][mesAnio] = 0;
          }
          datosDetallados[item.tipo][item.nombre][mesAnio] += item.monto;
      }
        });

        // Crea la tabla con los datos procesados
        crearTabla(datosProcesados, datosDetallados, mesesRelevantes);
    }

    function getRelevantMonths() {
        const meses = [];
        const fechaActual = new Date();
        const mesActual = fechaActual.getMonth() + 1; 
        const anioActual = fechaActual.getFullYear();

        // Calcular los meses relevantes
        for (let i = -3; i <= 3; i++) {
            let mes = mesActual + i;
            let anio = anioActual;

            if (mes < 1) {
                mes += 12;
                anio--;
            } else if (mes > 12) {
                mes -= 12;
                anio++;
            }

            meses.push(`${mes}/${anio}`);
        }

        return meses;
    }

    function crearTabla(datosProcesados, datosDetallados, mesesRelevantes) {
        const tabla = document.createElement('table');
        const thead = document.createElement('thead');
        const tbody = document.createElement('tbody');

        // cabecera
        const trCabecera = document.createElement('tr');
        trCabecera.className = 'bg-blue-100 text-black';
        const thTipo = document.createElement('th');
        thTipo.className = 'p-2 border border-gray-300 text-center';
        thTipo.textContent = 'Tipo';
        trCabecera.appendChild(thTipo);

        mesesRelevantes.forEach(mes => {
            const thMes = document.createElement('th');
            thMes.className = 'p-2 border border-gray-300 text-center ';
            thMes.textContent = mes;
            trCabecera.appendChild(thMes);
        });

             const thTotalGeneral = document.createElement('th');
            thTotalGeneral.className = 'p-2 border border-gray-300 text-center';
            thTotalGeneral.textContent = 'Total General';
            trCabecera.appendChild(thTotalGeneral);

        thead.appendChild(trCabecera);
        tabla.appendChild(thead);

        const ordenPersonalizado = ["Meta de Facturación", "Facturas Proyectadas", "Facturas Forecast","Facturas Reales"];


       
        ordenPersonalizado.forEach(tipo => {
            if (!datosProcesados[tipo]) return; 

            const trFila = document.createElement('tr');
            const tdTipo = document.createElement('td');
            tdTipo.className = 'text-left text-xs font-bold min-w-[200px] px-4 py-2';

            if (datosDetallados[tipo]) {
                const btnExpandir = document.createElement('button');
                btnExpandir.id = `btnExpandir-${tipo}`;
                btnExpandir.textContent = '+';
                btnExpandir.onclick = function () {
                    mostrarDetalle(tipo, datosDetallados[tipo], mesesRelevantes);
                };
                tdTipo.appendChild(btnExpandir);
                tdTipo.appendChild(document.createTextNode(` ${tipo}`));
            } else {
                tdTipo.textContent = tipo;
            }

            trFila.appendChild(tdTipo);
            let totalGeneral = 0;

            mesesRelevantes.forEach(mes => {
                const tdMonto = document.createElement('td');
                tdMonto.className = 'text-xs border font-bold text-right border-black px-4 py-2 min-w-[100px]';
                if ((datosProcesados[tipo][mes] || 0) > 0) {
                    tdMonto.textContent = formatearMiles(datosProcesados[tipo][mes] || 0);
                    totalGeneral += datosProcesados[tipo][mes];
                }
                trFila.appendChild(tdMonto);
            });

            const tdTotalGeneral = document.createElement('td');
            tdTotalGeneral.className = 'text-xs border font-bold text-right border-black px-4 py-2 min-w-[100px]';
            tdTotalGeneral.textContent = formatearMiles(totalGeneral);
            trFila.appendChild(tdTotalGeneral);

            tbody.appendChild(trFila);
        });

        tabla.appendChild(tbody);

     
        document.getElementById('tables-container').appendChild(tabla);
    }

    function mostrarDetalle(tipo, datosDetallados, mesesRelevantes) {
        const trFilaDetalle = document.createElement('tr');
        trFilaDetalle.style.display = 'none'; 

      
        const nombresConMonto = Object.keys(datosDetallados).filter(nombre => {
            return mesesRelevantes.some(mes => datosDetallados[nombre][mes] > 0);
        }).sort(); 

    
        const tdNombre = document.createElement('td');
        tdNombre.colSpan = 1;
       tdNombre.className = 'text-left border border-black text-xs font-medium min-w-[300px] px-4 py-2'; 

      
        const divNombres = document.createElement('div');
        nombresConMonto.forEach(nombre => {
            const pNombre = document.createElement('p');
            pNombre.textContent = nombre;
            divNombres.appendChild(pNombre);
        });
        tdNombre.appendChild(divNombres);

        trFilaDetalle.appendChild(tdNombre);
        let totalGeneralDetalle = 0;
     
            mesesRelevantes.forEach(mes => {
        const tdMontoDetalle = document.createElement('td');
        tdMontoDetalle.style.verticalAlign = 'top'; 
        tdMontoDetalle.className = 'text-right border border-black text-xs font-medium px-4 py-2';
        
        const divMontos = document.createElement('div');
        nombresConMonto.forEach(nombre => {
            const pMonto = document.createElement('p');
            const monto = datosDetallados[nombre][mes] || 0;

         
            pMonto.textContent = formatearMiles(monto);
            totalGeneralDetalle += monto;
    
            if (monto === 0) {
                pMonto.classList.add('monto-oculto');
            }

            divMontos.appendChild(pMonto);
        });
        tdMontoDetalle.appendChild(divMontos);

        trFilaDetalle.appendChild(tdMontoDetalle);
    });
        
    const tdTotalGeneralDetalle = document.createElement('td');
    tdTotalGeneralDetalle.className = 'text-right border border-black text-xs font-medium px-4 py-2';

 
    const divTotales = document.createElement('div');
    nombresConMonto.forEach(nombre => {
        const pTotal = document.createElement('p');
        let totalNombre = 0;

    
        mesesRelevantes.forEach(mes => {
            totalNombre += datosDetallados[nombre][mes] || 0;
        });

        pTotal.textContent = formatearMiles(totalNombre); 
        divTotales.appendChild(pTotal);
    });

    tdTotalGeneralDetalle.appendChild(divTotales);
    trFilaDetalle.appendChild(tdTotalGeneralDetalle);

      
        const btnExpandir = document.getElementById(`btnExpandir-${tipo}`);
        const trFilaOriginal = btnExpandir.parentNode.parentNode;
        trFilaOriginal.insertAdjacentElement('afterend', trFilaDetalle);

   
        btnExpandir.textContent = '-';
        btnExpandir.onclick = function () {
            trFilaDetalle.style.display = 'none';
            btnExpandir.textContent = '+';
            btnExpandir.onclick = function () {
                trFilaDetalle.style.display = 'table-row';
                btnExpandir.textContent = '-';
                btnExpandir.onclick = function () {
                    trFilaDetalle.style.display = 'none';
                };
            };
        };

   
        trFilaDetalle.style.display = 'table-row';
    }
</script>