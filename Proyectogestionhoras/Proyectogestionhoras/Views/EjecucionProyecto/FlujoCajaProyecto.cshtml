@{
    ViewData["Title"] = "Flujo Caja Proyecto";
}


<style>
    .form-container {
    max-width: 1200px;
    margin: 0 auto;
    background-color: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    margin-top: 60px;
    }

    .form-title {
    font-size: 1.2rem;
    font-weight: 600;
    color: #333;
    text-align: center;
    margin-bottom: 10px;
    }

    .form-subtitle {
    font-size: 1.0rem;
    color: #666;
    text-align: center;
    margin-bottom: 20px;
    }



    .highlight {
    background-color: #f8d7da;
    font-weight: bold;
    }

    .panel-container {
    display: flex;
    justify-content: space-between;
    gap: 0px;
    width: 100%;
    margin-top: 0;
    padding-top: 0;
    }

    .panel-item {
    flex-grow: 1;
    border: 2px solid #444;
    border-radius: 0;
    padding: 10px 20px;
    background-color: #f2f3f4;
    color: black;
    text-align: center;
    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
    }



    .panel-item:hover {
    background-color: #fcaa67;
    color: #fff;
    }
</style>
@{
    int? idproyecto = Context.Session.GetInt32("numproyecto");
    var flujoList = ((IEnumerable<Proyectogestionhoras.Models.DTO.FlujoCajaDTO>)ViewBag.Flujo).ToList();
    var egresosList = ((IEnumerable<Proyectogestionhoras.Models.DTO.EgresoFlujoCajaDTO>)ViewBag.Egresos).ToList();

    decimal totalingresosreal = 0;
    decimal totalsociosreal = 0;
    decimal totalstaffreal = 0;
    decimal totalconsultoresreal = 0;
   
   
    decimal totalegresosreal = 0;
    decimal? totalmargenreal = 0;
}

<div class="form-container">
    

    <div class="panel-container flex justify-center mb-5">
        <a href="@Url.Action("ForecastIngreso","EjecucionProyecto",new{id=idproyecto})" class="panel-item bg-blue-500 text-white px-4 py-2 rounded-l hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400">
            Forecast Ingresos del Proyecto
        </a>
        <a href="@Url.Action("ForecastCostos","EjecucionProyecto",new{id=idproyecto})" class="panel-item bg-green-500 text-white px-4 py-2 hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-400">
            Forecast Costos del Proyecto
        </a>
        <a href="@Url.Action("SeleccionarProyecto","EjecucionProyecto",new{statusproyecto=2})" class="panel-item bg-gray-500 text-white px-4 py-2 rounded-r hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-400">
            Seleccionar otro Proyecto
        </a>
    </div>
    <div class="form-group">

        @foreach (var proyecto in ViewBag.Proyecto)
        {

            <p class="form-subtitle" style="color:black;">Información del Proyecto</p>

            <input type="hidden" id="unidadNegocio" value="@proyecto.IDUNEGOCIO" />
            <input type="hidden" id="centroCosto" value="@proyecto.IDCOSTO" />
            <input type="hidden" id="codigo" value="@proyecto.Codigo" />
            <div class="overflow-x-auto">
                <table class="min-w-full text-xs border-collapse">
                    <thead>
                        <tr class="bg-green-100 text-black">
                            <th class="p-2 border border-gray-300 text-left">Número del Proyecto</th>
                            <th class="p-2 border border-gray-300 text-left">Proyecto</th>
                            <th class="p-2 border border-gray-300 text-left">Cliente</th>
                            <th class="p-2 border border-gray-300 text-left">Monto</th>
                            <th class="p-2 border border-gray-300 text-left">Departamento</th>
                            <th class="p-2 border border-gray-300 text-left">C.Costo</th>
                            <th class="p-2 border border-gray-300 text-left">Código</th>
                            <th class="p-2 border border-gray-300 text-left">Tipología Proyecto</th>
                            <th class="p-2 border border-gray-300 text-left">Empresa</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="p-2 border border-gray-300 text-left">@proyecto.numproyecto</td>
                            <td class="p-2 border border-gray-300 text-left">@proyecto.NombreProyecto</td>
                            <td class="p-2 border border-gray-300 text-left">@proyecto.NombreCliente</td>
                            <td class="p-2 border border-gray-300 text-left">@String.Format("{0:N0}", @proyecto.MontoPresupuesto)</td>
                            <td class="p-2 border border-gray-300 text-left">@proyecto.NOMBREDEPARTAMENTO</td>
                            <td class="p-2 border border-gray-300 text-left">@proyecto.Tipo_CCosto</td>
                            <td class="p-2 border border-gray-300 text-left">@proyecto.Codigo</td>
                            <td class="p-2 border border-gray-300 text-left">@proyecto.Tipo_Tipologia</td>
                            <td class="p-2 border border-gray-300 text-left">@proyecto.Tipo_Empresa</td>
                        </tr>
                    </tbody>
                </table>
            </div>


        }
    </div>

    <div class="form-group">
        <p class="form-subtitle" style="color:black">Flujo de Caja del Proyecto</p>
        <div class="flex overflow-x-auto">

            <table class="w-full max-w-3xl border-collapse text-left text-xs">
                <thead>
                    <tr class="bg-blue-100 text-black">

                        <th class="p-2 border border-gray-300 text-center">Tipo</th>
                        <th class="p-2 border border-gray-300 text-center">IDCUENTA</th>
                        <th class="p-2 border border-gray-300 min-w-[100px] text-center">Cuenta</th>


                        @foreach (var flujo in ViewBag.Flujo)
                        {
                            <th class="p-2 border border-gray-300 text-center" colspan="2">@flujo.Mes/@flujo.Anio</th>
                        }
                        <th class="p-2 border border-gray-300 text-center">Total Real</th>
                    </tr>
                    <tr class="bg-gray-200 text-black">

                        <td class="p-2 border border-gray-300 text-center"></td> 
                        <td class="p-2 border border-gray-300 text-center"></td> 
                        <td class="p-2 border border-gray-300 text-center"></td> 
                        @foreach (var flujo in ViewBag.Flujo)
                        {
                            <th class="p-2 border border-gray-300 text-center">Proyectado</th>
                            <th class="p-2 border border-gray-300 text-center">Real</th>
                           
                        }
                        <td class="p-2 border border-gray-300 text-center"></td>
                    </tr>
                </thead>
                <tbody>

                    <tr >
                        <td class="border font-bold border-gray-300 sticky left-0 bg-white text-center">Ingresos</td>
                        @foreach (var flujo in ViewBag.Flujo)
                        {
                            <td class="px-4 py-2 border border-gray-300 text-center min-w-[50px]">
                                @flujo.Idcuenta
                            </td>
                            <td class="px-4 py-2 border border-gray-300 text-left min-w-[100px]">
                                @flujo.Cuenta
                            </td>
                            break;
                        }
                        @foreach (var flujo in ViewBag.Flujo)
                        {

                            <td class="px-4 py-2 font-bold border border-gray-300 text-right min-w-[50px]">
                                @(flujo.MontoProyectado == 0 ? "" : String.Format("{0:N0}", flujo.MontoProyectado))
                            </td>

                            <td class="px-4 py-2 font-bold border border-gray-300 text-right min-w-[50px]">
                                @(flujo.MontoReal == 0 ? "" : String.Format("{0:N0}", flujo.MontoReal))
                            </td>

                            totalingresosreal += flujo.MontoReal;

                        }
                        <td class="px-4 py-2 border border-gray-300 text-right font-bold min-w-[50px]">
                            @String.Format("{0:N0}", totalingresosreal)
                        </td>
                    </tr>



                    @*SOCIOS*@
                    <tr>
                        <td class="p-2 border border-gray-300 text-center sticky left-0 bg-white">HH Socios</td>
                        @foreach (var cuenta in ViewBag.CuentaSocio)
                        {
                            <td class="p-2 border border-gray-300 text-center">@cuenta.Idcuenta</td>
                            <td class="px-4 py-2 border border-gray-300 text-left min-w-[100px]">@cuenta.Cuenta</td>
                            break;
                        }

                        @foreach (var flujo in ViewBag.Egresos)
                        {
                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @(flujo.MontosSocioProyectado == 0 ? "" : String.Format("{0:N0}", flujo.MontosSocioProyectado))
                            </td>

                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @(flujo.MontoSocioReal == 0 ? "" : String.Format("{0:N0}", flujo.MontoSocioReal))
                            </td>
                            totalsociosreal += flujo.MontoSocioReal;
                        }
                        <td class="px-4 py-2 border border-gray-300 text-right font-bold min-w-[50px]">
                            @(totalsociosreal == 0 ? "" : String.Format("{0:N0}", totalsociosreal))
                        </td>
                    </tr>


                    @*STAFF*@
                    <tr>
                        <td class="p-2 border border-gray-300 text-center sticky left-0 bg-white">HH Staff</td>
                        @foreach (var cuenta in ViewBag.CuentaStaff)
                        {
                            <td class="p-2 border border-gray-300 text-center">@cuenta.Idcuenta</td>
                            <td class="px-4 py-2 border border-gray-300 text-left min-w-[100px]">@cuenta.Cuenta</td>
                            break;
                        }
                        @foreach (var flujo in ViewBag.Egresos)
                        {

                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @(flujo.MontosStaffProyectado == 0 ? "" : String.Format("{0:N0}", flujo.MontosStaffProyectado))
                            </td>

                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @(flujo.MontoStaffReal == 0 ? "" : String.Format("{0:N0}", flujo.MontoStaffReal))
                            </td>
                            totalstaffreal += flujo.MontoStaffReal;
                        }
                        <td class="px-4 py-2 border border-gray-300 text-right font-bold min-w-[50px]">
                            @(totalstaffreal == 0 ? "" : String.Format("{0:N0}", totalstaffreal))
                        </td>
                    </tr>




                    @*CONSULTORES*@
                    <tr>
                        <td class="p-2 border border-gray-300 text-center sticky left-0 bg-white">HH Consultores</td>
                        @foreach (var cuenta in ViewBag.CuentaConsultor)
                        {
                            <td class="p-2 border border-gray-300 text-center ">@cuenta.Idcuenta</td>
                            <td class="px-4 py-2 border border-gray-300 text-left min-w-[100px]" >@cuenta.Cuenta</td>
                            break;
                        }
                        @foreach (var flujo in ViewBag.Egresos)
                        {

                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @(flujo.MontosConsultoresProyectado == 0 ? "" : String.Format("{0:N0}", flujo.MontosConsultoresProyectado))
                            </td>

                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @(flujo.MontoConsultoresReal == 0 ? "" : String.Format("{0:N0}", flujo.MontoConsultoresReal))
                            </td>
                            totalconsultoresreal += flujo.MontoConsultoresReal;
                        }
                        <td class="px-4 py-2 border border-gray-300 text-right font-bold min-w-[50px]">
                            @(totalconsultoresreal == 0 ? "" : String.Format("{0:N0}", totalconsultoresreal))
                        </td>
                    </tr>

                    @*SERVICIOS*@




                    @foreach (var grupo in ViewBag.Servicios)
                    {
                       
                        bool hayServiciosConValor = false;

                        
                        @foreach (var servicio in grupo.Servicios)
                        {
                            if (servicio.MontosServiciosProyectado > 0 || servicio.MontoSerivicioReal > 0)
                            {
                                hayServiciosConValor = true;
                                break; 
                            }
                        }

                        
                        if (hayServiciosConValor)
                        {
                            <tr>
                                <td class="p-2 border border-gray-300 text-center sticky left-0 bg-white" rowspan="1">@grupo.ServicioNombre</td>
                                @foreach (var servicio in grupo.Servicios)
                                {
                                    @if (@servicio.idcuentaservicio > 0)
                                    {
                                        <td class="px-4 py-2 border border-gray-300 text-center min-w-[50px]">
                                            @servicio.idcuentaservicio
                                        </td>
                                        <td class="px-4 py-2 border border-gray-300 text-left min-w-[100px]">
                                            @servicio.CuentaServicio
                                        </td>
                                        break;
                                    }
                                }
                                @{var totalserviciosreales = 0m;}
                                @foreach (var servicio in grupo.Servicios)
                                {
                                    <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                        @(servicio.MontosServiciosProyectado == 0 ? "" : String.Format("{0:N0}", servicio.MontosServiciosProyectado))
                                    </td>
                                    <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                        @(servicio.MontoSerivicioReal == 0 ? "" : String.Format("{0:N0}", servicio.MontoSerivicioReal))
                                    </td>
                                    totalserviciosreales += servicio.MontoSerivicioReal;
                                }
                                <td class="px-4 py-2 border border-gray-300 text-right font-bold min-w-[50px]">
                                    @(totalserviciosreales == 0 ? "" : String.Format("{0:N0}", totalserviciosreales))
                                </td>
                            </tr>
                        }
                    }

                    
                    @*GASTOS*@
                    @if (ViewBag.Gastos != null && ViewBag.Gastos.Count > 0)
                    {
                        @foreach (var grupo in ViewBag.Gastos)
                        {
                            
                            bool hayGastosConValor = false;

                           
                            @foreach (var gasto in grupo.Gastos)
                            {
                                if (gasto.MontosGastosProyectado > 0 || gasto.MontoGastoReal > 0)
                                {
                                    hayGastosConValor = true;
                                    break; 
                                }
                            }

                            
                            if (hayGastosConValor)
                            {
                                <tr>
                                    <td class="p-2 border border-gray-300 text-center sticky left-0 bg-white" rowspan="1">@grupo.GastosNombres</td>
                                    @foreach (var gasto in grupo.Gastos)
                                    {
                                        @if (@gasto.idcuentagasto > 0)
                                        {
                                            <td class="px-4 py-2 border border-gray-300 text-center min-w-[50px]">
                                                @gasto.idcuentagasto
                                            </td>
                                            <td class="px-4 py-2 border border-gray-300 text-left min-w-[100px]">
                                                @gasto.Cuentagasto
                                            </td>
                                        }
                                        break;
                                    }
                                    @{
                                        var totalgastosreal = 0m;
                                    }
                                    @foreach (var gasto in grupo.Gastos)
                                    {
                                        <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                            @(gasto.MontosGastosProyectado == 0 ? "" : String.Format("{0:N0}", gasto.MontosGastosProyectado))
                                        </td>
                                        <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                            @(gasto.MontoGastoReal == 0 ? "" : String.Format("{0:N0}", gasto.MontoGastoReal))
                                        </td>
                                        totalgastosreal += gasto.MontoGastoReal;
                                    }
                                    <td class="px-4 py-2 border border-gray-300 text-right font-bold min-w-[50px]">
                                        @(totalgastosreal == 0 ? "" : String.Format("{0:N0}", totalgastosreal))
                                    </td>
                                </tr>
                            }
                        }
                    }
                   
                    
                   

                   <tr class="font-bold">
                        <td class="p-2 border border-gray-300 text-center sticky left-0 bg-white">Total Egresos</td>
                        <td class="p-2 border border-gray-300 text-center"></td>
                        <td class="p-2 border border-gray-300 text-center"></td>
                        @for (int i = 0; i < flujoList.Count; i++)
                        {
                            var flujoActual = flujoList[i];
                            var totalProyectado = egresosList
                            .Where(e => e.Mes == flujoActual.Mes && e.Anio == flujoActual.Anio)
                            .Sum(e => (e.MontosSocioProyectado ?? 0) +
                            (e.MontosStaffProyectado ?? 0) +
                            (e.MontosConsultoresProyectado ?? 0));


                            var totalReal = egresosList
                            .Where(e => e.Mes == flujoActual.Mes && e.Anio == flujoActual.Anio)
                            .Sum(e => (e.MontoSocioReal ?? 0) +
                            (e.MontoStaffReal ?? 0) +
                            (e.MontoConsultoresReal ?? 0) 
                            );

                            
                            decimal totalServiciosProyectado = 0;
                            decimal totalServiciosReal = 0;

                            foreach (var grupo in ViewBag.Servicios)
                            {
                                foreach (var servicio in grupo.Servicios)
                                {
                                    if (servicio.Mes == flujoActual.Mes && servicio.Anio == flujoActual.Anio)
                                    {
                                        totalServiciosProyectado += servicio.MontosServiciosProyectado ?? 0;
                                        totalServiciosReal += servicio.MontoSerivicioReal ?? 0;
                                    }
                                }
                            }

                            decimal totalGastosProyectado = 0;
                            decimal totalGastosReal = 0;

                           foreach (var grupo in ViewBag.Gastos)
                            {
                                foreach (var gasto in grupo.Gastos)
                                {
                                    if (gasto.Mes == flujoActual.Mes && gasto.Anio == flujoActual.Anio)
                                    {
                                        totalGastosProyectado += gasto.MontosGastosProyectado ?? 0;
                                        totalGastosReal += gasto.MontoGastoReal ?? 0;
                                    }
                                }
                            }

                            <td  class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @String.Format("{0:N0}", totalProyectado + totalServiciosProyectado + totalGastosProyectado)
                            </td>
                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @String.Format("{0:N0}", totalReal + totalServiciosReal + totalGastosReal)
                            </td>
                            totalegresosreal += totalReal + totalServiciosReal + totalGastosReal;
                        }
                        <td class="px-4 py-2 border border-gray-300 text-right font-bold min-w-[50px]">
                            @(totalegresosreal == 0 ? "" : String.Format("{0:N0}", totalegresosreal))
                        </td>
                    </tr>
                    







                    <tr class="bg-gray-300 font-bold">
                        <td class="p-2 border border-gray-300 text-center sticky left-0 bg-gray-300">Margen del Proyecto</td>
                        <td class="p-2 border border-gray-300 text-center"></td>
                        <td class="p-2 border border-gray-300 text-center"></td>
                        @for (int i = 0; i < flujoList.Count; i++)
                        {
                            var flujoActual = flujoList[i];

                            // Ingresos
                            var ingresoProyectado = flujoActual.MontoProyectado;
                            var ingresoReal = flujoActual.MontoReal;

                            // Total Egresos
                            var totalEgresosProyectado = egresosList
                            .Where(e => e.Mes == flujoActual.Mes && e.Anio == flujoActual.Anio)
                            .Sum(e => (e.MontosSocioProyectado ?? 0) +
                            (e.MontosStaffProyectado ?? 0) +
                            (e.MontosConsultoresProyectado ?? 0) );

                            var totalEgresosReal = egresosList
                            .Where(e => e.Mes == flujoActual.Mes && e.Anio == flujoActual.Anio)
                            .Sum(e => (e.MontoSocioReal ?? 0) +
                            (e.MontoStaffReal ?? 0) +
                            (e.MontoConsultoresReal ?? 0));

                            decimal totalServiciosProyectado = 0;
                            decimal totalServiciosReal = 0;

                            foreach (var grupo in ViewBag.Servicios)
                            {
                                foreach (var servicio in grupo.Servicios)
                                {
                                    if (servicio.Mes == flujoActual.Mes && servicio.Anio == flujoActual.Anio)
                                    {
                                        totalServiciosProyectado += servicio.MontosServiciosProyectado ?? 0;
                                        totalServiciosReal += servicio.MontoSerivicioReal ?? 0;
                                    }
                                }
                            }

                            decimal totalGastosProyectado = 0;
                            decimal totalGastosReal = 0;

                            foreach (var grupo in ViewBag.Gastos)
                            {
                                foreach (var gasto in grupo.Gastos)
                                {
                                    if (gasto.Mes == flujoActual.Mes && gasto.Anio == flujoActual.Anio)
                                    {
                                        totalGastosProyectado += gasto.MontosGastosProyectado ?? 0;
                                        totalGastosReal += gasto.MontoGastoReal ?? 0;
                                    }
                                }
                            }

                            // Margen
                            var margenProyectado = ingresoProyectado - (totalEgresosProyectado + totalGastosProyectado + totalServiciosProyectado);
                            var margenReal = ingresoReal - (totalEgresosReal + totalGastosReal + totalServiciosReal);

                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @String.Format("{0:N0}", margenProyectado)
                            </td>
                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @String.Format("{0:N0}", margenReal)
                            </td>
                            totalmargenreal += margenReal;
                        }
                        <td class="px-4 py-2 border border-gray-300 text-right font-bold min-w-[50px]">
                            @(totalmargenreal == 0 ? "" : String.Format("{0:N0}", totalmargenreal))
                        </td>
                    </tr>
                    
                    <tr class="bg-green-100 font-bold">
                        <td class="p-2 border border-gray-300 text-center sticky left-0 bg-green-100">Margen de Proyecto Real (%)</td>
                        <td class="p-2 border border-gray-300 text-center"></td>
                        <td class="p-2 border border-gray-300 text-center"></td>
                        @for (int i = 0; i < flujoList.Count; i++)
                        {
                            var flujoActual = flujoList[i];

                            
                            var ingresoReal = flujoActual.MontoReal;

                            
                            var totalEgresosReal = egresosList
                            .Where(e => e.Mes == flujoActual.Mes && e.Anio == flujoActual.Anio)
                            .Sum(e => (e.MontoSocioReal ?? 0) +
                            (e.MontoStaffReal ?? 0) +
                            (e.MontoConsultoresReal ?? 0) +
                            (e.MontoSerivicioReal ?? 0) +
                            (e.MontoGastoReal ?? 0));


                            
                            decimal totalServiciosReal = 0;

                            foreach (var grupo in ViewBag.Servicios)
                            {
                                foreach (var servicio in grupo.Servicios)
                                {
                                    if (servicio.Mes == flujoActual.Mes && servicio.Anio == flujoActual.Anio)
                                    {
                                        
                                        totalServiciosReal += servicio.MontoSerivicioReal ?? 0;
                                    }
                                }
                            }

                           
                            decimal totalGastosReal = 0;

                            foreach (var grupo in ViewBag.Gastos)
                            {
                                foreach (var gasto in grupo.Gastos)
                                {
                                    if (gasto.Mes == flujoActual.Mes && gasto.Anio == flujoActual.Anio)
                                    {
                                        
                                        totalGastosReal += gasto.MontoGastoReal ?? 0;
                                    }
                                }
                            }

                            
                           
                            var margenReal = ingresoReal - (totalEgresosReal + totalGastosReal + totalServiciosReal);

                           
                            var porcentajeMargenReal = ingresoReal > 0 && margenReal != null
                            ? Math.Round(((decimal)margenReal / ingresoReal.Value) * 100, 2)
                            : 0; 

                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                               
                            </td>
                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @porcentajeMargenReal.ToString("N0") %
                            </td>
                        }
                        <td class="px-4 py-2 border border-gray-300 text-right font-bold min-w-[50px]">
                            @{
                                var porcentajetotalMargenReal = totalingresosreal > 0 && totalmargenreal != null
                                ? Math.Round(((decimal)totalmargenreal.Value / totalingresosreal) * 100, 2)
                            : 0;}
                            @porcentajetotalMargenReal.ToString("N0") %
                        </td>
                    </tr>
                    
                    <tr class="bg-yellow-100 font-bold">
                        <td class="p-2 border border-gray-300 text-center sticky left-0 bg-yellow-100">Saldo Acumulado</td>
                        <td class="p-2 border border-gray-300 text-center"></td>
                        <td class="p-2 border border-gray-300 text-center"></td>
                        @for (int i = 0; i < flujoList.Count; i++)
                        {
                            var flujoActual = flujoList[i];

                            var ingresoReal = flujoActual.MontoReal;

                           
                            var totalEgresosReal = egresosList
                            .Where(e => e.Mes == flujoActual.Mes && e.Anio == flujoActual.Anio)
                            .Sum(e => (e.MontoSocioReal ?? 0) +
                            (e.MontoStaffReal ?? 0) +
                            (e.MontoConsultoresReal ?? 0) +
                            (e.MontoSerivicioReal ?? 0) +
                            (e.MontoGastoReal ?? 0));

                            decimal totalServiciosReal = 0;

                            foreach (var grupo in ViewBag.Servicios)
                            {
                                foreach (var servicio in grupo.Servicios)
                                {
                                    if (servicio.Mes == flujoActual.Mes && servicio.Anio == flujoActual.Anio)
                                    {

                                        totalServiciosReal += servicio.MontoSerivicioReal ?? 0;
                                    }
                                }
                            }


                            decimal totalGastosReal = 0;

                            foreach (var grupo in ViewBag.Gastos)
                            {
                                foreach (var gasto in grupo.Gastos)
                                {
                                    if (gasto.Mes == flujoActual.Mes && gasto.Anio == flujoActual.Anio)
                                    {

                                        totalGastosReal += gasto.MontoGastoReal ?? 0;
                                    }
                                }
                            }

                            var margenReal = ingresoReal - (totalEgresosReal + totalGastosReal + totalServiciosReal);

                            
                            ViewBag.SaldoAcumulado = (ViewBag.SaldoAcumulado ?? 0) + margenReal;

                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                
                            </td>
                            
                            <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                                @String.Format("{0:N0}", ViewBag.SaldoAcumulado)
                            </td>
                            
                        }
                        <td class="px-4 py-2 border border-gray-300 text-right min-w-[50px]">
                            @{
                                decimal? saldoacumuladototal = totalingresosreal - totalmargenreal;
                            }
                            @String.Format("{0:N0}", saldoacumuladototal)
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

</div>

