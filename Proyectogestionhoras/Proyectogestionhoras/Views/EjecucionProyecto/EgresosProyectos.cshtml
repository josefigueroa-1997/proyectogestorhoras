@{
	int? idproyecto = Context.Session.GetInt32("numproyecto");
	int? idusuario = Context.Session.GetInt32("id");
	int idproyectos = 0;
	decimal totalsocios = 0;
	decimal totalstaff = 0;

	decimal totalsociosproyectados = 0;
	decimal totalstaffproyectados = 0;
	decimal totalserviciosproyectados = 0;
	decimal totalgastosproyectados = 0;

	decimal totalcostosproyectados = 0;
	int idcuentasocio = ViewBag.Idcuentasocio;
	decimal costohhscio = ViewBag.costohhsocio;

	string? cuentasocio = ViewBag.cuentasocio;
	int idcuentastaff = ViewBag.Idcuentastaff;
	string? cuentastaff = ViewBag.cuentastaff;
	decimal costohhstaff = ViewBag.costohhstaff;
	decimal totalsociosforecast = 0;
	decimal totalstaffforecast = 0;

}

<div class="max-w-[1800px] mx-auto p-12 bg-gray-50 rounded-xl shadow-xl">


	<!-- 🔶 PESTAÑAS TIPO NAVEGADOR -->
	@foreach (var proyecto in ViewBag.Proyecto)
	{

		<div class="flex gap-2 mb-6">
			<a href="@Url.Action("ForecastCostos", "EjecucionProyecto", new { id = idproyectos })"
			   class="px-5 py-2 rounded-t-lg border border-b-0 transition-all
             @(ViewContext.RouteData.Values["action"]?.ToString() == "ForecastCostos"
                 ? "bg-white border-orange-500 text-orange-500 font-semibold"
                 : "bg-gray-200 text-gray-600 hover:bg-orange-500 hover:text-white")">
				Forecast Costos
			</a>
			<a href="@Url.Action("ForecastIngreso", "EjecucionProyecto", new { id = idproyectos })"
			   class="px-5 py-2 rounded-t-lg border border-b-0 transition-all
             @(ViewContext.RouteData.Values["action"]?.ToString() == "ForecastIngreso"
                 ? "bg-white border-orange-500 text-orange-500 font-semibold"
                 : "bg-gray-200 text-gray-600 hover:bg-orange-500 hover:text-white")">
				Forecast Ingresos
			</a>
			<a href="@Url.Action("FlujoCajaProyecto", "EjecucionProyecto", new { id = idproyectos })"
			   class="px-5 py-2 rounded-t-lg border border-b-0 transition-all
             @(ViewContext.RouteData.Values["action"]?.ToString() == "FlujoCajaProyecto"
                 ? "bg-white border-orange-500 text-orange-500 font-semibold"
                 : "bg-gray-200 text-gray-600 hover:bg-orange-500 hover:text-white")">
				Flujo de Caja
			</a>
			<a href="@Url.Action("SeleccionarProyecto", "EjecucionProyecto", new { statusproyecto = 2 })"
			   class="px-5 py-2 rounded-t-lg border border-b-0 transition-all
             @(ViewContext.RouteData.Values["action"]?.ToString() == "SeleccionarProyecto"
                 ? "bg-white border-orange-500 text-orange-500 font-semibold"
                 : "bg-gray-200 text-gray-600 hover:bg-orange-500 hover:text-white")">
				Seleccionar Proyecto
			</a>
		</div>
	}

	<!-- 🔶 INFORMACIÓN GENERAL -->
	<div class="bg-white p-6 rounded-xl border border-gray-300 mb-8">
		<h2 class="text-xl font-bold text-orange-500 mb-4">Información General del Proyecto</h2>
		<div class="overflow-x-auto">
			<table class="min-w-full text-sm border-collapse">
				<thead class="bg-gray-300 text-black">
					<tr>
						<th class="p-2 border">Proyecto</th>
						<th class="p-2 border">Cliente</th>
						<th class="p-2 border">Monto CLP</th>
						<th class="p-2 border">Moneda</th>
						<th class="p-2 border">Centro Costo</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var proyecto in ViewBag.Proyecto)
					{
						<tr class="bg-white hover:bg-gray-50">
							<td class="p-2 border text-center">@proyecto.Nombre</td>
							<td class="p-2 border text-center">UNIT</td>
							<td class="p-2 border text-right">10.000.000</td>
							<td class="p-2 border text-center">CLP</td>
							<td class="p-2 border text-center">pc-ec</td>

						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>


	<div class="flex gap-6">

		<!-- 🔸 SIDEBAR -->
		<aside class="w-64 sticky top-20 self-start bg-white border border-gray-200 p-4 rounded-xl shadow-md">
			<nav class="space-y-2 text-sm">
				<button data-section="general" class="w-full text-left px-4 py-2 rounded-lg hover:bg-orange-500 hover:text-white text-gray-700 font-medium transition-all">📋 Información del Proyecto</button>
				<button data-section="hh" class="w-full text-left px-4 py-2 rounded-lg hover:bg-orange-500 hover:text-white text-gray-700 font-medium transition-all">🔧 HH del Proyecto</button>
				<button data-section="consultores" class="w-full text-left px-4 py-2 rounded-lg hover:bg-orange-500 hover:text-white text-gray-700 font-medium transition-all">👨‍💼 Consultores</button>
				<button data-section="servicios" class="w-full text-left px-4 py-2 rounded-lg hover:bg-orange-500 hover:text-white text-gray-700 font-medium transition-all">🛠 Servicios</button>
				<button data-section="gastos" class="w-full text-left px-4 py-2 rounded-lg hover:bg-orange-500 hover:text-white text-gray-700 font-medium transition-all">💸 Gastos</button>
			</nav>
		</aside>

		<!-- 🔸 SECCIONES -->
		<main class="flex-1 space-y-8">

			<!--general-->
			<div id="section-general" class="seccion ">
				<h3 class="text-lg font-bold text-orange-500 mb-2">Resumen del Proyecto</h3>
				<div class="p-4 bg-gray-50 rounded-b">
					<div class="overflow-x-auto">
						<table class="min-w-full text-xs border-collapse">
							<thead>
								<tr class="bg-orange-100 text-black">

									<th class="p-2 border border-gray-300 text-left">Tipo</th>
									<th class="p-1 border border-gray-300 text-left">IdCuenta</th>
									<th class="p-2 border border-gray-300 text-left">Cuenta Contable</th>
									<th class="p-2 border border-gray-300 text-left">Total Proyectado</th>
									<th class="p-2 border border-gray-300 text-left">Total Real</th>
									<th class="p-2 border border-gray-300 text-left">Total Forecast</th>


								</tr>
							</thead>
							<tbody>
								<tr>
									<td class="p-1 border border-gray-300 text-right">
										HH Socios
									</td>
									<td class="p-1 border border-gray-300 text-right">
										5101004
									</td>
									<td class="p-1 border border-gray-300 text-right">
										consultor socio
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
								</tr>
								<tr>
									<td class="p-1 border border-gray-300 text-right">
										HH Staff
									</td>
									<td class="p-1 border border-gray-300 text-right">
										5101005
									</td>
									<td class="p-1 border border-gray-300 text-right">
										consultor staff
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
								</tr>
								<tr>
									<td class="p-1 border border-gray-300 text-right">
										Otros Gastos Generales
									</td>
									<td class="p-1 border border-gray-300 text-right">
										530909999
									</td>
									<td class="p-1 border border-gray-300 text-right">
										otros gastos
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
								</tr>
								<tr>
									<td class="p-1 border border-gray-300 text-right">
										Gastos de viajes
									</td>
									<td class="p-1 border border-gray-300 text-right">
										530909999
									</td>
									<td class="p-1 border border-gray-300 text-right">
										gastos de viajes
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
									<td class="p-1 border border-gray-300 text-right">
										100.000
									</td>
								</tr>


							</tbody>
						</table>
					</div>
				</div>


			</div>

			<!-- HH (accordion) -->

			<form asp-action="RegistrarHH" asp-controller="EjecucionProyecto" method="post">
				<div id="section-hh" class="seccion hidden">
					<h3 class="text-lg font-bold text-orange-500 mb-2">Horas Hombre</h3>
					@if (TempData["ErrorMessage"] != null)
					{
						<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4" role="alert">
							@TempData["ErrorMessage"]
						</div>
					}
					@if (TempData["SuccessMessage"] != null)
					{
						<div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4" role="alert">
							@TempData["SuccessMessage"]
						</div>
					}
					@if (TempData["ErrorMessage"] != null || TempData["SuccessMessage"] != null)
					{
						<script>
							setTimeout(() => {
								document.querySelectorAll('[role="alert"]').forEach(alert => {
									alert.style.transition = "opacity 0.5s ease-out";
									alert.style.opacity = "0";
									setTimeout(() => alert.remove(), 500); 
								});
							}, 5000); 
						</script>
					}

					<input type="hidden" name="idproyecto" value="@idproyecto" />
					<div class="flex justify-center mb-4">
						<button type="submit" class="bg-orange-500 text-white px-4 py-2 cursor-pointer rounded-t">
							Guardar Registros HH
						</button>
					</div>

					<details class="border rounded">
						<summary class="bg-orange-500 text-white px-4 py-2 cursor-pointer rounded-t">👨‍💼 HH Socios</summary>
						<div class="p-4 bg-gray-50 rounded-b">
							<div class="overflow-x-auto">
								<table class="min-w-full text-xs border-collapse">
									<thead>
										<tr class="bg-orange-100 text-black">

											<th class="p-2 border border-gray-300 text-left">Fecha</th>
											<th class="p-1 border border-gray-300 text-left">FechaPago</th>
											<th class="p-2 border border-gray-300 text-left">IDCUENTA</th>
											<th class="p-2 border border-gray-300 text-left">Cuenta Contable</th>
											<th class="p-2 border border-gray-300 text-left">Horas Efectivas</th>
											<th class="p-2 border border-gray-300 text-left">Costo Unitario</th>
											<th class="p-2 border border-gray-300 text-left">SubTotal</th>
											<th class="p-2 border border-gray-300 text-left">Reajuste</th>
											<th class="p-2 border border-gray-300 text-left">Total</th>
											<th class="p-2 border border-gray-300 text-left">Glosa</th>


										</tr>
									</thead>
									<tbody>
										@if (ViewBag.GastosHH != null)
										{

											@for (int i = 0; i < ViewBag.GastosHH.Count; i++)
											{

												var gasto = ViewBag.GastosHH[i];
												@if (gasto.tiporecurso == "Socio" && gasto.estado != 2)
												{


													<tr>
														<input type="hidden" name="Tiporecurso" value="@gasto.tiporecurso" />
														<input type="hidden" name="Mes" value="@gasto.mes" />
														<input type="hidden" name="Anio" value="@gasto.anio" />

														<input type="hidden" name="HHtotales" value="@gasto.totalhh" />

														<td class="p-2 border border-gray-300 text-left">@gasto.mes/@gasto.anio</td>
														<input type="hidden" name="IdGastoHH" value="@gasto.idgastohh" />
														@if (gasto.fechapago != null)
														{
															<td class="p-1 border border-gray-300 text-right">
																<input type="date" name="Fechapago" value="@gasto.fechapago?.ToString("yyyy-MM-dd")" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
															</td>

														}

														else
														{
															<td class="p-1 border border-gray-300 text-right">
																<input type="date" name="Fechapago" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
															</td>


														}

														<td class="p-2 border border-gray-300 text-right">@gasto.idcuentasocio</td>
														<td class="p-1">@gasto.cuentasocio</td>

														<td id="hhsocio" class="p-1 border border-gray-300 text-right w-20">@String.Format("{0:N2}", gasto.totalhh)</td>


														@if (idusuario == 88 || idusuario == 96)
														{
															<td class="p-1 border border-gray-300 text-right w-25"><input type="text" name="CostoUnitario" value="@String.Format("{0:N0}",gasto.costounitariomes ?? "")" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
															<td class="p-1 border border-gray-300 text-right w-25"><input type="text" name="Subtotal" value="@String.Format("{0:N0}",gasto.costorecursosocio ?? "")" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
														}


														else
														{
															<input type="hidden" name="Subtotal" value="@gasto.costorecursosocio" />
															<input type="hidden" name="CostoUnitario" value="@gasto.costounitariomes" />
															<td class="p-1 border border-gray-300 text-right w-25">@String.Format("{0:N0}", gasto.costounitariomes)</td>
															<td class="p-1 border border-gray-300 text-right w-25">@String.Format("{0:N0}", gasto.costorecursosocio)</td>
														}


														@if (gasto.reajuste != null)
														{
															<td class="p-2 border border-gray-300 text-right"><input type="text" value="@String.Format("{0:N0}",gasto.reajuste ?? "")" name="Reajuste" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
														}

														else
														{
															<td class="p-2 border border-gray-300 text-right"><input type="text" name="Reajuste" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
														}
														@if (gasto.monto != null)
														{
															<td class="p-2 border border-gray-300 text-right"><input type="text" id="montosocio" value="@String.Format("{0:N0}",gasto.monto ?? "")" readonly name="Monto" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
														}
														else
														{
															<td class="p-2 border border-gray-300 text-right"><input type="text" id="montosocio" readonly name="Monto" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
														}
														@if (gasto.observacion != "")
														{

															<td class="p-2 border border-gray-300 text-left">
																<textarea rows="2" name="Observacion" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48">@gasto.observacion</textarea>
															</td>

														}
														else
														{
															<td class="p-2 border border-gray-300 text-left">
																<textarea rows="2" name="Observacion" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48"></textarea>
															</td>
														}
														@if (gasto.estado == 1)
														{
															totalsocios += gasto.monto ?? 0;
														}



													</tr>
												}
											}

										}


									</tbody>
								</table>
							</div>
						</div>
						<div class="p-4 bg-gray-50 rounded-b">
							<h2 class="text-center text-lg font-semibold text-gray-700 mb-4">👨‍💼 Forecast Horas Hombre Socios</h2>
							<div class="overflow-x-auto">
								<table id="tablahhSocios" class="min-w-full text-xs border-collapse">
									<thead>
										<tr class="bg-green-200 text-black">
											<th class="p-2 border border-gray-300 text-left">Fecha Pago</th>
											<th class="p-2 border border-gray-300 text-center">HH</th>
											<th class="p-2 border border-gray-300 text-left">Valor HH/Proyecto</th>
											<th class="p-2 border border-gray-300 text-left">Total</th>



											<th class="p-2 border border-gray-300 text-left">Glosa</th>

											<th class="p-2 border border-gray-300 text-left">IDCUENTA</th>
											<th class="p-2 border border-gray-300 text-left">Cuenta Contable</th>
											<th class="p-2 border border-gray-300 text-left">Acción</th>



										</tr>
									</thead>
									<tbody>
										@if (ViewBag.GastosHH != null)
										{
											@foreach (var gs in ViewBag.GastosHH)
											{
												if (gs.estado == 2 && gs.tiporecurso == "Socio")
												{
													<tr>
														<td class="p-2 border border-gray-300 text-left"><input type="date" value="@gs.fechapago.ToString("yyyy-MM-dd")" name="fechahhsocio" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-30" /></td>
														<td class="hhsocio p-2 border border-gray-300 text-right"><input type="text" value="@String.Format("{0:N0}", @gs.totalhh)" name="hhsocio" class=" form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
														@if (idusuario == 88 || idusuario == 96)
														{
															<td class="p-2 border border-gray-300 text-right costohhsocio">
																<input type="text" value="@String.Format("{0:N0}",gs.costounitariomes ?? "")" name="costohhsocio" class="costohhsocio form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
															</td>
														}
														else
														{
															<td class="p-2 border border-gray-300 text-right costohhsocio">
																<input value="@String.Format("{0:N0}", gs.costounitariomes)" type="text" name="costohhsocio" readonly class="costohhsocio form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
															</td>
														}

														<td class="p-2 border border-gray-300 text-right"><input type="text" value="@String.Format("{0:N0}",gs.monto ?? "")" readonly name="montohhsocio" class="montohhsocio form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>



														<td class="p-2 border border-gray-300 text-left">
															<textarea rows="2" name="observacionhhsocio" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48">@gs.observacion</textarea>
														</td>
														<td class="p-2 border border-gray-300 text-right ">@gs.idcuentasocio</td>
														<td class="p-2 border border-gray-300 text-left ">@gs.cuentasocio</td>

														<td style="display:none;">
															<input type="hidden" name="EliminarhhSocio" class="EliminarhhSocio" value="false" />
														</td>
														<td class="p-2 border border-gray-300 text-left">
															<button type="button" class="bg-red-500 text-white font-bold py-2 px-4 rounded hover:bg-red-700" onclick="limpiarhhSocio(this)">Eliminar</button>
														</td>

													</tr>
													totalsociosforecast += gs.monto;
													<input type="hidden" name="Idhhsocio" value="@gs.idgastohh" />
													<input type="hidden" name="estadohhsocio" value="@gs.estado" />
													<input type="hidden" name="recursohhsocio" value="@gs.tiporecurso" />
												}

											}
										}
										<tr>
											<td class="p-2 border border-gray-300 text-left"><input type="date" name="fechahhsocio" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-30" /></td>
											<td class="hhsocio p-2 border border-gray-300 text-right"><input type="text" name="hhsocio" class="  form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
											@if (idusuario == 88 || idusuario == 96)
											{
												<td class="p-2 border border-gray-300 text-right costohhsocio">
													<input value="@String.Format("{0:N0}", costohhscio)" type="text" name="costohhsocio" class="costohhsocio form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
												</td>
											}
											else
											{
												<td class="p-2 border border-gray-300 text-right costohhsocio">
													<input value="@String.Format("{0:N0}", costohhscio)" type="text" name="costohhsocio" readonly class="costohhsocio form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
												</td>
											}



											<td class="p-2 border border-gray-300 text-right"><input type="text" id="montohhsocio" readonly name="montohhsocio" class="montohhsocio form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>



											<td class="p-2 border border-gray-300 text-left">
												<textarea rows="2" name="observacionhhsocio" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48"></textarea>
											</td>
											<td class="p-2 border border-gray-300 text-right ">@idcuentasocio</td>
											<td class="p-2 border border-gray-300 text-left ">@cuentasocio</td>
											<td style="display:none;">
												<input type="hidden" name="EliminarhhSocio" class="EliminarhhSocio" value="false" />
											</td>

											<input type="hidden" name="Idhhsocio" value="" />
											<input type="hidden" name="estadohhsocio" value="2" />
											<input type="hidden" name="recursohhsocio" value="Socio" />
										</tr>

									</tbody>
								</table>
								<button id="btnAgregarhhSocio" class="bg-orange-500 text-white px-4 py-2 cursor-pointer rounded-t">Agregar otro Forecast hh Socio</button>

							</div>


						</div>
					</details>
					<details class="border mt-4 rounded">
						<summary class="bg-orange-500 text-white px-4 py-2 cursor-pointer rounded-t">👨‍💼 HH Staff</summary>
						<div class="p-4 bg-gray-50 rounded-b">
							<div class="overflow-x-auto">
								<table class="min-w-full text-xs border-collapse">
									<thead>
										<tr class="bg-orange-100 text-black">

											<th class="p-2 border border-gray-300 text-left">Fecha</th>
											<th class="p-2 border border-gray-300 text-left">FechaPago</th>
											<th class="p-2 border border-gray-300 text-left">IDCUENTA</th>
											<th class="p-2 border border-gray-300 text-left">Cuenta Contable</th>
											<th class="p-2 border border-gray-300 text-left">Horas Efectivas</th>
											<th class="p-2 border border-gray-300 text-left">Costo Unitario</th>
											<th class="p-2 border border-gray-300 text-left">SubTotal</th>
											<th class="p-2 border border-gray-300 text-left">Reajuste</th>
											<th class="p-2 border border-gray-300 text-left">Total</th>
											<th class="p-2 border border-gray-300 text-left">Glosa</th>


										</tr>
									</thead>
									<tbody>
										@if (ViewBag.GastosHH != null)
										{

											@for (int i = 0; i < ViewBag.GastosHH.Count; i++)
											{

												var gasto = ViewBag.GastosHH[i];
												@if (gasto.tiporecurso == "Staff" && gasto.estado != 2)
												{


													<tr>
														<input type="hidden" name="Tiporecursostaff" value="@gasto.tiporecurso" />
														<input type="hidden" name="Messtaff" value="@gasto.mes" />
														<input type="hidden" name="Aniostaff" value="@gasto.anio" />

														<input type="hidden" name="HHtotalesstaff" value="@gasto.totalhh" />

														<td class="p-2 border border-gray-300 text-left">@gasto.mes/@gasto.anio</td>
														<input type="hidden" name="IdGastoHHstaff" value="@gasto.idgastohh" />
														@if (gasto.fechapago != null)
														{
															<td class="p-1 border border-gray-300 text-right">
																<input type="date" name="Fechapagostaff" value="@gasto.fechapago?.ToString("yyyy-MM-dd")" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
															</td>

														}

														else
														{
															<td class="p-1 border border-gray-300 text-right">
																<input type="date" name="Fechapagostaff" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
															</td>


														}

														<td class="p-2 border border-gray-300 text-right">@gasto.idcuentastaff</td>
														<td class="p-1">@gasto.cuentastaff</td>

														<td id="hhstaff" class="p-1 border border-gray-300 text-right w-20">@String.Format("{0:N2}", gasto.totalhh)</td>
														@if (idusuario == 88 || idusuario == 96)
														{
															<td class="p-1 border border-gray-300 text-right w-25"><input type="text" name="CostoUnitarioStaff" value="@String.Format("{0:N0}",gasto.costounitariomes ?? "")" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
															<td class="p-1 border border-gray-300 text-right w-25"><input type="text" name="Subtotalstaff" value="@String.Format("{0:N0}",gasto.costorecurstaff ?? "")" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
														}


														else
														{
															<input type="hidden" name="Subtotalstaff" value="@gasto.costorecurstaff" />
															<input type="hidden" name="CostoUnitarioStaff" value="@gasto.costounitariomes" />
															<td class="p-1 border border-gray-300 text-right w-25">@String.Format("{0:N0}", gasto.costounitariomes)</td>
															<td class="p-1 border border-gray-300 text-right w-25">@String.Format("{0:N0}", gasto.costorecurstaff)</td>
														}

														@if (gasto.reajuste != null)
														{
															<td class="p-2 border border-gray-300 text-right"><input type="text" value="@String.Format("{0:N0}",gasto.reajuste ?? "")" name="Reajustestaff" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
														}

														else
														{
															<td class="p-2 border border-gray-300 text-right"><input type="text" name="Reajustestaff" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
														}
														@if (gasto.monto != null)
														{
															<td class="p-2 border border-gray-300 text-right"><input type="text" id="montostaff" value="@String.Format("{0:N0}",gasto.monto ?? "")" readonly name="Montostaff" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
														}
														else
														{
															<td class="p-2 border border-gray-300 text-right"><input type="text" id="montostaff" readonly name="Montostaff" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
														}
														@if (gasto.observacion != "")
														{

															<td class="p-2 border border-gray-300 text-left">
																<textarea rows="2" name="Observacionstaff" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48">@gasto.observacion</textarea>
															</td>

														}
														else
														{
															<td class="p-2 border border-gray-300 text-left">
																<textarea rows="2" name="Observacionstaff" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48"></textarea>
															</td>
														}
														@if (gasto.estado == 1)
														{
															totalstaff += gasto.monto ?? 0;
														}




													</tr>
												}
											}

										}


									</tbody>
								</table>
							</div>
						</div>
						<div class="p-4 bg-gray-50 rounded-b">
							<h2 class="text-center text-lg font-semibold text-gray-700 mb-4">👨‍💼 Forecast Horas Hombre Staff</h2>
							<div class="overflow-x-auto">
								<table id="tablahhStaff" class="min-w-full text-xs border-collapse">
									<thead>
										<tr class="bg-green-200 text-black">
											<th class="p-2 border border-gray-300 text-left">Fecha Pago</th>
											<th class="p-2 border border-gray-300 text-center">HH</th>
											<th class="p-2 border border-gray-300 text-left">Valor HH/Proyecto</th>
											<th class="p-2 border border-gray-300 text-left">Total</th>



											<th class="p-2 border border-gray-300 text-left">Glosa</th>

											<th class="p-2 border border-gray-300 text-left">IDCUENTA</th>
											<th class="p-2 border border-gray-300 text-left">Cuenta Contable</th>
											<th class="p-2 border border-gray-300 text-left">Acción</th>



										</tr>
									</thead>
									<tbody>
										@if (ViewBag.GastosHH != null)
										{
											@foreach (var gs in ViewBag.GastosHH)
											{
												if (gs.estado == 2 && gs.tiporecurso == "Staff")
												{
													<tr>
														<td class="p-2 border border-gray-300 text-left"><input type="date" value="@gs.fechapago.ToString("yyyy-MM-dd")" name="fechahhstaff" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-30" /></td>
														<td class="hhstaff p-2 border border-gray-300 text-right"><input type="text" value="@String.Format("{0:N0}", @gs.totalhh)" name="hhstaff" class=" form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>

														@if (idusuario == 88 || idusuario == 96)
														{
															<td class="p-2 border border-gray-300 text-right costohhstaff">
																<input type="text" value="@String.Format("{0:N0}",gs.costounitariomes ?? "")" name="costohhstaff" class="costohhstaff form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
															</td>
														}
														else
														{
															<td class="p-2 border border-gray-300 text-right costohhstaff">
																<input type="text" value="@String.Format("{0:N0}",gs.costounitariomes ?? "")" readonly name="costohhstaff" class="costohhstaff form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
															</td>
														}

														<td class="p-2 border border-gray-300 text-right"><input type="text" value="@String.Format("{0:N0}",gs.monto ?? "")" readonly name="montohhstaff" class="montohhstaff form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>



														<td class="p-2 border border-gray-300 text-left">
															<textarea rows="2" name="observacionhhstaff" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48">@gs.observacion</textarea>
														</td>
														<td class="p-2 border border-gray-300 text-right ">@gs.idcuentastaff</td>
														<td class="p-2 border border-gray-300 text-left ">@gs.cuentastaff</td>

														<td style="display:none;">
															<input type="hidden" name="EliminarhhStaff" class="EliminarhhStaff" value="false" />
														</td>
														<td class="p-2 border border-gray-300 text-left">
															<button type="button" class="bg-red-500 text-white font-bold py-2 px-4 rounded hover:bg-red-700" onclick="limpiarhhStaff(this)">Eliminar</button>
														</td>

													</tr>
													totalstaffforecast += gs.monto;
													<input type="hidden" name="Idhhstaff" value="@gs.idgastohh" />
													<input type="hidden" name="estadohhstaff" value="@gs.estado" />
													<input type="hidden" name="recursohhstaff" value="@gs.tiporecurso" />
												}

											}
										}
										<tr>
											<td class="p-2 border border-gray-300 text-left"><input type="date" name="fechahhstaff" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-30" /></td>
											<td class="hhstaff p-2 border border-gray-300 text-right"><input type="text" name="hhstaff" class="  form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
											@if (idusuario == 88 || idusuario == 96)
											{
												<td class="p-2 border border-gray-300 text-right costohhstaff">
													<input type="text" value="@String.Format("{0:N0}", costohhstaff)" name="costohhstaff" class="costohhstaff form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
												</td>
											}
											else
											{
												<td class="p-2 border border-gray-300 text-right costohhstaff">
													<input type="text" value="@String.Format("{0:N0}",costohhstaff)" readonly name="costohhstaff" class="costohhstaff form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
												</td>
											}
											<td class="p-2 border border-gray-300 text-right"><input type="text" id="montohhstaff" readonly name="montohhstaff" class="montohhstaff form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>



											<td class="p-2 border border-gray-300 text-left">
												<textarea rows="2" name="observacionhhstaff" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48"></textarea>
											</td>
											<td class="p-2 border border-gray-300 text-right ">@idcuentastaff</td>
											<td class="p-2 border border-gray-300 text-left ">@cuentastaff</td>
											<td style="display:none;">
												<input type="hidden" name="EliminarhhStaff" class="EliminarhhStaff" value="false" />
											</td>

											<input type="hidden" name="Idhhstaff" value="" />
											<input type="hidden" name="estadohhstaff" value="2" />
											<input type="hidden" name="recursohhstaff" value="Staff" />
										</tr>

									</tbody>
								</table>
								<button id="btnAgregarhhStaff" class="bg-orange-500 text-white px-4 py-2 cursor-pointer rounded-t">Agregar otro Forecast hh Staff</button>

							</div>
						</div>
					</details>
					<script>

						function parseCurrency(value) {
							const cleaned = value.replace(/\./g, '').replace(',', '.').replace(/[^\d.-]/g, '');
							const number = parseFloat(cleaned);
							return isNaN(number) ? 0 : number;
						}

						function formatCurrency(event) {
							const input = event.target;
							const rawValue = input.value;


							if (rawValue === '-') return;

							const value = parseCurrency(rawValue);
							const isNegative = value < 0;

							input.value = (isNegative ? '-' : '') + Math.abs(value).toLocaleString('es-CL');
						}



						function updateMontoGeneral(reajusteInput) {
							const row = reajusteInput.closest('tr');
							const name = reajusteInput.name;
							const isStaff = name.includes('Reajustestaff');

							const reajusteValue = parseCurrency(reajusteInput.value);
							const subtotalInputName = isStaff ? 'Subtotalstaff' : 'Subtotal';
							const montoInputName = isStaff ? 'Montostaff' : 'Monto';

							const subtotalInput = row.querySelector(`input[name*="${subtotalInputName}"]`);
							const montoInput = row.querySelector(`input[name*="${montoInputName}"]`);
							if (!subtotalInput || !montoInput) return;

							const subtotalValue = parseCurrency(subtotalInput.value);
							const total = reajusteValue + subtotalValue;

							montoInput.value = total.toLocaleString('es-CL');
						}

						function updateSubtotal(costoUnitarioInput) {
							const row = costoUnitarioInput.closest('tr');
							const name = costoUnitarioInput.name;
							const isStaff = name.includes('CostoUnitarioStaff');

							const hhCell = row.querySelector(`#${isStaff ? 'hhstaff' : 'hhsocio'}`);
							if (!hhCell) return;

							const hh = parseCurrency(hhCell.textContent);
							const costoUnitario = parseCurrency(costoUnitarioInput.value);
							const subtotal = hh * costoUnitario;

							const subtotalInputName = isStaff ? 'Subtotalstaff' : 'Subtotal';
							const subtotalInput = row.querySelector(`input[name="${subtotalInputName}"]`);
							if (subtotalInput) {
								subtotalInput.value = subtotal.toLocaleString('es-CL');
							}


							const reajusteInput = row.querySelector(`input[name*="Reajuste"]`);
							if (reajusteInput) {
								updateMontoGeneral(reajusteInput);
							}
						}
							document.querySelectorAll('input[name*="Reajuste"]').forEach(input => {
							input.addEventListener('input', (e) => {
								formatCurrency(e);
								updateMontoGeneral(input);
							});
						});

						document.querySelectorAll('input[name*="Reajuste"]').forEach(input => {
							input.addEventListener('input', () => {
								updateMontoGeneral(input);
							});
							input.addEventListener('blur', (e) => {
								formatCurrency(e);
							});
						});
						document.querySelectorAll('input[name="CostoUnitario"], input[name="CostoUnitarioStaff"]').forEach(input => {
							input.addEventListener('input', (e) => {
								formatCurrency(e);
								updateSubtotal(input);
							});
						});
						function updateMontoFinalCosto(triggerInput) {
							const row = triggerInput.closest('tr');
							const name = triggerInput.name;
							const isStaff = name.includes('hhstaff') || name.includes('costohhstaff');
							const hhInput = row.querySelector(`input[name="${isStaff ? 'hhstaff' : 'hhsocio'}"]`);
							const costoInput = row.querySelector(`input[name="${isStaff ? 'costohhstaff' : 'costohhsocio'}"]`);
							const montoInput = row.querySelector(`input[name="${isStaff ? 'montohhstaff' : 'montohhsocio'}"]`);
							if (!hhInput || !costoInput || !montoInput) return;
							const hh = parseCurrency(hhInput.value);
							const costo = parseCurrency(costoInput.value);
							montoInput.value = (hh * costo).toLocaleString('es-CL');
						}

						document.querySelectorAll('input[name="costohhstaff"], input[name="costohhsocio"]').forEach(input => {
							input.addEventListener('input', (e) => {
								formatCurrency(e);
								updateMontoFinalCosto(input);
							});
						});

						document.querySelectorAll('input[name="hhstaff"], input[name="hhsocio"]').forEach(input => {
							input.addEventListener('input', (e) => {
								formatCurrency(e);
								updateMontoFinalCosto(input);
							});
						});
						/*agregar socios forecast*/ 
						$(document).ready(function () {



							$('#btnAgregarhhSocio').on('click', function (e) {
								e.preventDefault();

								var nuevaFila = `
															   <tr>
																	   <td class="p-2 border border-gray-300 text-left"><input type="date" name="fechahhsocio" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-30" /></td>
														<td class="hhsocio p-2 border border-gray-300 text-right"><input type="text" name="hhsocio" class="  form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
						@if (idusuario == 88 || idusuario == 96)
						{
																	<td class="p-2 border border-gray-300 text-right costohhsocio">
																		<input value="@String.Format("{0:N0}", costohhscio)" type="text" name="costohhsocio" class="costohhsocio form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
																	</td>
						}
						else
						{
																	<td class="p-2 border border-gray-300 text-right costohhsocio">
																		<input value="@String.Format("{0:N0}", costohhscio)" type="text" name="costohhsocio" readonly class="costohhsocio form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
																	</td>
						}



													<td class="p-2 border border-gray-300 text-right"><input type="text" id="montohhsocio" readonly name="montohhsocio" class="montohhsocio form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>



													<td class="p-2 border border-gray-300 text-left">
														<textarea rows="2" name="observacionhhsocio" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48"></textarea>
													</td>
													<td class="p-2 border border-gray-300 text-right ">@idcuentasocio</td>
													<td class="p-2 border border-gray-300 text-left ">@cuentasocio</td>
													<td style="display:none;">
														<input type="hidden" name="EliminarhhSocio" class="EliminarhhSocio" value="false" />
													</td>

													<input type="hidden" name="Idhhsocio" value="" />
														 <input type="hidden" name="estadohhsocio" value="2" />
														 <input type="hidden" name="recursohhsocio" value="Socio" />
																</tr>
													`;

								$('#tablahhSocios tbody').append(nuevaFila);
								$(document).on('input', 'input[name="hhsocio"], input[name="costohhsocio"]', function (e) {
									formatCurrency(e);
									updateMontoFinalCosto(this);
								});

								var lastRow = $('#tablahhSocios tbody tr:last');

							});

						});
						//agregar forecast staff
											$(document).ready(function () {



							$('#btnAgregarhhStaff').on('click', function (e) {
								e.preventDefault();

								var nuevaFila = `
															   <tr>
																	 <td class="p-2 border border-gray-300 text-left"><input type="date" name="fechahhstaff" class="form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-30" /></td>
																				<td class="hhstaff p-2 border border-gray-300 text-right"><input type="text" name="hhstaff" class="  form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>
						@if (idusuario == 88 || idusuario == 96)
						{
																<td class="p-2 border border-gray-300 text-right costohhstaff">
																	<input type="text" value="@String.Format("{0:N0}", costohhstaff)" name="costohhstaff" class="costohhstaff form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
																</td>
						}
						else
						{
																<td class="p-2 border border-gray-300 text-right costohhstaff">
																	<input type="text" value="@String.Format("{0:N0}",costohhstaff)" readonly name="costohhstaff" class="costohhstaff form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" />
																</td>
						}
													<td class="p-2 border border-gray-300 text-right"><input type="text" id="montohhstaff" readonly name="montohhstaff" class="montohhstaff form-control text-right px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-25" /></td>




												<td class="p-2 border border-gray-300 text-left">
													<textarea rows="2" name="observacionhhstaff" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48"></textarea>
												</td>
												<td class="p-2 border border-gray-300 text-right ">@idcuentastaff</td>
												<td class="p-2 border border-gray-300 text-left ">@cuentastaff</td>
												<td style="display:none;">
													<input type="hidden" name="EliminarhhStaff" class="EliminarhhStaff" value="false" />
												</td>

												<input type="hidden" name="Idhhstaff" value="" />
												<input type="hidden" name="estadohhstaff" value="2" />
												<input type="hidden" name="recursohhstaff" value="Staff" />
																</tr>
													`;

								$('#tablahhStaff tbody').append(nuevaFila);
								$(document).on('input', 'input[name="hhstaff"], input[name="costohhstaff"]', function (e) {
									formatCurrency(e);
									updateMontoFinalCosto(this);
								});
								var lastRow = $('#tablahhStaff tbody tr:last');

							});
						});
											/*Eliminar hh Socio*/
						function limpiarhhSocio(button) {

							var fila = button.closest('tr');


							var esEliminado = fila.querySelector('input.EliminarhhSocio');
							if (esEliminado) {
								esEliminado.value = 'true';
							}

							fila.style.display = 'none';


						}

						 /*Eliminar hh Staff*/
						function limpiarhhStaff(button) {

							var fila = button.closest('tr');


							var esEliminado = fila.querySelector('input.EliminarhhStaff');
							if (esEliminado) {
								esEliminado.value = 'true';
							}

							fila.style.display = 'none';


						}
					</script>
				</div>
			</form>
			<!-- Consultores -->
			<div id="section-consultores" class="seccion hidden">
				<h3 class="text-lg font-bold text-orange-500 mb-2">👨‍💼 Consultores</h3>
				<!-- Accordion: Agregar Gasto (cerrado, pero primero) -->
				<details class="border rounded mb-4">
					<summary class="bg-orange-500 text-white px-4 py-2 cursor-pointer rounded-t">➕ Agregar Consultores Externos</summary>
					<div class="p-4 bg-gray-50 rounded-b">
						<button id="btnAgregarFila" class="mb-3 bg-orange-500 text-white px-4 py-2 rounded hover:bg-orange-600">Agregar fila</button>
						<div class="overflow-x-auto">
							<table id="tablaAgregarServicios" class="min-w-full text-xs border-collapse">
								<thead>
									<tr class="bg-orange-100 text-black">
										<th class="p-2 border border-gray-300 text-left">TipoServicio</th>
										<th class="p-2 border border-gray-300 text-left">Proveedor</th>
										<th class="p-2 border border-gray-300 text-left">Monto</th>
										<th class="p-2 border border-gray-300 text-left">FechaPago</th>
										<th class="p-2 border border-gray-300 text-left">Estado</th>
										<th class="p-2 border border-gray-300 text-left">Glosa</th>
										<th class="p-2 border border-gray-300 text-left">Cuenta Contable</th>
										<th class="p-2 border border-gray-300 text-left">Acción</th>
									</tr>
								</thead>
								<tbody>
									<!-- Vacío para agregar filas -->
								</tbody>
							</table>
						</div>
					</div>
				</details>

				<!-- Accordion: Tabla de Gastos (abierto por defecto, pero segundo) -->
				<details open class="border rounded">
					<summary class="bg-orange-500 text-white px-4 py-2 cursor-pointer rounded-t">👨‍💼 Consultores</summary>
					<div class="p-4 bg-gray-50 rounded-b">
						<div class="overflow-x-auto">
							<table id="tablaconsultores" class="min-w-full text-xs border-collapse">
								<thead>
									<tr class="bg-orange-100 text-black">
										<th class="p-2 border border-gray-300 text-left">TipoServicio</th>
										<th class="p-2 border border-gray-300 text-left">Proveedor</th>
										<th class="p-2 border border-gray-300 text-left">Monto</th>
										<th class="p-2 border border-gray-300 text-left">FechaPago</th>
										<th class="p-2 border border-gray-300 text-left">Estado</th>
										<th class="p-2 border border-gray-300 text-left">Glosa</th>
										<th class="p-2 border border-gray-300 text-left">Cuenta Contable</th>
										<th class="p-2 border border-gray-300 text-left">Acción</th>
									</tr>
								</thead>
								<tbody>
								</tbody>
							</table>
							<script>
								let listaconsultores = [];
								let listaProveedoresconsultores = [];

								async function cargarDatosConsultores(idProyecto, tipo) {
								  try {
									const [consultores, proveedores, serviciosReales] = await Promise.all([
									  fetch('/EjecucionProyecto/GetServicios').then(res => res.json()),
									  fetch('/EjecucionProyecto/GetProveedoresServicios').then(res => res.json()),
									  fetch(`/EjecucionProyecto/CargarServiciosReales?idproyecto=${idProyecto}&tipo=${tipo}`).then(res => res.json()),
									]);
									console.log("Servicios Reales cargados:", serviciosReales);

									listaconsultores = consultores;
									listaProveedoresconsultores = proveedores;

									renderizarTablaConsultores(serviciosReales);

								  } catch (error) {
									console.error("Error al cargar servicios:", error);
								  }
								}

									   function formatearMiles(valor) {
								  if (!valor) return "";
								  const numero = parseFloat(valor.toString().replace(/\./g, '').replace(',', '.'));
								  if (isNaN(numero)) return "";
								  return numero.toLocaleString("es-CL"); // o "es-ES"
								}
								function renderizarTablaConsultores(data) {
								  const tbody = document.querySelector('#tablaconsultores tbody');
								  tbody.innerHTML = "";

								  data.forEach((item, index) => {
									const row = document.createElement('tr');
									row.classList.add("bg-white", "hover:bg-gray-50");

									// Select para servicio
									const servicioSelect = `
									  <select class="border border-gray-300 rounded px-2 py-1" name="gasto">
										${listaconsultores.map(s => `
										  <option value="${s.id}" ${s.id === item.idservicio ? "selected" : ""}>${s.nombre}</option>
										`).join('')}
									  </select>
									`;

									// Select para Proveedor
									const proveedorSelect = `
									  <select class="border border-gray-300 rounded px-2 py-1" name="proveedor">
										${listaProveedoresconsultores.map(p => `
										  <option value="${p.id}" ${p.id === item.idproveedor ? "selected" : ""}>${p.nombre}</option>
										`).join('')}
									  </select>
									`;

									row.innerHTML = `
									  <td class="p-1 border">${servicioSelect}</td>
									  <td class="p-1 border">${proveedorSelect}</td>
									  <td class="p-1 border"><input type="text" name="monto" value="${formatearMiles(item.monto)}" class="monto-input w-full text-right border rounded px-2 py-1"></td>
									  <td class="p-1 border"><input type="date" name="fecha" value="${item.fecha.split('T')[0]}" class="w-full border rounded px-2 py-1"></td>
									  <td class="p-1 border"><select name="Estadohonorario" class="px-4 py-2 text-sm border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 ">
												<option value="Forecast" selected>Forecast</option>
												<option value="Pagada">Pagada</option>
											</select></td>
									  <td class="p-1 border"><textarea rows="2" name="observacion" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48">${item.observacion}</textarea></td>
									  <td class="p-1 border"><input type="text" readonly name="cuenta" value="${item.cuenta}" class="w-full border rounded px-2 py-1"></td>
									  <td class="p-1 border text-center">
										<button class="bg-red-500 text-white px-2 py-1 rounded text-xs hover:bg-red-600" onclick="eliminarFila(this)">🗑️</button>
									  </td>
									`;

									tbody.appendChild(row);
								  });
														  document.querySelectorAll(".monto-input").forEach(input => {
												input.addEventListener("input", () => {
									// Elimina todo lo que no sea número
												const valorSinFormato = input.value.replace(/\D/g, "");
												if (valorSinFormato) {
									  // Formatea con separador de miles
											 input.value = parseInt(valorSinFormato).toLocaleString("es-CL");
												} else {
											  input.value = "";
												}
											});
											});
								}

								function eliminarFila(button) {
								  const fila = button.closest('tr');
								  fila.remove();
								  // opcional: enviar eliminación al servidor
								}
									 const idProyectoActualss = '@idproyecto';

								cargarDatosConsultores(idProyectoActualss,"Consultores Externos");


							</script>
						</div>
					</div>
				</details>
			</div>

			<!-- Servicios -->
			<div id="section-servicios" class="seccion hidden">
				<h3 class="text-lg font-bold text-orange-500 mb-2">🛠 Servicios</h3>
				<!-- Accordion: Agregar Gasto (cerrado, pero primero) -->
				<details class="border rounded mb-4">
					<summary class="bg-orange-500 text-white px-4 py-2 cursor-pointer rounded-t">➕ Agregar Servicio</summary>
					<div class="p-4 bg-gray-50 rounded-b">
						<button id="btnAgregarFila" class="mb-3 bg-orange-500 text-white px-4 py-2 rounded hover:bg-orange-600">Agregar fila</button>
						<div class="overflow-x-auto">
							<table id="tablaAgregarServicios" class="min-w-full text-xs border-collapse">
								<thead>
									<tr class="bg-orange-100 text-black">
										<th class="p-2 border border-gray-300 text-left">TipoServicio</th>
										<th class="p-2 border border-gray-300 text-left">Proveedor</th>
										<th class="p-2 border border-gray-300 text-left">Monto</th>
										<th class="p-2 border border-gray-300 text-left">FechaPago</th>
										<th class="p-2 border border-gray-300 text-left">Estado</th>
										<th class="p-2 border border-gray-300 text-left">Glosa</th>
										<th class="p-2 border border-gray-300 text-left">Cuenta Contable</th>
										<th class="p-2 border border-gray-300 text-left">Acción</th>
									</tr>
								</thead>
								<tbody>
									<!-- Vacío para agregar filas -->
								</tbody>
							</table>
						</div>
					</div>
				</details>

				<!-- Accordion: Tabla de Gastos (abierto por defecto, pero segundo) -->
				<details open class="border rounded">
					<summary class="bg-orange-500 text-white px-4 py-2 cursor-pointer rounded-t">🛠 Servicios</summary>
					<div class="p-4 bg-gray-50 rounded-b">
						<div class="overflow-x-auto">
							<table id="tablaservicios" class="min-w-full text-xs border-collapse">
								<thead>
									<tr class="bg-orange-100 text-black">
										<th class="p-2 border border-gray-300 text-left">TipoServicio</th>
										<th class="p-2 border border-gray-300 text-left">Proveedor</th>
										<th class="p-2 border border-gray-300 text-left">Monto</th>
										<th class="p-2 border border-gray-300 text-left">FechaPago</th>
										<th class="p-2 border border-gray-300 text-left">Estado</th>
										<th class="p-2 border border-gray-300 text-left">Glosa</th>
										<th class="p-2 border border-gray-300 text-left">Cuenta Contable</th>
										<th class="p-2 border border-gray-300 text-left">Acción</th>
									</tr>
								</thead>
								<tbody>
								</tbody>
							</table>
							<script>
								let listaServicios = [];
								let listaProveedoresservicios = [];

								async function cargarDatosServicios(idProyecto, tipo) {
								  try {
									const [servicios, proveedores, serviciosReales] = await Promise.all([
									  fetch('/EjecucionProyecto/GetServicios').then(res => res.json()),
									  fetch('/EjecucionProyecto/GetProveedoresServicios').then(res => res.json()),
									  fetch(`/EjecucionProyecto/CargarServiciosReales?idproyecto=${idProyecto}&tipo=${tipo}`).then(res => res.json()),
									]);
									console.log("Servicios Reales cargados:", serviciosReales);

									listaServicios = servicios;
									listaProveedoresservicios = proveedores;

									renderizarTablaServicio(serviciosReales);

								  } catch (error) {
									console.error("Error al cargar servicios:", error);
								  }
								}

									   function formatearMiles(valor) {
								  if (!valor) return "";
								  const numero = parseFloat(valor.toString().replace(/\./g, '').replace(',', '.'));
								  if (isNaN(numero)) return "";
								  return numero.toLocaleString("es-CL"); // o "es-ES"
								}
								function renderizarTablaServicio(data) {
								  const tbody = document.querySelector('#tablaservicios tbody');
								  tbody.innerHTML = "";

								  data.forEach((item, index) => {
									const row = document.createElement('tr');
									row.classList.add("bg-white", "hover:bg-gray-50");

									// Select para servicio
									const servicioSelect = `
									  <select class="border border-gray-300 rounded px-2 py-1" name="gasto">
										${listaServicios.map(s => `
										  <option value="${s.id}" ${s.id === item.idservicio ? "selected" : ""}>${s.nombre}</option>
										`).join('')}
									  </select>
									`;

									// Select para Proveedor
									const proveedorSelect = `
									  <select class="border border-gray-300 rounded px-2 py-1" name="proveedor">
										${listaProveedoresservicios.map(p => `
										  <option value="${p.id}" ${p.id === item.idproveedor ? "selected" : ""}>${p.nombre}</option>
										`).join('')}
									  </select>
									`;

									row.innerHTML = `
									  <td class="p-1 border">${servicioSelect}</td>
									  <td class="p-1 border">${proveedorSelect}</td>
									  <td class="p-1 border"><input type="text" name="monto" value="${formatearMiles(item.monto)}" class="monto-input w-full text-right border rounded px-2 py-1"></td>
									  <td class="p-1 border"><input type="date" name="fecha" value="${item.fecha.split('T')[0]}" class="w-full border rounded px-2 py-1"></td>
									  <td class="p-1 border"><select name="Estadohonorario" class="px-4 py-2 text-sm border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 ">
												<option value="Forecast" selected>Forecast</option>
												<option value="Pagada">Pagada</option>
											</select></td>
									  <td class="p-1 border"><textarea rows="2" name="observacion" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48">${item.observacion}</textarea></td>
									  <td class="p-1 border"><input type="text" readonly name="cuenta" value="${item.cuenta}" class="w-full border rounded px-2 py-1"></td>
									  <td class="p-1 border text-center">
										<button class="bg-red-500 text-white px-2 py-1 rounded text-xs hover:bg-red-600" onclick="eliminarFila(this)">🗑️</button>
									  </td>
									`;

									tbody.appendChild(row);
								  });
														  document.querySelectorAll(".monto-input").forEach(input => {
												input.addEventListener("input", () => {
									// Elimina todo lo que no sea número
												const valorSinFormato = input.value.replace(/\D/g, "");
												if (valorSinFormato) {
									  // Formatea con separador de miles
											 input.value = parseInt(valorSinFormato).toLocaleString("es-CL");
												} else {
											  input.value = "";
												}
											});
											});
								}

								function eliminarFila(button) {
								  const fila = button.closest('tr');
								  fila.remove();
								  // opcional: enviar eliminación al servidor
								}
									 const idProyectoActuals = '@idproyecto';
									 console.log(idProyectoActuals);
								cargarDatosServicios(idProyectoActuals,"Otros");


							</script>
						</div>
					</div>
				</details>
			</div>

			<!-- Gastos -->
			<div id="section-gastos" class="seccion hidden">
				<h3 class="text-lg font-bold text-orange-500 mb-2">💸 Gastos</h3>

				<!-- Accordion: Agregar Gasto (cerrado, pero primero) -->
				<details class="border rounded mb-4">
					<summary class="bg-orange-500 text-white px-4 py-2 cursor-pointer rounded-t">➕ Agregar Gasto</summary>
					<div class="p-4 bg-gray-50 rounded-b">
						<button id="btnAgregarFila" class="mb-3 bg-orange-500 text-white px-4 py-2 rounded hover:bg-orange-600">Agregar fila</button>
						<div class="overflow-x-auto">
							<table id="tablaAgregarGastos" class="min-w-full text-xs border-collapse">
								<thead>
									<tr class="bg-orange-100 text-black">
										<th class="p-2 border border-gray-300 text-left">TipoGasto</th>
										<th class="p-2 border border-gray-300 text-left">Proveedor</th>
										<th class="p-2 border border-gray-300 text-left">Monto</th>
										<th class="p-2 border border-gray-300 text-left">FechaPago</th>
										<th class="p-2 border border-gray-300 text-left">Estado</th>
										<th class="p-2 border border-gray-300 text-left">Glosa</th>
										<th class="p-2 border border-gray-300 text-left">Cuenta Contable</th>
										<th class="p-2 border border-gray-300 text-left">Acción</th>
									</tr>
								</thead>
								<tbody>
									<!-- Vacío para agregar filas -->
								</tbody>
							</table>
						</div>
					</div>
				</details>

				<!-- Accordion: Tabla de Gastos (abierto por defecto, pero segundo) -->
				<details open class="border rounded">
					<summary class="bg-orange-500 text-white px-4 py-2 cursor-pointer rounded-t">📄 Gastos</summary>
					<div class="p-4 bg-gray-50 rounded-b">
						<div class="overflow-x-auto">
							<table id="tablagastos" class="min-w-full text-xs border-collapse">
								<thead>
									<tr class="bg-orange-100 text-black">
										<th class="p-2 border border-gray-300 text-left">TipoGasto</th>
										<th class="p-2 border border-gray-300 text-left">Proveedor</th>
										<th class="p-2 border border-gray-300 text-left">Monto</th>
										<th class="p-2 border border-gray-300 text-left">FechaPago</th>
										<th class="p-2 border border-gray-300 text-left">Estado</th>
										<th class="p-2 border border-gray-300 text-left">Glosa</th>
										<th class="p-2 border border-gray-300 text-left">Cuenta Contable</th>
										<th class="p-2 border border-gray-300 text-left">Acción</th>
									</tr>
								</thead>
								<tbody></tbody>
							</table>
							<script>
								let listaGastos = [];
								let listaProveedores = [];

								async function cargarDatosGastos(idProyecto) {
								  try {
									const [gastos, proveedores, gastosReales] = await Promise.all([
									  fetch('/EjecucionProyecto/GetGastos').then(res => res.json()),
									  fetch('/EjecucionProyecto/GetProveedoresGastos').then(res => res.json()),
									  fetch(`/EjecucionProyecto/CargarGastosReales?idproyecto=${idProyecto}`).then(res => res.json()),
									]);

									listaGastos = gastos;
									listaProveedores = proveedores;

									renderizarTablaGastos(gastosReales);

								  } catch (error) {
									console.error("Error al cargar gastos:", error);
								  }
								}

									   function formatearMiles(valor) {
								  if (!valor) return "";
								  const numero = parseFloat(valor.toString().replace(/\./g, '').replace(',', '.'));
								  if (isNaN(numero)) return "";
								  return numero.toLocaleString("es-CL"); // o "es-ES"
								}
								function renderizarTablaGastos(data) {
								  const tbody = document.querySelector('#tablagastos tbody');
								  tbody.innerHTML = "";

								  data.forEach((item, index) => {
									const row = document.createElement('tr');
									row.classList.add("bg-white", "hover:bg-gray-50");

									// Select para Gasto
									const gastoSelect = `
									  <select class="border border-gray-300 rounded px-2 py-1" name="gasto">
										${listaGastos.map(g => `
										  <option value="${g.id}" ${g.id === item.idGasto ? "selected" : ""}>${g.nombre}</option>
										`).join('')}
									  </select>
									`;

									// Select para Proveedor
									const proveedorSelect = `
									  <select class="border border-gray-300 rounded px-2 py-1" name="proveedor">
										${listaProveedores.map(p => `
										  <option value="${p.id}" ${p.id === item.idProveedor ? "selected" : ""}>${p.nombre}</option>
										`).join('')}
									  </select>
									`;

									const Estadoselect = `
									<select name="Estadohonorario" class="px-4 py-2 text-sm border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500">
										<option value="Forecast" ${item.estado === "Forecast" ? "selected" : ""}>Forecast</option>
										<option value="Pagada" ${item.estado === "Pagada" ? "selected" : ""}>Pagada</option>
									</select>
								`;

									row.innerHTML = `
									  <td class="p-1 border">${gastoSelect}</td>
									  <td class="p-1 border">${proveedorSelect}</td>
									  <td class="p-1 border"><input type="text" name="monto" value="${formatearMiles(item.monto)}" class="monto-input w-full text-right border rounded px-2 py-1"></td>
									  <td class="p-1 border"><input type="date" name="fecha" value="${item.fecha.split('T')[0]}" class="w-full border rounded px-2 py-1"></td>
									<td class="p-1 border">${Estadoselect}</td>
									  <td class="p-1 border"><textarea rows="2" name="observacion" class="form-control text-left px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-48">${item.observacion}</textarea></td>
									  <td class="p-1 border"><input type="text" readonly name="cuenta" value="${item.cuenta}" class="w-full border rounded px-2 py-1"></td>
									  <td class="p-1 border text-center">
										<button class="bg-red-500 text-white px-2 py-1 rounded text-xs hover:bg-red-600" onclick="eliminarFila(this)">🗑️</button>
									  </td>
									`;

									tbody.appendChild(row);
								  });
														  document.querySelectorAll(".monto-input").forEach(input => {
												input.addEventListener("input", () => {
									// Elimina todo lo que no sea número
												const valorSinFormato = input.value.replace(/\D/g, "");
												if (valorSinFormato) {
									  // Formatea con separador de miles
											 input.value = parseInt(valorSinFormato).toLocaleString("es-CL");
												} else {
											  input.value = "";
												}
											});
											});
								}

								function eliminarFila(button) {
								  const fila = button.closest('tr');
								  fila.remove();
								  // opcional: enviar eliminación al servidor
								}




							</script>
						</div>
					</div>
				</details>
			</div>
		</main>
	</div>
</div>
<div id="modal-loading" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
	<div class="bg-white p-6 rounded-xl shadow-lg flex items-center space-x-4">
		<svg class="animate-spin h-6 w-6 text-orange-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
			<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" />
			<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z" />
		</svg>
		<span class="text-gray-800 font-semibold">Cargando gastos...</span>
	</div>
</div>
<script>
	const buttons = document.querySelectorAll("aside button");
	const sections = document.querySelectorAll(".seccion");
	 const idProyectoActual = '@idproyecto';
	 let gastosCargados = false;
	buttons.forEach(btn => {
	  btn.addEventListener("click", () => {
		const target = btn.dataset.section;
		sections.forEach(sec => sec.classList.add("hidden"));
		document.getElementById(`section-${target}`).classList.remove("hidden");
		 if (target === "gastos" && !gastosCargados) {
		cargarDatosGastos(idProyectoActual);
		gastosCargados = true;
	  }
	  });
	});
	window.addEventListener("DOMContentLoaded", () => {
		const hash = window.location.hash;
		if (hash.startsWith("#section-")) {
			const targetSection = hash.replace("#section-", "");
			const button = document.querySelector(`button[data-section="${targetSection}"]`);
			if (button) button.click();
		}
	});
</script>
<script>
	function mostrarCargando() {
	  document.getElementById('modal-loading').classList.remove('hidden');
	}

	function ocultarCargando() {
	  document.getElementById('modal-loading').classList.add('hidden');
		}



</script>

