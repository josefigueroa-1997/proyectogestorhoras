@{
    ViewData["Title"] = "Editar Proyecto";
}

<style>
    body {
        font-family: 'Montserrat', sans-serif;
        background-color: #f5f5f5;
    }

    .form-container {
        max-width: 1200px;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-title {
        font-size: 1.8rem;
        font-weight: 600;
        color: #333;
        text-align: center;
        margin-bottom: 10px;
    }

    .form-subtitle {
        font-size: 1.2rem;
        color: #666;
        text-align: center;
        margin-bottom: 20px;
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .form-group {
        flex: 1;
        min-width: 220px;
    }

        .form-group label {
            display: block;
            font-size: 1rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 5px;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px;
            font-size: 1rem;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        .form-group select {
            cursor: pointer;
        }

    .form-group-radio {
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .form-group-radio label {
            margin-bottom: 0;
        }

    .button-container {
        text-align: center;
        margin-top: 20px;
    }

    .submit-btn, .clear-btn {
        padding: 10px 30px;
        font-size: 1rem;
        font-weight: 600;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
        margin-left: 10px;
    }

    .submit-btn {
        color: #fff;
        background-color: #fcaa67;
    }

        .submit-btn:hover {
            background-color: #e39450;
        }


    .clear-btn {
        color: #fff;
        background-color: #007bff;
    }

        .clear-btn:hover {
            background-color: #0056b3;
        }


    .horas-disponibles {
        display: block;
        font-size: 0.9rem;
        color: #666;
        margin-top: 5px;
        margin-bottom: 10px;
    }

    .eliminar-btn {
        padding: 10px 30px;
        font-size: 1rem;
        font-weight: 600;
        color: #fff;
        background-color: red;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .tabla-margen td {
        text-align: right;
    }
</style>

<div class="form-container">
    @foreach (var proyecto in ViewBag.Proyectos)
    {
        
    
        <h1 class="form-title">Editar Proyecto:@proyecto.numproyecto</h1>
    <p class="form-subtitle">Rellene la siguiente ficha con los datos del proyecto</p>

        <form action="@Url.Action("ActualizarProyecto","Proyecto")" method="post">
            <input type="hidden" name="idproyecto" value="@proyecto.Id" />
            <input type="hidden" name="idpresupuesto" value="@proyecto.IDPRESUPESTO" />
        <div class="form-row">
            <div class="form-group">
                <label for="numeroProyecto">Número de proyecto</label>
                    <input type="text" id="numeroProyecto" readonly name="numproyecto" value="@proyecto.numproyecto">
            </div>
            <div class="form-group">
                <label for="nombreProyecto">Nombre de proyecto</label>
                    <input type="text" id="nombreProyecto" name="nombre" value="@proyecto.NombreProyecto" required>
            </div>


            <div class="form-group">
                <label for="cliente">Cliente</label>
                    <input type="hidden" name="idcliente" value="@proyecto.IDCLIENTE" />
                <select id="cliente" name="cliente" disabled required>
                    <option value="" disabled selected>Seleccione un cliente</option>
                        @if (ViewBag.Clientes != null)
                        {
                            @foreach (var cliente in ViewBag.Clientes)
                            {
                                if (cliente.Id == proyecto.IDCLIENTE)
                                {
                                    <option value="@cliente.Id" selected>@cliente.Nombre</option>
                                }
                                else
                                {
                                    <option value="@cliente.Id">@cliente.Nombre</option>
                                }
                            }
                        }
                      
                </select>
            </div>
            <div class="form-group">
                <label for="cliente">Departamento</label>
                    <input type="hidden" name="idsucursal" value="@proyecto.IDDEPARTAMENTO" />
                <select id="sucursal" name="sucursal" disabled required>
                    <option value="" disabled selected>Seleccione un departamento</option>
                        @if (ViewBag.Sucursales != null)
                        {
                            @foreach (var sucursal in ViewBag.Sucursales)
                            {
                                if (sucursal.Id == proyecto.IDDEPARTAMENTO)
                                {
                                    <option value="@sucursal.Id" selected>@sucursal.Nombre</option>
                                }
                                else
                                {
                                    <option value="@sucursal.Id">@sucursal.Nombre</option>
                                }
                            }
                        }
                       


                </select>
            </div>
        </div>

        <div class="form-row">

            <div class="form-group">
                <label for="unidadNegocio">Unidad de negocio</label>
                <select id="unidadNegocio" name="unidadNegocio" required>
                    <option value="" disabled selected>Seleccione una unidad</option>
                        @if (ViewBag.Unegocios!=null)
                        {
                            @foreach (var uneogocio in ViewBag.Unegocios)
                            {
                                if (uneogocio.Id == proyecto.IDUNEGOCIO)
                                {
                                    <option value="@uneogocio.Id" selected>@uneogocio.TipoUnegocio</option>
                                }
                                else
                                {
                                    <option value="@uneogocio.Id">@uneogocio.TipoUnegocio</option>
                                }
                            }
                        }
                

                </select>
            </div>
            <div class="form-group">
                <label for="centroCosto">Centro de costo</label>
                <select id="centroCosto" name="centroCosto" required>
                    <option value="" disabled selected>Seleccione un centro de costo</option>
                        @if (ViewBag.Ccostos != null)
                        {
                            @foreach (var ccosto in ViewBag.Ccostos)
                            {

                                if (ccosto.Id == proyecto.IDCOSTO)
                                {
                                    <option value="@ccosto.Id" selected>@ccosto.TipoCcosto</option>
                                }
                                else
                                {
                                    <option value="@ccosto.Id">@ccosto.TipoCcosto</option>
                                }

                            }
                        }
                      
                </select>
            </div>
            <div class="form-group">
                <label for="codigoccosto">Código</label>
                    <input type="text" class="codigoccosto" name="codigoccosto" value="@proyecto.Codigo" readonly>
            </div>
            <div class="form-group">
                <label for="estadoProyecto">Estado del proyecto</label>
                    <select id="estadoProyecto" name="status" onchange="toggleFields()" required>
                    <option value="" disabled selected>Seleccione el estado del proyecto</option>
                        @if (ViewBag.Status != null)
                        {
                            @foreach (var statu in ViewBag.Status)
                            {

                                if (statu.Id == proyecto.STATUSPROYECTO)
                                {
                                    <option value="@statu.Id" selected>@statu.TipoStatus</option>
                                }
                                else
                                {
                                    <option value="@statu.Id">@statu.TipoStatus</option>
                                }
                            }
                        }
                     

                </select>
            </div>
                <div style="display:none" class="form-group" id="probabilidadDiv">
                <label for="Probabilidad">Probabilidad</label>
                <select id="probabilidad" name="probabilidad">
                    <option value="" disabled selected>Seleccione la Probabilidad del proyecto</option>

                        @if (proyecto.Probabilidad == "Alto")
                        {
                            <option value="Alto" selected>Alta</option>
                        }
                        else
                        {
                            <option value="Alto">Alta</option>
                        }

                        @if (proyecto.Probabilidad == "Medio")
                        {
                            <option value="Medio" selected>Media</option>
                        }
                        else
                        {
                            <option value="Medio">Media</option>
                        }

                        @if (proyecto.Probabilidad == "Bajo")
                        {
                            <option value="Bajo" selected>Baja</option>
                        }
                        else
                        {
                            <option value="Bajo">Baja</option>
                        }
                </select>
            </div>
                <div style="display:none" class="form-group" id="nivelProbabilidadDiv">
                <label for="nivelprobabilidad">Nivel Probabilidad</label>
                    <input type="text" id="nivelprobabilidad" name="porcentajeprobabilidad" value="@proyecto.Porcentaje_Probabilidad">
            </div>
                <div style="display:none" class="form-group" id="fechaPlazoDiv">
                <label for="fechaPlazo">Fecha de Plazo</label>
                    @if (proyecto.Fecha_Plazo_Neg != null)
                    {
                        <input type="date" id="fechaPlazo" name="fechaplazoneg" value="@proyecto.Fecha_Plazo_Neg.ToString("yyyy-MM-dd")">
                    }
                    else
                    {
                        <input type="date" id="fechaPlazo" name="fechaplazoneg" >
                    }

            </div>
        </div>

        <div class="form-row">

            <div class="form-group">
                <label for="tipologia">Tipología</label>
                <select id="tipologia" name="idtipologia" required>
                    <option value="" disabled selected>Seleccione una tipología</option>
                        @if (ViewBag.Tipologias != null)
                        {
                            @foreach (var tipologia in ViewBag.Tipologias)
                            {

                                if (tipologia.Id == proyecto.IDTIPOLOGIA)
                                {
                                    <option value="@tipologia.Id" selected>@tipologia.TipoTipologia</option>
                                }
                                else
                                {
                                    <option value="@tipologia.Id">@tipologia.TipoTipologia</option>
                                }
                            }
                        }
                      
                </select>
            </div>
            <div class="form-group">
                <label for="tipoEmpresa">Tipo de empresa</label>
                <select id="tipoEmpresa" name="tipoempresa" required>
                    <option value="" disabled selected>Seleccione el tipo de empresa</option>
                    @if(ViewBag.Empresas!=null)
                    {
                            @foreach (var empresa in ViewBag.Empresas)
                            {

                                if (empresa.Id == proyecto.IDEMPRESA)
                                {
                                    <option value="@empresa.Id" selected>@empresa.TipoEmpresa</option>
                                }
                                else
                                {
                                    <option value="@empresa.Id">@empresa.TipoEmpresa</option>
                                }
                            }
                            
                    }
                      
                </select>
            </div>
            <div class="form-group">
                <label for="monto">Monto</label>
                    <input type="text" id="monto" name="monto" min="0" value="@String.Format("{0:N2}", @proyecto.MONTO) " required>
            </div>

        </div>

        <div class="form-row">
            <div class="form-group-radio">
                <label>¿Afecta el IVA?</label>
                    <label>
                        <input type="radio" name="afectaiva" value="si"
                               required onchange="generarFilas()"
                        @(proyecto.AfectaIva == "si" ? "checked" : "")>
                        Sí
                    </label>
                    <label>
                        <input type="radio" name="afectaiva" value="no"
                               required onchange="generarFilas()"
                        @(proyecto.AfectaIva == "no" ? "checked" : "")>
                        No
                    </label>
            </div>
        </div>

        <div class="form-row">
            <div class="form-group">
                <label for="tipoMoneda">Tipo de moneda</label>
                <select id="tipoMoneda" name="moneda" required>
                    <option value="" disabled selected>Seleccione el tipo de Moneda</option>
                        @if (proyecto.MONEDA == "CLP")
                        {
                            <option value="CLP" selected>CLP</option>
                        }
                        else
                        {
                            <option value="CLP">CLP</option>
                        }

                        @if (proyecto.MONEDA == "US")
                        {
                            <option value="US" selected>US</option>
                        }
                        else
                        {
                            <option value="US">US</option>
                        }

                        @if (proyecto.MONEDA == "EURO")
                        {
                            <option value="EURO" selected>EURO</option>
                        }
                        else
                        {
                            <option value="MONEDA">EURO</option>
                        }

                        @if (proyecto.MONEDA == "UF")
                        {
                            <option value="UF" selected>UF</option>
                        }
                        else
                        {
                            <option value="UF">UF</option>
                        }
                </select>
            </div>
            <div class="form-group">
                <label for="plazo">Plazo en meses</label>
                    <input type="number" id="plazo" name="plazo" placeholder="Valor de Plazo" value="@proyecto.Plazo" required>
            </div>
            <div class="form-group">
                <label for="fechaInicio">Fecha de inicio</label>
                    <input type="date" id="fechaInicio" name="fechainicio" value="@proyecto.Fecha_Inicio.ToString("yyyy-MM-dd")" required>
            </div>
            <div class="form-group">
                <label for="fechaFin">Fecha fin</label>
                    <input type="date" id="fechaFin" readonly name="fechatermino" value="@proyecto.Fecha_Termino.ToString("yyyy-MM-dd")">
            </div>
            <div class="form-group">

                <input type="hidden" id="idcuentafactura" name="idcuentafactura" readonly>
                <input type="hidden" id="idsegmentofactura" name="idsegmentofactura" readonly />
                <input type="hidden" id="cuentafactura" name="cuenta" readonly>
                <input type="hidden" id="nombresegmentofactura" name="nombresegmentofactura" readonly>
                    <input type="hidden" id="codigo" /> codigoccosto
                <input type="hidden" class="nombresegmentoservicio" />
                <input type="hidden" class="idcuentaservicio" name="idcuentaservicio" />
                <input type="hidden" class="cuentaservicio" />
                <input type="hidden" class="ccostoservicio" />
                <input type="hidden" class="nombresegmentoconsultor" />
                <input type="hidden" class="idcuentaconsultor" name="idcuentaconsultor" />
                <input type="hidden" class="cuentaconsultor" />
                <input type="hidden" class="nombresegmentohonorario" />
                <input type="hidden" class="idsegmentoservicio" id="idsegmentoservicio" />
            </div>
        </div>
        <div class="form-group">
            <p class="form-subtitle">Facturas</p>
            <table id="tablafactura" style="width: 100%; border-collapse: collapse; text-align: left;">
                <thead>
                    <tr style="background-color: #d9e2f3; color: black;">
                        <th style="padding: 10px; border: 1px solid #ddd;">IDCuenta</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Cuenta Contable</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Segmento</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Mes</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Neto</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Iva</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Total</th>
                    </tr>
                </thead>
                <tbody id="tabla-body">
                </tbody>
            </table>
        </div>

        <div class="form-group">
            <p class="form-subtitle" style="color:black">Stock de Horas Anuales Disponibles de cada Socio y Staff durante la duración del proyecto</p>
            <div style="display: flex; justify-content: space-between;">


                <table style="width: 40%; border-collapse: collapse; text-align: left;">
                    <thead>
                        <tr style="background-color: #b2e6a5; color: black;">
                            <th style="padding: 10px; border: 1px solid #ddd;">Staff</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Nombre</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">HH/Anuales Disponibles</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Hrs. a Proyectos</th>

                            <th style="padding: 10px; border: 1px solid #ddd;">Costo Unitario</th>
                        </tr>
                    </thead>
                    <tbody>
                            @if (ViewBag.Recursos != null)
                            {
                                @foreach (var recurso in ViewBag.Recursos)
                                {
                                    if (recurso.NOMBRE_RECURSO_CORRELATIVO.StartsWith("Socio"))
                                    {
                                        <tr>
                                            <td style="padding: 10px; border: 1px solid #ddd;">@recurso.NOMBRE_RECURSO_CORRELATIVO</td>
                                            <td style="padding: 10px; border: 1px solid #ddd;">@recurso.Nombre</td>
                                            <td style="padding: 10px; border: 1px solid #ddd;" class="hh-anuales" data-id="@recurso.Id" data-tipo="Socio">@recurso.HH_ANUALES</td>
                                            <td style="padding: 10px; border: 1px solid #ddd;">@recurso.PROCENTAJE_PROYECTO %</td>
                                            <td style="padding: 10px; border: 1px solid #ddd;" data-costo-unitario="@recurso.Costo_Unitario">$ @recurso.Costo_Unitario</td>
                                        </tr>

                                    }
                                }
                            }
                           
                    </tbody>
                </table>
                <!-- Tabla de Staff -->
                <table style="width: 40%; border-collapse: collapse; text-align: left;">
                    <thead>
                        <tr style="background-color: #b2e6a5; color: black;">
                            <th style="padding: 10px; border: 1px solid #ddd;">Staff</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Nombre</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">HH/Anuales Disponibles</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Hrs. a Proyectos</th>

                            <th style="padding: 10px; border: 1px solid #ddd;">Costo Unitario</th>
                        </tr>
                    </thead>
                    <tbody>
                            @if (ViewBag.Recursos != null)
                            {
                                @foreach (var recurso in ViewBag.Recursos)
                                {
                                    if (recurso.NOMBRE_RECURSO_CORRELATIVO.StartsWith("Staff"))
                                    {
                                        <tr>
                                            <td style="padding: 10px; border: 1px solid #ddd;">@recurso.NOMBRE_RECURSO_CORRELATIVO</td>
                                            <td style="padding: 10px; border: 1px solid #ddd;">@recurso.Nombre</td>
                                            <td style="padding: 10px; border: 1px solid #ddd;" class="hh-anuales" data-id="@recurso.Id" data-tipo="Socio">@recurso.HH_ANUALES</td>
                                            <td style="padding: 10px; border: 1px solid #ddd;">@recurso.PROCENTAJE_PROYECTO %</td>
                                            <td style="padding: 10px; border: 1px solid #ddd;" data-costo-staff="@recurso.Costo_Unitario">$ @recurso.Costo_Unitario</td>
                                        </tr>

                                    }
                                }
                            }
                          

                    </tbody>
                </table>
                <div style="display:none;">
                        @if (ViewBag.Recursos!=null)
                        {
                            @foreach (var recurso in ViewBag.Recursos)
                            {
                                if (recurso.NOMBRE_RECURSO_CORRELATIVO.StartsWith("Consultor"))
                                {
                                    if (recurso.NOMBRE_RECURSO_CORRELATIVO == "Consultor A")
                                    {
                                        <input type="hidden" id="idconsultora" value="@recurso.Costo_Unitario" />
                                    }
                                    if (recurso.NOMBRE_RECURSO_CORRELATIVO == "Consultor B")
                                    {
                                        <input type="hidden" id="idconsultorb" value="@recurso.Costo_Unitario" />
                                    }
                                    if (recurso.NOMBRE_RECURSO_CORRELATIVO == "Consultor C")
                                    {
                                        <input type="hidden" id="idconsultorc" value="@recurso.Costo_Unitario" />
                                    }

                                }
                            }
                        }
                     
                </div>
            </div>
        </div>
        <div style="display:none">
                @if (ViewBag.Recursos != null)
                {
                    @foreach (var recurso in ViewBag.Recursos)
                    {
                        if (recurso.NOMBRE_RECURSO_CORRELATIVO.StartsWith("Consultor"))
                        {
                            <input type="hidden" id="idconsultor" value="@recurso.ID_RECURSO" />
                            break;

                        }
                    }
                }
             
        </div>

        <div class="form-group">
            <p class="form-subtitle" style="color:black">Digite las Horas del Proyecto</p>
            <table style="width: 100%; border-collapse: collapse; text-align: left;">
                <thead>
                    <tr style="background-color: #b2e6a5; color: black;">
                        <th style="padding: 10px; border: 1px solid #ddd;">Tipología</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Hrs/Proyecto Socio</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Hrs/Proyecto Staff</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Hrs/Proyecto Consultor A</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Hrs/Proyecto Consultor B</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Hrs/Proyecto Consultor C</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td id="tipologiaText" style="padding: 10px; border: 1px solid #ddd;"></td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                                <input type="number" class="horas-socios" id="horasSocios" name="hhsocios" placeholder="Horas Socios" value="@proyecto.HHSOCIOS" required>
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                                <input type="number" class="horas-staff" id="horasStaff" name="hhstaff" placeholder="Horas Staff" value="@proyecto.HHSTAFF" required>
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                                <input type="number" id="consultorA" name="hhconsultora" placeholder="Horas A" value="@proyecto.HH_CONSULTOR_A" required>
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                                <input type="number" id="consultorB" name="hhconsultorb" placeholder="Horas B" value="@proyecto.HH_CONSULTOR_B" required>
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                                <input type="number" id="consultorC" name="hhconsultorc" placeholder="Horas C" value="@proyecto.HH_CONSULTOR_C" required>
                        </td>
                        
                    </tr>
                </tbody>
            </table>
        </div>

          

            <div  style="display:none;" id="tablaintegrantes" class="form-group">
                <p class="form-subtitle">Digite las HH/Proyectos para cada Integrante</p>
                <table style="width: 100%; border-collapse: collapse; text-align: left;">
                    <thead>
                        <tr>
                            @foreach (var recurso in ViewBag.Recursos)
                            {
                                <th style="background-color: #b2e6a5; color: black;">
                                    <input type="hidden" name="nombres[]" value="@recurso.Id" />

                                    <input type="text" value="@recurso.NOMBRE_RECURSO_CORRELATIVO" readonly />
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            @foreach (var recurso in ViewBag.Recursos)
                            {

                                <td style="padding: 10px; border: 1px solid #ddd;">
                                    <input type="number" class="horasInput" name="horas[]" min="0" placeholder="Horas" 
                                  data-tipo="@recurso.NOMBRE_RECURSO_CORRELATIVO" data-id="@recurso.Id"  data-costo="@recurso.Costo_Unitario" />
                                </td>
                            }
                        </tr>
                    </tbody>
                </table>
            </div>

            <div id="tablaresumen" style="display:none;" class="form-group">
                <p class="form-subtitle">Resumen HH/Proyectos</p>
                <table style="width: 100%; border-collapse: collapse; text-align: left;">
                    <thead>

                        <tr>
                            <th>Total Horas Socios</th>
                            <th>Total Horas Staff</th>
                            <th>Total Horas Consultor A</th>
                            <th>Total Horas Consultor B</th>
                            <th>Total Horas Consultor C</th>
                        </tr>
                    </thead>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <span id="totalSocios">0</span>
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <span id="totalStaff">0</span>
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <span id="totalConsultorA">0</span>
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <span id="totalConsultorB">0</span>
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <span id="totalConsultorC">0</span>
                        </td>
                    </tr>
                    
                
                </table>
            </div>

           

        @*COSTOS DIRECTOS*@

        <div class="form-group">
            <p class="form-subtitle" style="color:black">Costos Directos</p>
            <div style="display: flex; justify-content: space-between;">


                <table style="width: 100%; border-collapse: collapse; text-align: left;">
                    <thead>
                        <tr style="background-color: #b2e6a5; color: black;">
                            <th style="padding: 10px; border: 1px solid #ddd;">Costo</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">IDCuenta</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Cuenta Contable</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Segmento</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd;"><strong>Horas Socios</strong></td>
                                <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="idcuentasocio" name="idcuentasocio"  readonly /></td>
                                <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="cuentasocio"  readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                    <input type="text" class="nombresegmentosocio"  readonly />
                               

                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"> <span id="totalsocio" style="font-weight: bold;"></span></td>
                            <input type="hidden" class="idsegmentosocio" name="idsegmentosocio" />
                        </tr>
                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd;"><strong>Cons.Internos</strong></td>
                                <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="idcuentaconsultor" name="idcuentastaff"  readonly /></td>
                                <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="cuentaconsultor"  readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                    <input type="text" class="nombresegmentoconsultor"  readonly />
                               
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"> <span id="totalstaff" style="font-weight: bold;"></span></td>
                            <input type="hidden" class="idsegmentoconsultor" name="idsegmentostaff" />
                        </tr>
                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd;"><strong>Consultor A</strong></td>
                                <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="idcuentahonorarioA" name="idcuentaconsultora" readonly /></td>
                                <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="cuentahonorarioA" readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                    <input type="text" class="nombresegmentohonorarioA"  readonly />
                              

                            </td>

                            <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"> <span id="totalconsultorA" style="font-weight: bold;"></span></td>
                            <input type="hidden" class="idsegmentohonorarioA" name="idsegmentoconsultora" />
                        </tr>
                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd;"><strong>Consultor B</strong></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="idcuentahonorarioB" name="idcuentaconsultorb" readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="cuentahonorarioB" readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                <input type="text" class="nombresegmentohonorarioB" readonly />
                                
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"> <span id="totalconsultorB" style="font-weight: bold;"></span></td>
                            <input type="hidden" class="idsegmentohonorarioB" name="idsegmentoconsultorb" />
                        </tr>
                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd;"><strong>Consultor C</strong></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="idcuentahonorarioC" name="idcuentaconsultorc" readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="cuentahonorarioC" readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                <input type="text" class="nombresegmentohonorarioC" readonly />
                               
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"> <span id="totalconsultorC" style="font-weight: bold;"></span></td>
                            <input type="hidden" class="idsegmentohonorarioC" name="idsegmentoconsultorc" />
                        </tr>
                        <tr>
                            <td colspan="4" style="padding: 10px; border: 1px solid #ddd; background-color:#b2e6a5;"><strong>Total</strong></td>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:right;background-color:#b2e6a5;"> <span id="totalcostosdirectos" style="font-weight: bold;"></span></td>

                        </tr>
                    </tbody>
                </table>


            </div>
        </div>

       
        <div class="form-group">
            <p class="form-subtitle" style="color:black;">Subcontratación de Servicios</p>
            <table style="width: 100%; border-collapse: collapse; text-align: left;" id="tablaservicios">
                <thead>
                    <tr>
                        <th style="padding: 10px; border: 1px solid #ddd;">Tipo Servicio</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Monto</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Centro de Costos</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Segmento</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">ID Cuenta</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Cuenta</th>

                    </tr>
                </thead>
                <tbody>
                        @if (ViewBag.ServiciosProyectos != null)
                        {
                            @foreach (var sp in ViewBag.ServiciosProyectos)
                            {
                                <tr>



                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <select class="servicios" name="idservicio" onchange="checkRequired(this)">
                                            <option value="" disabled selected>Seleccione un Servicio</option>
                                            @if (ViewBag.Servicios != null)
                                            {
                                                @foreach (var servicio in ViewBag.Servicios)
                                                {
                                                    if (servicio.Id == sp.IDSERVICIO)
                                                    {
                                                        <option value="@servicio.Id" selected>@servicio.Nombre</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@servicio.Id">@servicio.Nombre</option>
                                                    }
                                                }
                                            }
                                           

                                        </select>
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;"><input name="montoservicio" class="montoservicio" value="@String.Format("{0:N2}", sp.MONTO)" type="text"></td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input type="text" id="ccostoservicio" class="ccostoservicio" name="ccostoservicio" readonly />
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input type="text" id="nombresegmentoservicio" class="nombresegmentoservicio" name="nombresegmentoservicio" readonly />

                                    </td>

                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input type="text" id="idcuentaservicio" class="idcuentaservicio" name="idcuentaservicio" readonly />
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input type="text" id="cuentaservicio" class="cuentaservicio" name="cuentaservicio" readonly />
                                    </td>
                                    <td style="display:none;">
                                        <input type="text" class="idsegmentoservicio" name="idsegmentoservicio" />
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <button type="button" class="limpiar-btn" style="background-color:red;color:white;" onclick="limpiarFila(this)">Limpiar</button>
                                    </td>
                                </tr>
                            }
                        }
                      
                            <tr>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                    <select class="serviciosSelect" name="idservicio" onchange="checkRequired(this)">
                                            <option value="" disabled selected>Seleccione un Servicio</option>
                                          
                                           

                                        </select>
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;"><input name="montoservicio" class="montoservicio"  type="text"></td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input type="text" id="ccostoservicio" class="ccostoservicio" name="ccostoservicio" readonly />
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input type="text" id="nombresegmentoservicio" class="nombresegmentoservicio" name="nombresegmentoservicio" readonly />

                                    </td>

                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input type="text" id="idcuentaservicio" class="idcuentaservicio" name="idcuentaservicio" readonly />
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input type="text" id="cuentaservicio" class="cuentaservicio" name="cuentaservicio" readonly />
                                    </td>
                                    <td style="display:none;">
                                        <input type="text" class="idsegmentoservicio" name="idsegmentoservicio" />
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                <button type="button" class="limpiar-btn"  onclick="limpiarFila(this)">Limpiar</button>
                                    </td>
                            </tr>
                        



                </tbody>
            </table>
            <div id="totalMonto" style="margin-top: 10px; font-weight: bold;">Total: $<span id="montoTotal">0</span></div>
            <button  id="agregarFila" class="submit-btn" style="margin-top: 10px;">Agregar Otra Subcontratación de Servicio</button>
        </div>
        <div class="form-group">
            <p class="form-subtitle" style="color:black;">Gastos Operacionales</p>
            <table style="width: 100%; border-collapse: collapse; text-align: left;" id="tablagastos">
                <thead>
                    <tr>
                        <th style="padding: 10px; border: 1px solid #ddd;">Tipo Servicio</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Monto</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Centro de Costos</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Segmento</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">ID Cuenta</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Cuenta</th>


                    </tr>
                </thead>
                    <tbody>
                        @if (ViewBag.GastosProyectos != null)
                        {
                            @foreach (var gp in ViewBag.GastosProyectos)
                            {
                                <tr>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <select class="gastos" name="idgastos[]">
                                            <option value="" disabled selected>Seleccione un Gasto</option>
                                            @if (ViewBag.Gastos != null)
                                            {
                                                @foreach (var gasto in ViewBag.Gastos)
                                                {
                                                    if (gasto.Id == gp.IDGASTOS)
                                                    {
                                                        <option value="@gasto.Id" selected>@gasto.Nombre</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@gasto.Id">@gasto.Nombre</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input name="montogasto" class="montogasto" value="@String.Format("{0:N2}", gp.MONTO)" type="text">
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input type="text" id="ccostogasto" class="ccostogasto" name="costogastos" readonly />
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input type="text" class="segmentogastos" name="segmentogastos" value="@gp.NOMBRSEGMENTO" readonly />
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input class="idcuentagastos" name="idcuentagasto" value="@gp.IDCUENTA" readonly />
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <input class="cuentagastos" name="cuentagastos" value="@gp.CUENTA" readonly />
                                    </td>
                                    <td style="display:none">
                                        <input type="text" class="idsegmentogasto" name="idsegmentogasto" value="@gp.IDSEGMENTO" />
                                    </td>
                                    <td style="padding: 10px; border: 1px solid #ddd;">
                                        <button type="button" class="limpiar-btn" onclick="limpiarFila(this)">Limpiar</button>
                                    </td>

                                </tr>
                            }
                        }

                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                <select class="gastosSelect" name="idgastos[]">
                                    <option value="" disabled selected>Seleccione un Gasto</option>
                                </select>
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                <input name="montogasto" class="montogasto" type="text">
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                <input type="text" id="ccostogasto" class="ccostogasto" name="costogastos" readonly />
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                <input type="text" class="segmentogastos" name="segmentogastos" readonly />
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                <input class="idcuentagastos" name="idcuentagasto" readonly />
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                <input class="cuentagastos" name="cuentagastos" readonly />
                            </td>
                            <td style="display:none">
                                <input type="text" class="idsegmentogasto" name="idsegmentogasto" />
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;">
                                <button type="button" class="limpiar-btn" onclick="limpiarFila(this)">Limpiar</button>
                            </td>
                        </tr>
                    </tbody>
            </table>
            <div id="totalMontoGastos" style="margin-top: 10px; font-weight: bold;">Total: $<span id="montoTotalGastos">0</span></div>
            <button id="agregarFilaGastos" class="submit-btn" style="margin-top: 10px;">Agregar Otro Gasto Operacional</button>
        </div>
        <div class="form-group">
            <p class="form-subtitle" style="color:black;">Síntesis Económica del Proyecto</p>
            <table style="width: 80%; border-collapse: collapse; margin: 0 auto;">
                <thead>
                    <tr style="background-color: #fa8164; color: black; text-align:center">
                        <th style="padding: 10px; border: 1px solid #ddd;">Nombre</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Total</th>



                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd; text-align:left;"><strong>Ingresos</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><strong><span id="ingresosvalor"></span></strong></td>

                    </tr>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:left;"><strong>Horas Socios</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="horassociosmargen"></span></td>

                    </tr>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:left;"><strong>Horas Staff</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="horasstaffmargen"></span></td>

                    </tr>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:left;"><strong>Horas Cons.Externos</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="horasconsultoresmargen"></span></td>

                    </tr>

                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:left;"><strong>Serv. Contratados</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="serviciosmargen"></span></td>

                    </tr>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:left;"><strong>Gastos Operacionales</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="gastosmargen"></span></td>

                    </tr>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #fa8164;text-align:left;"><strong>Total Egresos</strong></td>
                        <td style="padding: 10px; border: 1px solid #fa8164;text-align:right;">
                            <strong><span id="egresosmargen"></span></strong>
                        </td>

                    </tr>
                    <tr style="background-color: #fa8164; color: black;">
                        <td style="padding: 10px; border: 1px solid #fa8164;text-align:left;"><strong>Margen Esperado</strong></td>
                        <td style="padding: 10px; border: 1px solid #fa8164;text-align:right;"><strong><span id="margenfinal"></span></strong></td>

                    </tr>
                </tbody>
            </table>

        </div>
        <div class="button-container">
            <button type="submit" class="submit-btn">Guardar Cambios</button>
            
        </div>

    </form>
    }
</div>

        <script>
    $(document).ready(function () {
        $('#cliente').on('change', function () {
            var clienteId = $(this).val();

            if (clienteId) {
                $.ajax({
                    url: '/Cliente/ObtenerSucursales',
                    type: 'GET',
                    data: { idcliente: clienteId },
                    success: function (data) {
                        console.log(data);
                        var $sucursalSelect = $('#sucursal');
                        $sucursalSelect.empty();
                        $sucursalSelect.append('<option value="" disabled selected>Seleccione un departamento</option>');
                        $.each(data, function (index, sucursal) {
                            $sucursalSelect.append('<option value="' + sucursal.id + '">' + sucursal.nombre + '</option>');
                        });
                    },
                    error: function () {
                        alert('Error al obtener las sucursales');
                    }
                });
            }
        });

    });


    /*MUESTRA O OCULTA PARAMETROS DE ESTADO EN NEGOCIACIÓN y EJECUCIÓN*/
    function toggleFields() {
        var estadoSeleccionado = document.getElementById("estadoProyecto").value;

  
        if (estadoSeleccionado === "1") {
            document.getElementById("probabilidadDiv").style.display = "block";
            document.getElementById("nivelProbabilidadDiv").style.display = "block";
            document.getElementById("fechaPlazoDiv").style.display = "block";
        } else {
            document.getElementById("probabilidadDiv").style.display = "none";
            document.getElementById("nivelProbabilidadDiv").style.display = "none";
            document.getElementById("fechaPlazoDiv").style.display = "none";
        }
        if (estadoSeleccionado === "2"){
            tablaresumen
            document.getElementById("tablaintegrantes").style.display = "block";
            document.getElementById("tablaresumen").style.display = "block";
        }
        else{
            document.getElementById("tablaintegrantes").style.display = "none";
            document.getElementById("tablaresumen").style.display = "none";
        }
    }


    document.addEventListener("DOMContentLoaded", function () {
        toggleFields();
        generarFilas();
        obteneridcuenta();
        actualizarTipologia();
        obtenerValoresServicio();
        obtenerValoresConsultores();
        obtenerHonorarios();
        obtenerCodigo();
        updateTotal();
        updateTotalGasto();
        obtenerMargenEsperado();
    });

    /*TRAE EL CODIGO DEL PROYECTO DE CENTRO DE COSTO*/
    $(document).ready(function () {
        $("#unidadNegocio, #centroCosto").change(function () {
            obtenerCodigo();
            obteneridcuenta();
            obtenerValoresServicio();
            obtenerValoresConsultores();
            obtenerHonorarios();

        });
    });

    function obtenerCodigo() {

        var idUnidadNegocio = $("#unidadNegocio").val();
        var idCentroCosto = $("#centroCosto").val();

        if (idUnidadNegocio && idCentroCosto) {
            $.ajax({
                url: '/Proyecto/Getcodigoccosto',
                type: 'GET',
                data: {
                    idcosto: idCentroCosto,
                    idunegocio: idUnidadNegocio
                },
                success: function (data) {
                    if (data && data.length > 0) {
                        $(".codigoccosto").val(data[0].codigo);
                        $(".ccostoservicio").val(data[0].codigo);
                        $(".ccostogasto").val(data[0].codigo);

                    } else {
                        $("#codigoccosto").val('');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error en la solicitud AJAX:", error);
                    $("#codigoccosto").val('');
                }
            });
        } else {
            $("#codigoccosto").val('');
        }
    }

    /*CALCULA LA FECHA DE TERMINO DEL PROYECTO*/
    $(document).ready(function () {
        $('#fechaInicio, #plazo').on('input', function () {
            var fechaInicio = $('#fechaInicio').val();
            var plazo = $('#plazo').val();

            if (fechaInicio && plazo) {
                var nuevaFecha = moment(fechaInicio).add(plazo, 'months').format('YYYY-MM-DD');
                $('#fechaFin').val(nuevaFecha);
                $('#fechaFin').prop('disabled', false); // Habilita el campo para que se envíe
            } else {
                $('#fechaFin').val('');
            }
        });
    });

    /*TABLA FACTURAS*/
    document.getElementById("plazo").addEventListener("input", generarFilas);
    document.getElementById("fechaInicio").addEventListener("input", generarFilas);
    document.getElementById("monto").addEventListener("input", generarFilas);

    function generarFilas() {
        var plazo = document.getElementById("plazo").value;
        var fechaInicio = document.getElementById("fechaInicio").value;
        var monto = parseFloat(document.getElementById("monto").value.replace(/\./g, '')) || 0;
        var afectaIVA = document.querySelector('input[name="afectaiva"]:checked')?.value;
        var idcuenta = document.getElementById("idcuentafactura").value;
        var cuentacontable = document.getElementById("cuentafactura").value;
        var nombresegmento = document.getElementById("nombresegmentofactura").value;
        var tablaBody = document.getElementById("tabla-body");

        tablaBody.innerHTML = "";

        var totalMonto = 0;
        var totalIVA = 0;
        var totalFinal = 0;

        if (plazo > 0 && fechaInicio) {
            var fecha = new Date(fechaInicio);
            fecha.setMonth(fecha.getMonth() + 1);
            var montoPorMes = monto / plazo;

            for (var i = 1; i <= plazo; i++) {
                var fila = document.createElement("tr");

                var mes = ("0" + (fecha.getMonth() + 1)).slice(-2);
                var año = fecha.getFullYear();
                var mesAño = mes + '/' + año;

                var iva = (afectaIVA === "si") ? montoPorMes * 0.19 : 0;
                var total = montoPorMes + iva;


                totalMonto += montoPorMes;
                totalIVA += iva;
                totalFinal += total;

                fila.innerHTML = `
                            <td style="padding: 10px; border: 1px solid #ddd;">${idcuenta}</td>
                            <td style="padding: 10px; border: 1px solid #ddd;">${cuentacontable}</td>
                            <td style="padding: 10px; border: 1px solid #ddd;">${nombresegmento}</td>
                            <td style="padding: 10px; border: 1px solid #ddd;">${mesAño}</td>
                                <td style="padding: 10px; border: 1px solid #ddd; text-align: right;">
                <input type="text" value="${montoPorMes.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}" readonly style="width: 150px; text-align: right; font-size: 16px; padding: 5px;">
            </td>
            <td style="padding: 10px; border: 1px solid #ddd; text-align: right;">
                <input type="text" value="${iva.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}" readonly style="width: 150px; text-align: right; font-size: 16px; padding: 5px;">
            </td>
            <td style="padding: 10px; border: 1px solid #ddd; text-align: right;">
                <input type="text" value="${total.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}" readonly style="width: 150px; text-align: right; font-size: 16px; padding: 5px;">
            </td>
                        `;

                tablaBody.appendChild(fila);

                fecha.setMonth(fecha.getMonth() + 1);
            }


            var filaTotales = document.createElement("tr");
            filaTotales.innerHTML = `
                        <td colspan="4" style="padding: 10px; border: 1px solid #ddd; font-weight: bold;">Totales</td>
                                   <td style="padding: 10px; border: 1px solid #ddd; font-weight: bold; text-align: right;">
                    <input id="netofactura" type="text" value="${totalMonto.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}" readonly style="width: 150px; text-align: right; font-size: 16px;">
                </td>
                <td style="padding: 10px; border: 1px solid #ddd; font-weight: bold; text-align: right;">
                    <input type="text" value="${totalIVA.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}" readonly style="width: 150px; text-align: right; font-size: 16px;">
                </td>
                <td style="padding: 10px; border: 1px solid #ddd; font-weight: bold; text-align: right;">
                    <input type="text" value="${totalFinal.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}" readonly style="width: 150px; text-align: right; font-size: 16px;">
                </td>
                    `;


            tablaBody.appendChild(filaTotales);
            obtenerMargenEsperado();
        }

    }

    function obteneridcuenta() {
        var idUnidadNegocio = $("#unidadNegocio").val();
        var idCentroCosto = $("#centroCosto").val();

        if (idUnidadNegocio && idCentroCosto) {
            $.ajax({
                url: '/Proyecto/GetValoresFactura',
                type: 'GET',
                data: {
                    idcosto: idCentroCosto,
                    idunegocio: idUnidadNegocio
                },
                success: function (data) {
                    if (data && data.length > 0) {
                        $("#idcuentafactura").val(data[0].idcuenta);
                        $("#cuentafactura").val(data[0].cuenta);
                        $("#nombresegmentofactura").val(data[0].nombre);
                        $("#idsegmentofactura").val(data[0].idsegmento);
                        generarFilas();
                    } else {
                        $("#idcuentafactura").val('');
                        $("#nombresegmentofactura").val('');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error en la solicitud AJAX:", error);
                    $("#idcuentafactura").val('');
                }
            });
        } else {
            $("#idcuentafactura").val('');
        }
    }

    /*OBTENER VALORES CONSULTORES*/


    function obtenerValoresConsultores() {
        var idUnidadNegocio = $("#unidadNegocio").val();
        var idCentroCosto = $("#centroCosto").val();

        if (idUnidadNegocio && idCentroCosto) {
            $.ajax({
                url: '/Proyecto/ObtenerValoresConsultores',
                type: 'GET',
                data: {
                    idcosto: idCentroCosto,
                    idunegocio: idUnidadNegocio
                },
                success: function (response) {
                    if (response && response.length > 0) {
                        // Cuando hay datos
                        $(".idcuentaconsultor").val(response[0].idcuenta);
                        $(".cuentaconsultor").val(response[0].cuenta);
                        $(".idsegmentoconsultor").val(response[0].idsegmento);
                        $(".cuentasocio").val(response[0].cuenta);
                        $(".idsegmentosocio").val(response[0].idsegmento);
                        $(".idcuentasocio").val(response[0].idcuenta);

                        // Ocultar los selects y mostrar los campos readonly
                        $(".nombresegmentoconsultor").val(response[0].nombre);
                        $(".nombresegmentosocio").val(response[0].nombre);


                    } else {
                        // Cuando NO hay datos
                        $(".idcuentaconsultor").val('');
                        $(".cuentaconsultor").val('');
                        $(".idcuentasocio").val('');
                        $(".cuentasocio").val('');


                        // Asegurarse de que los campos readonly estén ocultos
                        $(".nombresegmentoconsultor").val('');
                        $(".nombresegmentosocio").val('');
                        $(".idsegmentoconsultor").val('');
                        $(".idsegmentosocio").val('');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error al obtener el servicio:', error);
                    $(".nombresegmentoservicio").val('');
                }
            });
        }
    }

    /*OBTENER VALORES CONSULTORES EXTERNOS*/

    function obtenerHonorarios() {
        var idUnidadNegocio = $("#unidadNegocio").val();
        var idCentroCosto = $("#centroCosto").val();
        var idConsultor = $("#idconsultor").val();

        if (idUnidadNegocio && idCentroCosto) {
            $.ajax({
                url: '/Proyecto/ObtenerValoresHonorarios',
                type: 'GET',
                data: {
                    idcosto: idCentroCosto,
                    idunegocio: idUnidadNegocio,
                    idrecurso: idConsultor
                },
                success: function (data) {

                    if (data && data.length > 0) {
                        $(".nombresegmentohonorarioA").val(data[0].nombre);
                        $(".idcuentahonorarioA").val(data[0].idcuenta);
                        $(".cuentahonorarioA").val(data[0].cuenta);
                        $(".idsegmentohonorarioA").val(data[0].idsegmento);
                        $(".nombresegmentohonorarioB").val(data[0].nombre);
                        $(".idcuentahonorarioB").val(data[0].idcuenta);
                        $(".cuentahonorarioB").val(data[0].cuenta);
                        $(".idsegmentohonorarioB").val(data[0].idsegmento);
                        $(".nombresegmentohonorarioC").val(data[0].nombre);
                        $(".idcuentahonorarioC").val(data[0].idcuenta);
                        $(".cuentahonorarioC").val(data[0].cuenta);
                        $(".idsegmentohonorarioC").val(data[0].idsegmento);


                    } else {

                        $(".nombresegmentohonorarioA").val('').hide();
                        $(".idcuentahonorarioA").val('');
                        $(".cuentahonorarioA").val('');
                        $(".idsegmentohonorarioA").val('');
                        $(".nombresegmentohonorarioB").val('');
                        $(".idcuentahonorarioB").val('');
                        $(".cuentahonorarioB").val('');
                        $(".idsegmentohonorarioB").val('');
                        $(".nombresegmentohonorarioC").val('').hide();
                        $(".idcuentahonorarioC").val('');
                        $(".cuentahonorarioC").val('');
                        $(".idsegmentohonorarioC").val('');


                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error en la solicitud AJAX:", error);
                }
            });
        }



    }


    /*OBTENERVALORESCUENTA SERVICIOS*/

    function obtenerValoresServicio() {
        var idUnidadNegocio = $("#unidadNegocio").val();
        var idCentroCosto = $("#centroCosto").val();
        if (idUnidadNegocio && idCentroCosto) {
            $.ajax({
                url: '/Proyecto/GetValoresServicios',
                type: 'GET',
                data: {
                    idcosto: idCentroCosto,
                    idunegocio: idUnidadNegocio
                },
                success: function (response) {
                    if (response && response.length > 0) {

                        $(".nombresegmentoservicio").val(response[0].nombre);
                        $(".idcuentaservicio").val(response[0].idcuenta);
                        $(".cuentaservicio").val(response[0].cuenta);
                        $(".idsegmentoservicio").val(response[0].idsegmento);

                    } else {

                        $(".nombresegmentoservicio").val('');
                        $(".idcuentaservicio").val('');
                        $(".cuentaservicio").val('');

                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error al obtener el servicio:', error);
                    $(".nombresegmentoservicio").val('').hide();

                }
            });
        }
    }


    /*FILAS DINAMICAS TABLA SERVICIOS*/
    const totalMontoElement = document.getElementById('montoTotal');

    $(document).ready(function () {

        document.getElementById('agregarFila').addEventListener('click', function (e) {
            e.preventDefault();
            const newRow = document.createElement('tr');

            const costoservicioValue = document.querySelector('#ccostoservicio') ? document.getElementById('ccostoservicio').value : '';
            const nombreservicioValue = document.querySelector('#nombresegmentoservicio') ? document.getElementById('nombresegmentoservicio').value : '';
            const idcuentaservicioValue = document.querySelector('#idcuentaservicio') ? document.getElementById('idcuentaservicio').value : '';
            const cuentaservicioValue = document.querySelector('#cuentaservicio') ? document.getElementById('cuentaservicio').value : '';
            const idsegmentoservicioValue = document.querySelector('.idsegmentoservicio') ? document.querySelector('.idsegmentoservicio').value : '';

            newRow.innerHTML = `
                <td style="padding: 10px; border: 1px solid #ddd;">
                    <select class="serviciosSelect" name="idservicio" onchange="checkRequired(this)">
                        <option value="" disabled selected>Seleccione un Servicio</option>
                    </select>
                </td>
                <td style="padding: 10px; border: 1px solid #ddd;">
                    <input class="montoservicio" name="montoservicio" type="text">
                </td>
                <td style="padding: 10px; border: 1px solid #ddd;">
                    <input class="ccostoservicio" name="ccostoservicio" value="${costoservicioValue}" readonly />
                </td>
                <td style="padding: 10px; border: 1px solid #ddd;">
                    <input class="nombresegmentoservicio" name="nombresegmentoservicio" readonly/>
                    
                </td>
                <td style="padding: 10px; border: 1px solid #ddd;">
                    <input class="idcuentaservicio" name="idcuentaservicio" readonly/>
                </td>
                <td style="padding: 10px; border: 1px solid #ddd;">
                    <input class="cuentaservicio" name="cuentaservicio"  readonly />
                </td>
                <td style="display:none;">
                    <input class="idsegmentoservicio" name="idsegmentoservicio"  />
                </td>
                <td style="padding: 10px; border: 1px solid #ddd;">
                    <button class="eliminar-btn" style="color:white;background-color:red">Eliminar</button>
                </td>
            `;

            document.querySelector('#tablaservicios tbody').appendChild(newRow);

            // Cargar servicios y segmentos si es necesario
            cargarServicios(newRow.querySelector('.serviciosSelect'));
            obtenerValoresServicio();

            newRow.querySelector('.eliminar-btn').addEventListener('click', function () {
                newRow.remove();
                updateTotal();
                obtenerMargenEsperado();
            });

            updateTotal();
            obtenerMargenEsperado();
        });


        document.addEventListener('input', function (e) {
            if (e.target.classList.contains('montoservicio')) {
                updateTotal();
                obtenerMargenEsperado();
            }
        });
    });

    function updateTotal() {
        let total = 0;
        const montoInputs = document.querySelectorAll('.montoservicio');
        montoInputs.forEach(input => {
            if (input.value !== '') {
                let value = input.value.replace(/\./g, '').replace(/[^0-9,]/g, '').replace(',', '.');
                value = parseFloat(value); // Convertir el valor a número flotante
                if (!isNaN(value)) {
                    total += value;
                }
            }
        });

        totalMontoElement.innerText = total.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        return total;
    }






    function cargarServicios(selectElement) {
        $.ajax({
            url: '/Proyecto/ObtenerServicios',
            type: 'GET',
            success: function (data) {
                $(selectElement).empty();
                $(selectElement).append('<option value="" disabled selected>Seleccione un gasto</option>');

                $.each(data, function (index, servicio) {
                    $(selectElement).append('<option value="' + servicio.id + '">' + servicio.nombre + '</option>');
                });
            },
            error: function () {
                alert('Ocurrió un error al cargar los servicios.');
            }
        });
    }


    $(document).ready(function () {
        $('.serviciosSelect').each(function () {
            cargarServicios(this);
        });
    });





    /*TIPOLOGIA EN TABLA HORAS*/
    // Función para actualizar la tabla con el valor seleccionado del select
    function actualizarTipologia() {

        var selectTipologia = document.getElementById("tipologia");
        var tipologiaSeleccionada = selectTipologia.options[selectTipologia.selectedIndex].text;


        document.getElementById("tipologiaText").innerText = tipologiaSeleccionada;
    }


    document.getElementById("tipologia").addEventListener("change", actualizarTipologia);



    /*COSTOS TABLAS RECURSOS/COSTOS*/
    document.addEventListener('DOMContentLoaded', function () {

        const costoSocio = parseFloat(document.querySelector('[data-costo-unitario]').getAttribute('data-costo-unitario')) || 0;
        const costoStaff = parseFloat(document.querySelector('[data-costo-staff]').getAttribute('data-costo-staff')) || 0;
        const costoConsultora = parseFloat(document.querySelector('#idconsultora').value) || 0;
        const costoConsultorb = parseFloat(document.querySelector('#idconsultorb').value) || 0;
        const costoConsultorc = parseFloat(document.querySelector('#idconsultorc').value) || 0;

        const inputHorasStaff = document.querySelector('#horasStaff');
        const inputHorasSocios = document.querySelector('#horasSocios');
        const inputHorasConsultora = document.querySelector('#consultorA');
        const inputHorasConsultorb = document.querySelector('#consultorB');
        const inputHorasConsultorc = document.querySelector('#consultorC');

        const totalStaffElement = document.querySelector('#totalstaff');
        const totalConsultorAElement = document.querySelector('#totalconsultorA');
        const totalConsultorBElement = document.querySelector('#totalconsultorB');
        const totalConsultorCElement = document.querySelector('#totalconsultorC');
        const totalSociosElement = document.querySelector('#totalsocio');
        const totalCostosDirectosElement = document.querySelector('#totalcostosdirectos');

        // Función para actualizar el total de costos
        function actualizarTotalCostos() {
            const totalSocio = parseFloat(totalSociosElement.textContent.replace(/\./g, '').replace(',', '.')) || 0;
            const totalStaff = parseFloat(totalStaffElement.textContent.replace(/\./g, '').replace(',', '.')) || 0;
            const totalConsultora = parseFloat(totalConsultorAElement.textContent.replace(/\./g, '').replace(',', '.')) || 0;
            const totalConsultorb = parseFloat(totalConsultorBElement.textContent.replace(/\./g, '').replace(',', '.')) || 0;
            const totalConsultorc = parseFloat(totalConsultorCElement.textContent.replace(/\./g, '').replace(',', '.')) || 0;

            const totalcostos = totalSocio + totalStaff + totalConsultora + totalConsultorb + totalConsultorc;
            totalCostosDirectosElement.textContent = totalcostos.toLocaleString('de-DE', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
        }

        // Función para actualizar las horas y costos
        function actualizarElementoHoras(input, costo, outputElement) {
            const horas = parseFloat(input.value) || 0;
            const total = horas * costo;
            outputElement.textContent = total.toLocaleString('de-DE', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
            actualizarTotalCostos();

            // Event listener para recalcular en tiempo real
            input.addEventListener('input', function () {
                const horas = parseFloat(this.value) || 0;
                const total = horas * costo;
                outputElement.textContent = total.toLocaleString('de-DE', {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2
                });
                actualizarTotalCostos();
            });
        }

        // Inicializar el cálculo al cargar la página
        actualizarElementoHoras(inputHorasSocios, costoSocio, totalSociosElement);
        actualizarElementoHoras(inputHorasStaff, costoStaff, totalStaffElement);
        actualizarElementoHoras(inputHorasConsultora, costoConsultora, totalConsultorAElement);
        actualizarElementoHoras(inputHorasConsultorb, costoConsultorb, totalConsultorBElement);
        actualizarElementoHoras(inputHorasConsultorc, costoConsultorc, totalConsultorCElement);

    });




    /*TABLA GASTOS*/

    document.addEventListener('DOMContentLoaded', function () {
        // Delegar el evento change en la tabla para filas existentes y nuevas
        document.querySelector('#tablagastos tbody').addEventListener('change', function (e) {
            if (e.target.classList.contains('gastosSelect')) {
                const selectGastos = e.target;
                const idUnidadNegocio = $("#unidadNegocio").val();
                const idCentroCosto = $("#centroCosto").val();
                const selectedText = selectGastos.options[selectGastos.selectedIndex].text;
                const newRow = selectGastos.closest('tr'); // Encuentra la fila correspondiente

                // Llamada AJAX al backend para obtener valores del gasto seleccionado
                obtenerValoresGastos(idUnidadNegocio, idCentroCosto, selectedText, newRow);
            }
        });

        document.getElementById('agregarFilaGastos').addEventListener('click', function (e) {
            const idUnidadNegocio = $("#unidadNegocio").val();
            const idCentroCosto = $("#centroCosto").val();
            const costoGastoValue = document.getElementById('ccostogasto').value;
            e.preventDefault();
            const newRow = document.createElement('tr');

            const servicioCell = document.createElement('td');
            const montoCell = document.createElement('td');
            const centroCostoCell = document.createElement('td');
            const segmentoCell = document.createElement('td');
            const idCuentaCell = document.createElement('td');
            const cuentaCell = document.createElement('td');
            const eliminarCell = document.createElement('td');
            const idSegmentoGastoCell = document.createElement('td');

            // Campo oculto para 'idsegmentogasto'
            const idSegmentoGastoInput = document.createElement('input');
            idSegmentoGastoInput.type = 'text';
            idSegmentoGastoInput.className = 'idsegmentogasto';
            idSegmentoGastoInput.name = 'idsegmentogasto';
            idSegmentoGastoInput.style.display = 'none';
            idSegmentoGastoCell.appendChild(idSegmentoGastoInput);

            // Crear select para gastos
            const selectGastos = document.createElement('select');
            selectGastos.className = "gastosSelect";
            selectGastos.name = "idgastos[]";
            selectGastos.innerHTML = '<option value="" disabled selected>Seleccione un Gasto</option>';
            servicioCell.appendChild(selectGastos);

            // Crear input para el monto del gasto
            const montoInput = document.createElement('input');
            montoInput.type = 'text';
            montoInput.className = 'montogasto';
            montoInput.name = "montogasto";
            montoCell.appendChild(montoInput);

  
            montoInput.addEventListener("input", formatInput);


            centroCostoCell.innerHTML = `<input type="text" name="costogastos[]" value="${costoGastoValue}" readonly />`;

            segmentoCell.innerHTML = '<input class="segmentogastos" name="segmentogastos" readonly />';

            idCuentaCell.innerHTML = '<input class="idcuentagastos" name="idcuentagasto" readonly />';

            cuentaCell.innerHTML = '<input class="cuentagastos" name="cuentagastos" readonly>';

            // Botón para eliminar la fila
            const eliminarBtn = document.createElement('button');
            eliminarBtn.textContent = 'Eliminar';
            eliminarBtn.style.color = 'white';
            eliminarBtn.style.backgroundColor = 'red';
            eliminarBtn.className = 'eliminar-btn';

            // Evento para eliminar la fila
            eliminarBtn.addEventListener('click', function () {
                newRow.remove();
                updateTotalGasto();
                obtenerMargenEsperado();
            });

            eliminarCell.appendChild(eliminarBtn);

            // Agregar todas las celdas a la fila
            newRow.appendChild(servicioCell);
            newRow.appendChild(montoCell);
            newRow.appendChild(centroCostoCell);
            newRow.appendChild(segmentoCell);
            newRow.appendChild(idCuentaCell);
            newRow.appendChild(cuentaCell);
            newRow.appendChild(eliminarCell);
            newRow.appendChild(idSegmentoGastoCell);

            // Cargar los datos del select de gastos
            cargarGastos(newRow.querySelector('.gastosSelect'));

            // Agregar la nueva fila a la tabla
            document.querySelector('#tablagastos tbody').appendChild(newRow);
        });
    });

    function obtenerValoresGastos(idUnidadNegocio, idCentroCosto, nombreSegmento, newRow) {
        $.ajax({
            url: '/Proyecto/GetValoresGastosEdicion',
            type: 'GET',
            data: {
                idcosto: idCentroCosto,
                unegocio: idUnidadNegocio,
                nombresegmento: nombreSegmento
            },
            success: function (data) {
                if (data.length > 0) {
                    const gasto = data[0]; 
                  
                    newRow.querySelector('.segmentogastos').value = gasto.nombre;
                    newRow.querySelector('.idcuentagastos').value = gasto.idcuenta;
                    newRow.querySelector('.cuentagastos').value = gasto.cuenta;
                    newRow.querySelector('.idsegmentogasto').value = gasto.idsegmento;
                    
                } else {
                    alert('No se encontraron valores para el gasto seleccionado.');
                }
            },
            error: function () {
                alert('Ocurrió un error al obtener los valores de gastos.');
            }
        });
    }

    function cargarGastos(selectElement) {
        $.ajax({
            url: '/Proyecto/ObtenerGastos',
            type: 'GET',
            success: function (data) {
                $(selectElement).empty();
                $(selectElement).append('<option value="" disabled selected>Seleccione un gasto</option>');


                $.each(data, function (index, gasto) {
                    $(selectElement).append('<option value="' + gasto.id + '">' + gasto.nombre + '</option>');
                });
            },
            error: function () {
                alert('Ocurrió un error al cargar los gastos.');
            }
        });
    }
    $(document).ready(function () {
        $('.gastosSelect').each(function () {
            cargarGastos(this);
        });
    });



    function formatInput(e) {
        var valor = e.target.value;


        valor = valor.replace(/\./g, '').replace(/[^0-9.,]/g, '');


        if (valor !== "") {
            valor = parseFloat(valor.replace(',', '.')).toLocaleString('de-DE', {
                minimumFractionDigits: 0,
                maximumFractionDigits: 0
            });
        }
        e.target.value = valor;
        updateTotalGasto();
        obtenerMargenEsperado();
    }


    document.getElementById("monto").addEventListener("input", formatInput);
    document.querySelectorAll('.montoservicio').forEach(input => {
        input.addEventListener("input", formatInput);
    });
    document.querySelectorAll('.montogasto').forEach(input => {
        input.addEventListener("input", formatInput);
    });


    document.querySelectorAll('.eliminar-btn').forEach(function (button) {
        button.addEventListener('click', function () {
            button.closest('tr').remove();
        });
    });


    function updateTotalGasto() {
        let total = 0;

        const montos = document.querySelectorAll('.montogasto');
        montos.forEach(input => {

            const value = parseFloat(input.value.replace(/\./g, '').replace(',', '.'));
            if (!isNaN(value)) {
                total += value;
            }
        });

        document.getElementById('montoTotalGastos').innerText = total.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        return total;
    }

    function limpiarFila(button) {
   
        var fila = button.closest('tr');


        var inputs = fila.querySelectorAll('input');
        inputs.forEach(function (input) {
            if (!input.readOnly) { 
                input.value = '';
            }
        });

   
        var select = fila.querySelector('select');
        if (select) {
            select.selectedIndex = 0; 
        }
        updateTotalGasto();
        obtenerMargenEsperado();
    }




    /*MARGENES*/
    function calcularMargen(costoSocio, costoStaff, costoConsultora, costoConsultorb, costoConsultorc, horasSocios, horasStaff, horasConsultora, horasConsultorb, horasConsultorc) {
        const totalSocios = horasSocios * costoSocio;
        const totalStaff = horasStaff * costoStaff;
        const totalConsultoresExternos = (horasConsultora * costoConsultora) + (horasConsultorb * costoConsultorb) + (horasConsultorc * costoConsultorc);

        const margenSocios = totalSocios;
        const margenStaff = totalStaff;
        const margenConsultoresExternos = totalConsultoresExternos;

        return {
            margenSocios: margenSocios,
            margenStaff: margenStaff,
            margenConsultoresExternos: margenConsultoresExternos,
        };
    }

    // Función para obtener márgenes esperados a partir de los valores del DOM
    function obtenerMargenEsperado() {
        const costoSocio = parseFloat(document.querySelector('[data-costo-unitario]').getAttribute('data-costo-unitario')) || 0;
        const costoStaff = parseFloat(document.querySelector('[data-costo-staff]').getAttribute('data-costo-staff')) || 0;
        const costoConsultora = parseFloat(document.querySelector('#idconsultora').value) || 0;
        const costoConsultorb = parseFloat(document.querySelector('#idconsultorb').value) || 0;
        const costoConsultorc = parseFloat(document.querySelector('#idconsultorc').value) || 0;

        const horasSocios = parseFloat(document.querySelector('#horasSocios').value) || 0;
        const horasStaff = parseFloat(document.querySelector('#horasStaff').value) || 0;
        const horasConsultora = parseFloat(document.querySelector('#consultorA').value) || 0;
        const horasConsultorb = parseFloat(document.querySelector('#consultorB').value) || 0;
        const horasConsultorc = parseFloat(document.querySelector('#consultorC').value) || 0;
        const totalMonto = updateTotal();
        const totalGastos = updateTotalGasto();
        // Llama a la función de cálculo y obtiene los márgenes
        const margenes = calcularMargen(costoSocio, costoStaff, costoConsultora, costoConsultorb, costoConsultorc, horasSocios, horasStaff, horasConsultora, horasConsultorb, horasConsultorc);
        const netoFacturaElement = document.getElementById('netofactura');
        const ingresos = netoFacturaElement ? parseFloat(netoFacturaElement.value.replace(/\./g, '').replace(',', '.')) || 0 : 0;



        document.getElementById('ingresosvalor').textContent = ingresos.toLocaleString('de-DE', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });


        document.getElementById('horassociosmargen').textContent = margenes.margenSocios.toLocaleString('de-DE', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });

        document.getElementById('horasstaffmargen').textContent = margenes.margenStaff.toLocaleString('de-DE', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });

        document.getElementById('horasconsultoresmargen').textContent = margenes.margenConsultoresExternos.toLocaleString('de-DE', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });
        document.getElementById('serviciosmargen').textContent = totalMonto.toLocaleString('de-DE', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });
        document.getElementById('gastosmargen').textContent = totalGastos.toLocaleString('de-DE', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });
        const totalegresos = parseFloat(document.getElementById('horassociosmargen').textContent.replace(/\./g, '').replace(',', '.')) + parseFloat(document.getElementById('horasstaffmargen').textContent.replace(/\./g, '').replace(',', '.')) + parseFloat(document.getElementById('horasconsultoresmargen').textContent.replace(/\./g, '').replace(',', '.')) + parseFloat(document.getElementById('serviciosmargen').textContent.replace(/\./g, '').replace(',', '.')) + parseFloat(document.getElementById('gastosmargen').textContent.replace(/\./g, '').replace(',', '.'));
        document.getElementById('egresosmargen').textContent = totalegresos.toLocaleString('de-DE', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });
        const totalmargen = parseFloat(document.getElementById('ingresosvalor').textContent.replace(/\./g, '').replace(',', '.')) - parseFloat(document.getElementById('egresosmargen').textContent.replace(/\./g, '').replace(',', '.'))
        document.getElementById('margenfinal').textContent = totalmargen.toLocaleString('de-DE', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
        // Escucha el evento de cambio en cada campo de horas para recalcular el margen esperado
        document.querySelector('#horasSocios').addEventListener('input', obtenerMargenEsperado);
        document.querySelector('#horasStaff').addEventListener('input', obtenerMargenEsperado);
        document.querySelector('#consultorA').addEventListener('input', obtenerMargenEsperado);
        document.querySelector('#consultorB').addEventListener('input', obtenerMargenEsperado);
        document.querySelector('#consultorC').addEventListener('input', obtenerMargenEsperado);

        document.querySelectorAll('.montoservicio').forEach(input => {
            input.addEventListener('input', obtenerMargenEsperado);
        });
        document.querySelectorAll('.montogasto').forEach(input => {
            input.addEventListener("input", formatInput);
        });
        
        obtenerMargenEsperado();
    });

  
      
    let totalSocios = 0;
    let totalStaff = 0;
    let totalConsultorA = 0;
    let totalConsultorB = 0;
    let totalConsultorC = 0;
    let maxSocios = 0;
    let maxStaff = 0;
    let maxConsultorA = 0;
    let maxConsultorB = 0;
    let maxConsultorC = 0;

 
    function calcularHoras() {

        const statusProyecto = document.getElementById('estadoProyecto').value;

        
        if (statusProyecto !== '2') {
            return; 
        }
        totalSocios = 0;
        totalStaff = 0;
        totalConsultorA = 0;
        totalConsultorB = 0;
        totalConsultorC = 0;

       
        const horasInputs = document.querySelectorAll('.horasInput');

        horasInputs.forEach(input => {
            const horas = parseFloat(input.value) || 0;
            const tipo = input.dataset.tipo.trim(); 

           
            if (tipo.includes('Socio')) {
                totalSocios += horas;
            } else if (tipo.includes('Staff')) {
                totalStaff += horas;
            } else if (tipo === 'Consultor A') {
                totalConsultorA += horas;
            } else if (tipo === 'Consultor B') {
                totalConsultorB += horas;
            } else if (tipo === 'Consultor C') {
                totalConsultorC += horas;
            }
        });

      
        maxSocios = parseFloat(document.getElementById('horasSocios').value) || 0;
        maxStaff = parseFloat(document.getElementById('horasStaff').value) || 0;
        maxConsultorA = parseFloat(document.getElementById('consultorA').value) || 0;
        maxConsultorB = parseFloat(document.getElementById('consultorB').value) || 0;
        maxConsultorC = parseFloat(document.getElementById('consultorC').value) || 0;

        
        if (totalSocios > maxSocios) {
            alert(`La suma de horas de Socios (${totalSocios}) excede el máximo permitido (${maxSocios}).`);
            document.querySelectorAll('.horasInput[data-tipo*="Socio"]').forEach(input => {
                input.value = 0;
            });
            totalSocios = 0;
        }

        if (totalStaff > maxStaff) {
            alert(`La suma de horas de Staff (${totalStaff}) excede el máximo permitido (${maxStaff}).`);
            document.querySelectorAll('.horasInput[data-tipo*="Staff"]').forEach(input => {
                input.value = 0;
            });
            totalStaff = 0;
        }

        if (totalConsultorA > maxConsultorA) {
            alert(`La suma de horas de Consultor A (${totalConsultorA}) excede el máximo permitido (${maxConsultorA}).`);
            document.querySelectorAll('.horasInput[data-tipo*="Consultor A"]').forEach(input => {
                input.value = 0;
            });
            totalConsultorA = 0;
        }

        if (totalConsultorB > maxConsultorB) {
            alert(`La suma de horas de Consultor B (${totalConsultorB}) excede el máximo permitido (${maxConsultorB}).`);
            document.querySelectorAll('.horasInput[data-tipo*="Consultor B"]').forEach(input => {
                input.value = 0;
            });
            totalConsultorB = 0;
        }

        if (totalConsultorC > maxConsultorC) {
            alert(`La suma de horas de Consultor C (${totalConsultorC}) excede el máximo permitido (${maxConsultorC}).`);
            document.querySelectorAll('.horasInput[data-tipo*="Consultor C"]').forEach(input => {
                input.value = 0;
            });
            totalConsultorC = 0;
        }

      
        document.getElementById('totalSocios').innerText = totalSocios;
        document.getElementById('totalStaff').innerText = totalStaff;
        document.getElementById('totalConsultorA').innerText = totalConsultorA;
        document.getElementById('totalConsultorB').innerText = totalConsultorB;
        document.getElementById('totalConsultorC').innerText = totalConsultorC;
    }


    function validarFormulario(event) {
        const statusProyecto = document.getElementById('estadoProyecto').value;

        if (statusProyecto !== '2') {
            return; 
        }
        if (totalSocios !== maxSocios || totalStaff !== maxStaff ||
            totalConsultorA !== maxConsultorA || totalConsultorB !== maxConsultorB || totalConsultorC !== maxConsultorC) {

            alert("Los totales las horas no coinciden con los máximos permitidos. Por favor, revisa las horas.");
            event.preventDefault();
        }
    }

    document.querySelectorAll('.horasInput').forEach(input => {
        input.addEventListener('input', calcularHoras);
    });

    
    const formulario = document.querySelector('form'); 
    formulario.addEventListener('submit', validarFormulario);
</script>

            
