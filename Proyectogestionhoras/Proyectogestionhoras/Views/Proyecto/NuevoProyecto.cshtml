@{
    ViewData["Title"] = "Crear Proyecto";
}

<style>
    body {
        font-family: 'Montserrat', sans-serif;
        background-color: #f5f5f5;
    }

    .form-container {
        max-width: 1200px;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-top: 60px;
    }

    .form-title {
        font-size: 1.8rem;
        font-weight: 600;
        color: #333;
        text-align: center;
        margin-bottom: 10px;
    }

    .form-subtitle {
        font-size: 1.2rem;
        color: #666;
        text-align: center;
        margin-bottom: 20px;
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .form-group {
        flex: 1;
        min-width: 220px;
    }

        .form-group label {
            display: block;
            font-size: 1rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 5px;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px;
            font-size: 1rem;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        .form-group select {
            cursor: pointer;
        }

    .form-group-radio {
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .form-group-radio label {
            margin-bottom: 0;
        }

    .button-container {
    text-align: center;
    margin-top: 20px;
}

.submit-btn, .clear-btn {
    padding: 10px 30px;
    font-size: 1rem;
    font-weight: 600;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
    margin-left: 10px; 
}

.submit-btn {
    color: #fff;
    background-color: #fcaa67;
}

.submit-btn:hover {
    background-color: #e39450;
}


.clear-btn {
    color: #fff;
    background-color: #007bff; 
}

.clear-btn:hover {
    background-color: #0056b3; 
}


    .horas-disponibles {
        display: block;
        font-size: 0.9rem;
        color: #666;
        margin-top: 5px;
        margin-bottom: 10px;
    }
    .eliminar-btn{
        padding: 10px 30px;
        font-size: 1rem;
        font-weight: 600;
        color: #fff;
        background-color: red;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .tabla-margen td {
        text-align: right;
    }
</style>

<div class="form-container">
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            @ViewBag.ErrorMessage
        </div>
    }
    <h1 class="form-title">Crear Nuevo Proyecto</h1>
    <p class="form-subtitle">Rellene la siguiente ficha con los datos del proyecto</p>
    <p class="form-subtitle">
        Fecha: <span id="current-date"></span>
    </p>

    <form action="@Url.Action("CrearProyecto","Proyecto")" method="post" onsubmit="return validarFechas()">
        <div class="form-row">
            <div class="form-group">
                <label for="numeroProyecto">Número de proyecto</label>
                <input type="text" id="numeroProyecto" readonly name="numproyecto" >
            </div>
            <div class="form-group">
                <label for="nombreProyecto">Nombre de proyecto</label>
                <input type="text" id="nombreProyecto" name="nombre" required>
            </div>
   
            
            
            <div class="form-group">
                <label for="cliente">Cliente</label>
                <select id="cliente" name="cliente" required>
                    <option value="" disabled selected>Seleccione un cliente</option>
                    @if(ViewBag.Clientes!=null){
                        @foreach (var cliente in ViewBag.Clientes)
                        {
                            <option value="@cliente.Id">@cliente.Nombre</option>
                        }
                    }
                    
                </select>
            </div>
            <div class="form-group">
                <label for="cliente">Departamento</label>
                <select id="sucursal" name="sucursal" required>
                    <option value="" disabled selected>Seleccione un departamento</option>
                  
                      
                    
                </select>
            </div>
        </div>

        <div class="form-row">
            
            <div class="form-group">
                <label for="unidadNegocio">Unidad de negocio</label>
                <select id="unidadNegocio" name="unidadNegocio" required>
                    <option value="" disabled selected>Seleccione una unidad</option>
                    @if(ViewBag.Unegocios!=null){
                        @foreach (var uneogocio in ViewBag.Unegocios)
                        {
                            <option value="@uneogocio.Id">@uneogocio.TipoUnegocio</option>
                        }
                    }
                    
                    
                </select>
            </div>
            <div class="form-group">
                <label for="centroCosto">Centro de costo</label>
                <select id="centroCosto" name="centroCosto" required>
                    <option value="" disabled selected>Seleccione un centro de costo</option>
                    @if (ViewBag.Ccostos != null)
                    {
                        @foreach (var ccosto in ViewBag.Ccostos)
                        {
                            <option value="@ccosto.Id">@ccosto.TipoCcosto</option>
                        }
                    }
                    
                </select>
            </div>
            <div class="form-group">
                <label for="codigoccosto">Código</label>
                <input type="text" id="codigoccosto" name="codigoccosto" readonly>
            </div>
            <div class="form-group">
                <label for="estadoProyecto">Estado del proyecto</label>
                <select id="estadoProyecto" name="status" required>
                    <option value="6" selected>Presupuesto</option>
                    
                </select>
            </div>
            <div style="display:none" class="form-group">
                <label for="Probabilidad">Probabilidad</label>
                <select id="probabilidad" name="probabilidad">
                    <option value="" disabled selected>Seleccione la Probabilidad del proyecto</option>
                    <option value="Alto">Alta</option>
                    <option value="Medio">Media</option>
                    <option value="Bajo">Baja</option>
                </select>
            </div>
            <div style="display:none" class="form-group">
                <label for="nivelprobabilidad">Nivel Probabilidad (%)</label>
                <input type="number" id="nivelprobabilidad" name="porcentajeprobabilidad" min="1" max="100" required>
            </div>
            <div style="display:none" class="form-group">
                <label for="fechaPlazo">Fecha de Plazo de Negociación</label>
                <input type="date" id="fechaPlazo" name="fechaplazoneg">
            </div>
        </div>

        <div class="form-row">
            
            <div class="form-group">
                <label for="tipologia">Tipología</label>
                <select id="tipologia" name="idtipologia"  required>
                    <option value="" disabled selected>Seleccione una Tipología</option>
                    @if(ViewBag.Tipologias!=null){
                        @foreach (var tipologia in ViewBag.Tipologias)
                        {
                            <option value="@tipologia.Id">@tipologia.TipoTipologia</option>
                        }
                    }
                    
                </select>
            </div>
            <div class="form-group">
                <label for="tipoEmpresa">Empresa Ejecutora</label>
                <select id="tipoEmpresa" name="tipoempresa"  required>
                    <option value="" disabled selected>Seleccione Empresa que Ejecuta</option>
                    @if(ViewBag.Empresas!=null){
                        @foreach (var empresa in ViewBag.Empresas)
                        {
                            <option value="@empresa.Id">@empresa.TipoEmpresa</option>
                        }
                    }
                    
                </select>
            </div>
            
            
            
        </div>
        <div class="form-row">
            <div class="form-group-radio">
                <label>¿Afecta el IVA?</label>
                <label><input type="radio" name="afectaiva" value="si" required onchange="generarFilas()"> Sí</label>
                <label><input type="radio" name="afectaiva" value="no" required onchange="generarFilas()"> No</label>
            </div>
            
        </div>
        <div class="form-row">
            <div class="form-group">
                <label for="tipoMoneda">Moneda de Origen</label>
                <select id="tipoMoneda" name="moneda" required>
                    <option value="" disabled selected>Seleccione la Moneda</option>
                    <option value="CLP">CLP</option>
                    <option value="US">US</option>
                    <option value="EURO">EURO</option>
                    <option value="UF">UF</option>
                </select>
            </div>
            <div id="monedaOrigenGroup" style="display:none;" class="form-group">
                <label for="montomonedaorigen">Monto Moneda Origen</label>
                <input type="text" id="montomonedaorigen" name="montoorigen">
            </div>
            <div id="tasacambioGroup" style="display:none;" class="form-group">
                <label for="tasacambio">Tasa Cambio</label>
                <input type="text" id="tasacambio" name="tasacambio">
            </div>
            <div class="form-group">
                <label for="monto">MontoCLP</label>
                <input type="text" id="monto" name="monto" readonly required>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group">
                <label for="plazo">Plazo en meses</label>
                <input type="number" id="plazo" name="plazo" placeholder="Plazo" required>
            </div>
            <div class="form-group">
                <label for="cuotas">Número de Cuotas</label>
                <input type="number" id="cuotas" name="cuotas" placeholder="Cuotas" required>
            </div>
            <div class="form-group">
                <label for="fechaInicio">Fecha de inicio</label>
                <input type="date" id="fechaInicio" name="fechainicio"  required>
            </div>
            <div class="form-group">
                <label for="fechaFin">Fecha fin</label>
                <input type="date" id="fechaFin" readonly name="fechatermino"  disabled>
            </div>
           
        </div>
        

        <div class="form-row">
           
            <div class="form-group">

                <input type="hidden" id="idcuentafactura" name="idcuentafactura" readonly>
                <input type="hidden" id="idsegmentofactura" name="idsegmentofactura" readonly />
                <input type="hidden" id="cuentafactura" name="cuenta" readonly>
                <input type="hidden" id="nombresegmentofactura" name="nombresegmentofactura" readonly>
                <input type="hidden" id="codigo" name="idccosto" />
                <input type="hidden" class="nombresegmentoservicio" />
                <input type="hidden" class="idcuentaservicio" name="idcuentaservicio" />
                <input type="hidden" class="cuentaservicio" />
                <input type="hidden" class="ccostoservicio" />
                <input type="hidden" class="nombresegmentoconsultor" />
                <input type="hidden" class="idcuentaconsultor" name="idcuentaconsultor" />
                <input type="hidden" class="cuentaconsultor" />
                <input type="hidden" class="nombresegmentohonorario" />
                <input type="hidden" class="idsegmentoservicio" id="idsegmentoservicio" />
            </div>
           
        </div>
        <div class="form-group">
            <p class="form-subtitle">Facturas</p>
            <table id="tablafactura" style="width: 100%; border-collapse: collapse; text-align: left;">
                <thead>
                    <tr style="background-color: #d9e2f3; color: black;">
                        <th style="padding: 10px; border: 1px solid #ddd;">Fecha Emision</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Fecha Vencimiento</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">MontoCLP</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Observación</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">IdCuenta</th>
                     
                    </tr>
                </thead>
                <tbody id="tabla-body">
                </tbody>
            </table>
        </div>

       @*<div class="form-group">
            <p class="form-subtitle">Facturas</p>
            <table id="tablafactura" style="width: 100%; border-collapse: collapse; text-align: left;">
                <thead>
                    <tr style="background-color: #d9e2f3; color: black;">
                        <th style="padding: 10px; border: 1px solid #ddd;">IDCuenta</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Cuenta Contable</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Segmento</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Mes</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Neto</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Iva</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Total</th>
                    </tr>
                </thead>
                <tbody id="tabla-body">
                    
                </tbody>
            </table>
        </div>
        *@
        <div class="form-group">
            <p class="form-subtitle" style="color:black;display:none;">Stock de Horas Anuales Disponibles de cada Socio y Staff durante la duración del proyecto</p>
            <div style="display: flex; justify-content: space-between;">


                <table style="width: 40%; border-collapse: collapse; text-align: left;display:none;">
                    <thead>
                        <tr style="background-color: #b2e6a5; color: black;">
                            <th style="padding: 10px; border: 1px solid #ddd;">Socio</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Nombre</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">HH/Anuales Disponibles</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Hrs. a Proyectos</th>

                            <th style="padding: 10px; border: 1px solid #ddd;">Costo Unitario</th>
                        </tr>
                    </thead>
                    <tbody>
                       
                        @if (ViewBag.Costos != null)
                        {



                            @foreach (var recurso in ViewBag.Costos)
                            {
                                if (recurso.TipoRecurso == "Socio")
                                {
                                    <tr>
                                        <td style="padding: 10px; border: 1px solid #ddd;" data-costo-unitario="@recurso.Valor">$ @recurso.Valor</td>
                                    </tr>
                                    
                                   
                                    
                                }
                            }
                        }
                        
                    </tbody>
                </table>
                <!-- Tabla de Staff -->
                <table  style="width: 40%; border-collapse: collapse; text-align: left; display:none;">
                    <thead>
                        <tr style="background-color: #b2e6a5; color: black;">
                            <th style="padding: 10px; border: 1px solid #ddd;">Staff</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Nombre</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">HH/Anuales Disponibles</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Hrs. a Proyectos</th>
                            
                            <th style="padding: 10px; border: 1px solid #ddd;">Costo Unitario</th>
                        </tr>
                    </thead>
                    <tbody>
                       
                        @if(ViewBag.Costos != null){
                            @foreach (var recurso in ViewBag.Costos)
                            {
                                if (recurso.TipoRecurso == "Staff")
                                {
                                    <tr>

                                        <td style="padding: 10px; border: 1px solid #ddd;" data-costo-staff="@recurso.Valor">$ @recurso.Valor</td>
                                    </tr>
                                    
                                }
                            }
                        }
                        
                        
                    </tbody>
                </table >

                @if (ViewBag.Totales != null)
                {
                    @foreach (var total in ViewBag.Totales)
                    {
                        @if(total.TipoRecurso == "Socio")
                        {
                            <table style="width: 40%; border-collapse: collapse; text-align: left; display:none;">
                                <thead>
                                    <tr style="background-color: #b2e6a5; color: black;">
                                        <th style="padding: 10px; border: 1px solid #ddd;">Totales HH Anuales Socios - @DateTime.Now.Year</th>
                                    </tr>
                                    <tr>
                                        <th id="totalSocios" style="padding: 10px; border: 1px solid #ddd;">@String.Format("{0:N2}",@total.TotalHhAnuales)</th>
                                    </tr>
                                </thead>
                            </table>
                        }
                        @if(total.TipoRecurso == "Staff")
                        {

                            <table style="width: 40%; border-collapse: collapse; text-align: left; display:none;">
                                <thead>
                                    <tr style="background-color: #b2e6a5; color: black;">
                                        <th style="padding: 10px; border: 1px solid #ddd;">Totales HH Anuales Staff - @DateTime.Now.Year</th>
                                    </tr>
                                    <tr>
                                        <th id="totalStaff" style="padding: 10px; border: 1px solid #ddd;">@String.Format("{0:N2}",@total.TotalHhAnuales)</th>
                                    </tr>
                                </thead>
                            </table>
                        }
                    }
                }

                   


                
                <div style="display:none;">
                    @if(ViewBag.Recursos!=null){
                        @foreach (var recurso in ViewBag.Recursos)
                        {
                            if (recurso.NOMBRE_RECURSO_CORRELATIVO.StartsWith("Consultor"))
                            {
                                if (recurso.NOMBRE_RECURSO_CORRELATIVO == "Consultor A")
                                {
                                    <input type="hidden" id="idconsultora" value="@recurso.Costo_Unitario" />
                                }
                                if (recurso.NOMBRE_RECURSO_CORRELATIVO == "Consultor B")
                                {
                                    <input type="hidden" id="idconsultorb" value="@recurso.Costo_Unitario" />
                                }
                                if (recurso.NOMBRE_RECURSO_CORRELATIVO == "Consultor C")
                                {
                                    <input type="hidden" id="idconsultorc" value="@recurso.Costo_Unitario" />
                                }

                            }
                        }
                    }
                   
                </div>
            </div>
        </div>
        <div style="display:none">
            @if(ViewBag.Recursos!=null){
                @foreach (var recurso in ViewBag.Recursos)
                {
                    if (recurso.NOMBRE_RECURSO_CORRELATIVO.StartsWith("Consultor"))
                    {
                        <input type="hidden" id="idconsultor" value="@recurso.ID_RECURSO" />
                        break;

                    }
                }
            }
           
        </div>

        <div class="form-group">
            <p class="form-subtitle" style="color:black">Digite las Horas del Proyecto</p>
            <table style="width: 100%; border-collapse: collapse; text-align: left;">
                <thead>
                    <tr style="background-color: #b2e6a5; color: black;">
                        <th style="padding: 10px; border: 1px solid #ddd;">Tipología</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Hrs/Proyecto Socio</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Hrs/Proyecto Staff</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Hrs/Proyecto Consultor A</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Hrs/Proyecto Consultor B</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Hrs/Proyecto Consultor C</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td id="tipologiaText" style="padding: 10px; border: 1px solid #ddd;"></td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input type="number" class="horas-socios" min="0" step="0.5" id="horasSocios" name="hhsocios" placeholder="Horas Socios" >
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input type="number" class="horas-staff" min="0" step="0.5" id="horasStaff" name="hhstaff" placeholder="Horas Staff" >
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input type="number" id="consultorA" name="hhconsultora" placeholder="Horas A" >
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input type="number" id="consultorB" name="hhconsultorb" placeholder="Horas B" requred>
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input type="number" id="consultorC" name="hhconsultorc" placeholder="Horas C" >
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
       


        @*COSTOS DIRECTOS*@

        <div class="form-group">
            <p class="form-subtitle" style="color:black">Costos Directos</p>
            <div style="display: flex; justify-content: space-between;">

                
                <table style="width: 100%; border-collapse: collapse; text-align: left;">
                    <thead>
                        <tr style="background-color: #b2e6a5; color: black;">
                            <th style="padding: 10px; border: 1px solid #ddd;">Costo</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">IDCuenta</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Cuenta Contable</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Segmento</th>
                            <th style="padding: 10px; border: 1px solid #ddd;">Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd;"><strong>Horas Socios</strong></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="idcuentasocio" name="idcuentasocio" readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="cuentasocio" readonly/></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="nombresegmentosocio" readonly/>
                              

                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"> <span id="totalsocio" style="font-weight: bold;"></span></td>
                            <input type="hidden" class="idsegmentosocio" name="idsegmentosocio" />
                        </tr>
                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd;"><strong>Cons.Internos</strong></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="idcuentaconsultor" name="idcuentastaff" readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="cuentaconsultor" readonly/></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="nombresegmentoconsultor" readonly/>
                              
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"> <span id="totalstaff" style="font-weight: bold;"></span></td>
                            <input type="hidden" class="idsegmentoconsultor" name="idsegmentostaff" />
                        </tr>
                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd;"><strong>Consultor A</strong></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="idcuentahonorarioA" name="idcuentaconsultora" readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="cuentahonorarioA" readonly/></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="nombresegmentohonorarioA" readonly/>
                               
                            
                            </td>
                            
                            <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"> <span id="totalconsultorA" style="font-weight: bold;"></span></td>
                            <input type="hidden" class="idsegmentohonorarioA" name="idsegmentoconsultora" />
                        </tr>
                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd;"><strong>Consultor B</strong></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="idcuentahonorarioB" name="idcuentaconsultorb" readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="cuentahonorarioB" readonly/></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="nombresegmentohonorarioB" readonly/>
                               
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"> <span id="totalconsultorB" style="font-weight: bold;"></span></td>
                            <input type="hidden" class="idsegmentohonorarioB" name="idsegmentoconsultorb" />
                        </tr>
                        <tr>
                            <td style="padding: 10px; border: 1px solid #ddd;"><strong>Consultor C</strong></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="idcuentahonorarioC" name="idcuentaconsultorc" readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="cuentahonorarioC" readonly /></td>
                            <td style="padding: 10px; border: 1px solid #ddd;"><input type="text" class="nombresegmentohonorarioC" readonly />
                               
                            </td>
                            <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"> <span id="totalconsultorC" style="font-weight: bold;"></span></td>
                            <input type="hidden" class="idsegmentohonorarioC" name="idsegmentoconsultorc" />
                        </tr>
                        <tr >
                            <td colspan="4" style="padding: 10px; border: 1px solid #ddd; background-color:#b2e6a5;"><strong>Total</strong></td>
                            <td style="padding: 10px; border: 1px solid #ddd; text-align:right;background-color:#b2e6a5;"> <span id="totalcostosdirectos" style="font-weight: bold;"></span></td>

                        </tr>
                    </tbody>
                </table>

        
            </div>
        </div>

       
        <div class="form-group">
            <p class="form-subtitle" style="color:black;">Subcontratación de Servicios</p>
            <table style="width: 100%; border-collapse: collapse; text-align: left;" id="tablaservicios">
                <thead>
                    <tr>
                        <th style="padding: 10px; border: 1px solid #ddd;">Tipo Servicio</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">MontoCLP</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Fecha</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Centro de Costos</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Segmento</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">ID Cuenta</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Cuenta</th>
               
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <select class="serviciosSelect" name="idservicio" onchange="checkRequired(this)">
                                <option value="" disabled selected>Seleccione un Servicio</option>


                            </select>
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;"><input name="montoservicio" class="montoservicio" type="text"></td>
                        <td style="padding: 10px; border: 1px solid #ddd;"><input name="fechaservicio" class="fechaservicio" type="date"></td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input type="text" id="ccostoservicio" class="ccostoservicio" name="ccostoservicio" readonly />
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input type="text" id="nombresegmentoservicio" class="nombresegmentoservicio" name="nombresegmentoservicio" readonly />
                            
                        </td>
                        
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input type="text" id="idcuentaservicio" class="idcuentaservicio" name="idcuentaservicio" readonly />
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input type="text" id="cuentaservicio" class="cuentaservicio" name="cuentaservicio" readonly />
                        </td>
                        <td style="display:none;">
                            <input type="text" class="idsegmentoservicio" name="idsegmentoservicio" />
                        </td>
                        <input type="hidden" name="IdServicioProyecto" value="" />
                    </tr>
                    
                    
                </tbody>
            </table>
            <div id="totalMonto" style="margin-top: 10px; font-weight: bold;">Total: $<span id="montoTotal">0</span></div>
            <button id="agregarFila" class="submit-btn" style="margin-top: 10px;">Agregar Otra Subcontratación de Servicio</button>
        </div>
        <div class="form-group">
            <p class="form-subtitle"style="color:black;">Gastos Operacionales</p>
            <table style="width: 100%; border-collapse: collapse; text-align: left;" id="tablagastos">
                <thead>
                    <tr>
                        <th style="padding: 10px; border: 1px solid #ddd;">Tipo Gasto</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">MontoCLP</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Fecha</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Centro de Costos</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Segmento</th>                     
                        <th style="padding: 10px; border: 1px solid #ddd;">ID Cuenta</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Cuenta</th>
                       
                        
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <select class="gastosSelect" name="idgastos[]" onchange="checkRequiredGasto(this)">
                                <option value="" disabled selected>Seleccione un Gasto</option>
                                

                            </select>
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;"><input name="montogasto" class="montogasto" type="text"></td>
                        <td style="padding: 10px; border: 1px solid #ddd;"><input name="fechagasto" class="fechagasto" type="date"></td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input type="text" id="ccostogasto"  name="costogastos" readonly />
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input type="text" class="segmentogastos" name="segmentogastos" readonly/>
                     
                        </td>
                       
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input class="idcuentagastos" name="idcuentagasto" readonly />
                                
                        </td>
                        <td style="padding: 10px; border: 1px solid #ddd;">
                            <input class="cuentagastos" name="cuentagastos" readonly />

                        </td>
                        <td style="display:none">
                            <input type="text" class="idsegmentogasto" name="idsegmentogasto" />
                        </td>
                        <td style="display:none;">
                            <input type="hidden" name="IdGastoProyecto" value="" />
                        </td>
                    </tr>
                  

                </tbody>
            </table>
            <div id="totalMontoGastos" style="margin-top: 10px; font-weight: bold;">Total: $<span id="montoTotalGastos">0</span></div>
            <button id="agregarFilaGastos" class="submit-btn" style="margin-top: 10px;">Agregar Otro Gasto Operacional</button>
        </div>
        <div class="form-group">
            <p class="form-subtitle" style="color:black;">Síntesis Económica del Proyecto</p>
            <table style="width: 80%; border-collapse: collapse; margin: 0 auto;">
                <thead>
                    <tr style="background-color: #fa8164; color: black; text-align:center">
                        <th style="padding: 10px; border: 1px solid #ddd;">Nombre</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Total</th>
                        <th style="padding: 10px; border: 1px solid #ddd;">Porcentaje</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd; text-align:left;"><strong>Ingresos</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><strong><span id="ingresosvalor"></span></strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><strong><span id="porcentajeingresos"></span></strong></td>

                    </tr>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:left;"><strong>Horas Socios</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="horassociosmargen"></span></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="horassociosporcentaje"></span></td>

                    </tr>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:left;"><strong>Horas Staff</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="horasstaffmargen"></span></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="horasstaffporcentaje"></span></td>

                    </tr>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:left;"><strong>Horas Cons.Externos</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="horasconsultoresmargen"></span></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="horasconsultoresporcentaje"></span></td>

                    </tr>

                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:left;"><strong>Serv. Contratados</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="serviciosmargen"></span></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="serviciosporcentaje"></span></td>

                    </tr>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:left;"><strong>Gastos Operacionales</strong></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="gastosmargen"></span></td>
                        <td style="padding: 10px; border: 1px solid #ddd;text-align:right;"><span id="gastosporcentaje"></span></td>

                    </tr>
                    <tr>
                        <td style="padding: 10px; border: 1px solid #fa8164;text-align:left;"><strong>Total Egresos</strong></td>
                        <td style="padding: 10px; border: 1px solid #fa8164;text-align:right;">
                            <strong><span id="egresosmargen"></span></strong>
                        </td>
                        <td style="padding: 10px; border: 1px solid #fa8164;text-align:right;">
                            <strong><span id="egresosporcentaje"></span></strong>
                        </td>

                    </tr>
                    <tr style="background-color: #fa8164; color: black;">
                        <td style="padding: 10px; border: 1px solid #fa8164;text-align:left;"><strong>Margen Esperado</strong></td>
                        <td style="padding: 10px; border: 1px solid #fa8164;text-align:right;"><strong><span id="margenfinal"></span></strong></td>
                        <td style="padding: 10px; border: 1px solid #fa8164;text-align:right;"><strong><span id="margenporcentaje"></span></strong></td>

                    </tr>
                </tbody>
            </table>

        </div>
        <div class="button-container">
            <button type="submit" class="submit-btn">Crear Proyecto</button>
            <button type="button" class="clear-btn" id="clearBtn">Limpiar</button>
        </div>
       
    </form>
</div>





<script>
    $(document).ready(function () {
        $('#cliente').on('change', function () {
            var clienteId = $(this).val(); 

            if (clienteId) {
                $.ajax({
                    url: '/Cliente/ObtenerSucursales', 
                    type: 'GET',
                    data: { idcliente: clienteId }, 
                    success: function (data) {
                        console.log(data);
                        var $sucursalSelect = $('#sucursal');
                        $sucursalSelect.empty(); 
                        $sucursalSelect.append('<option value="" disabled selected>Seleccione un departamento</option>');
                        $.each(data, function (index, sucursal) {
                            $sucursalSelect.append('<option value="' + sucursal.id + '">' + sucursal.nombre + '</option>');
                        });
                    },
                    error: function () {
                        alert('Error al obtener las sucursales');
                    }
                });
            }
        });
     
    });
    $(document).ready(function () {
        $('#fechaInicio, #plazo').on('input', function () {
            var fechaInicio = $('#fechaInicio').val();
            var plazo = $('#plazo').val();

            if (fechaInicio && plazo) {
                var nuevaFecha = moment(fechaInicio).add(plazo, 'months').format('YYYY-MM-DD');
                $('#fechaFin').val(nuevaFecha);
                $('#fechaFin').prop('disabled', false); // Habilita el campo para que se envíe
            } else {
                $('#fechaFin').val('');
            }
        });
    });
  
    // Función para actualizar la tabla con el valor seleccionado del select
    function actualizarTipologia() {
        
        var selectTipologia = document.getElementById("tipologia");
        var tipologiaSeleccionada = selectTipologia.options[selectTipologia.selectedIndex].text;

        
        document.getElementById("tipologiaText").innerText = tipologiaSeleccionada;
    }

    
    document.getElementById("tipologia").addEventListener("change", actualizarTipologia);
    
       
    document.addEventListener('DOMContentLoaded', function () {
        const estadoProyecto = document.getElementById('estadoProyecto');
        const probabilidadInput = document.getElementById('probabilidad').parentElement;
        const nivelProbabilidadInput = document.getElementById('nivelprobabilidad').parentElement;
        const fechaplazoInput = document.getElementById('fechaPlazo').parentElement;
        
       
        
        function toggleInputs() {
            const selectedValue = estadoProyecto.value;

            if (selectedValue == "1") {
                probabilidadInput.style.display = 'block';
                nivelProbabilidadInput.style.display = 'block';
                fechaplazoInput.style.display = 'block';

                probabilidadInput.querySelector('select').setAttribute('required', 'required');
                nivelProbabilidadInput.querySelector('input').setAttribute('required', 'required');
                fechaplazoInput.querySelector('input').setAttribute('required', 'required');
            } else {
                probabilidadInput.style.display = 'none';
                nivelProbabilidadInput.style.display = 'none';
                fechaplazoInput.style.display = 'none';

                probabilidadInput.querySelector('select').removeAttribute('required');
                nivelProbabilidadInput.querySelector('input').removeAttribute('required');
                fechaplazoInput.querySelector('input').removeAttribute('required');
            }
        }

        
        estadoProyecto.addEventListener('change', toggleInputs);
        toggleInputs();
    });
    
    /*tipo de moneda*/
    document.getElementById('tipoMoneda').addEventListener('change', function () {
        const selectedCurrency = this.value;
        const montoMonedaOrigenGroup = document.getElementById('monedaOrigenGroup');
        const montoMonedaOrigenInput = document.getElementById('montomonedaorigen');
        const tasacambioGroup = document.getElementById('tasacambioGroup');
        const tasacambioInput = document.getElementById('tasacambio');
        const montoclpInput = document.getElementById('monto');
        if (selectedCurrency === 'CLP') {
            montoclpInput.value = '';
            montoMonedaOrigenInput.value = '';
            montoMonedaOrigenGroup.style.display = 'block';
            montoMonedaOrigenInput.setAttribute('required', 'required');
            tasacambioGroup.style.display = 'block';
            tasacambioInput.setAttribute('readonly', 'readonly');
            montoclpInput.setAttribute('readonly', 'readonly');
            tasacambioInput.value = 1;
            montoMonedaOrigenInput.addEventListener('input', calcularMontoCLP);

            function calcularMontoCLP() {
                const tasacambio = 1;
                const montoMonedaOrigen = parseFloat(montoMonedaOrigenInput.value.replace(/\./g, '').replace(',', '.')) || 0;
                const resultado = tasacambio * montoMonedaOrigen;

                montoclpInput.value = resultado.toLocaleString('de-DE', {
                    minimumFractionDigits: 0,
                    maximumFractionDigits: 0
                });
                obtenerMargenEsperado();
            }
        } else {
            
            montoMonedaOrigenGroup.style.display = 'block';
            montoMonedaOrigenInput.setAttribute('required', 'required');
            tasacambioGroup.style.display = 'block';
            tasacambioInput.setAttribute('required', 'required');
            tasacambioInput.removeAttribute('readonly');
            montoclpInput.setAttribute('readonly', 'readonly');
            tasacambioInput.addEventListener('input', calcularMontoCLP);
            montoMonedaOrigenInput.addEventListener('input', calcularMontoCLP);

            function calcularMontoCLP() {
                const tasacambio = parseFloat(tasacambioInput.value.replace(/\./g, '').replace(',', '.')) || 0;
                const montoMonedaOrigen = parseFloat(montoMonedaOrigenInput.value.replace(/\./g, '').replace(',', '.')) || 0;
                const resultado = tasacambio * montoMonedaOrigen;

                montoclpInput.value = resultado.toLocaleString('de-DE', {
                    minimumFractionDigits: 0,
                    maximumFractionDigits: 0
                });
                obtenerMargenEsperado();
            }
        }
    });

   
    const totalMontoElement = document.getElementById('montoTotal');
    $(document).ready(function () {

        function obtenerFechaActual() {
            const hoy = new Date();
            const dia = String(hoy.getDate()).padStart(2, '0');
            const mes = String(hoy.getMonth() + 1).padStart(2, '0'); 
            const anio = hoy.getFullYear();
            return `${anio}-${mes}-${dia}`;
        }

       
        document.querySelectorAll('.fechaservicio').forEach(function (inputFecha) {
            inputFecha.value = obtenerFechaActual();
        });

        document.getElementById('agregarFila').addEventListener('click', function (e) {
            e.preventDefault();
            const newRow = document.createElement('tr');

            const costoservicioValue = document.querySelector('#ccostoservicio') ? document.getElementById('ccostoservicio').value : '';
            const nombreservicioValue = document.querySelector('#nombresegmentoservicio') ? document.getElementById('nombresegmentoservicio').value : '';
            const idcuentaservicioValue = document.querySelector('#idcuentaservicio') ? document.getElementById('idcuentaservicio').value : '';
            const cuentaservicioValue = document.querySelector('#cuentaservicio') ? document.getElementById('cuentaservicio').value : '';
            const idsegmentoservicioValue = document.querySelector('.idsegmentoservicio') ? document.querySelector('.idsegmentoservicio').value : ''; 

            newRow.innerHTML = `
        <td style="padding: 10px; border: 1px solid #ddd;">
            <select class="serviciosSelect" name="idservicio" onchange="checkRequired(this)">
                <option value="" disabled selected>Seleccione un Servicio</option>
            </select>
        </td>
        <td style="padding: 10px; border: 1px solid #ddd;">
            <input class="montoservicio" name="montoservicio" type="text">
        </td>
                 <td style="padding: 10px; border: 1px solid #ddd;"><input name="fechaservicio" class="fechaservicio" type="date" value="${obtenerFechaActual()}">
                 </td>
        <td style="padding: 10px; border: 1px solid #ddd;">
            <input class="ccostoservicio" name="ccostoservicio" value="${costoservicioValue}" readonly />
        </td>
        <td style="padding: 10px; border: 1px solid #ddd;">
            <input class="nombresegmentoservicio" name="nombresegmentoservicio"  readonly/>
            <select class="segmentoservicio" style="display:none;" name="idsegmentoservicio">
                <option value="" disabled selected>Seleccione un segmento</option>
            </select>
        </td>
        <td style="padding: 10px; border: 1px solid #ddd;">
            <input class="idcuentaservicio" name="idcuentaservicio"  readonly/>
        </td>
        <td style="padding: 10px; border: 1px solid #ddd;">
            <input class="cuentaservicio" name="cuentaservicio"  readonly />
        </td>
        <td style="display:none;">
            <input class="idsegmentoservicio" name="idsegmentoservicio"  />
        </td>
        <td style="padding: 10px; border: 1px solid #ddd;">
            <button  type="button" class="eliminar-btn" style="color:white;background-color:red">Eliminar</button>
        </td>
            <input type="hidden" name="IdServicioProyecto"  value="" />
    `;

            document.querySelector('#tablaservicios tbody').appendChild(newRow);

            // Llama a la función para cargar los segmentos en el nuevo select
           // obtenerSegmentosCostos(newRow.querySelector('.segmentoservicio'));
            cargarServicios(newRow.querySelector('.serviciosSelect'));
            //obtenerValoresServicio();
            const newMontoInput = newRow.querySelector('.montoservicio');
            newMontoInput.addEventListener("input", function (event) {
                formatInput(event);
                updateTotal();
                obtenerMargenEsperado();
            });
            
            newRow.querySelector('.eliminar-btn').addEventListener('click', function () {
                newRow.remove();
                updateTotal();
                obtenerMargenEsperado();
            });

            updateTotal();
            obtenerMargenEsperado();
            
        });
    });
   function updateTotal() {
        let total = 0;
        const montoInputs = document.querySelectorAll('.montoservicio');
        montoInputs.forEach(input => {
            const value = parseFloat(input.value.replace(/\./g, '').replace(/[^0-9,]/g, '').replace(',', '.'));
            if (!isNaN(value)) {
                total += value;
            }
        });
        totalMontoElement.innerText = total.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
        return total;
    }
    document.querySelector('.montoservicio').addEventListener("input", updateTotal);
     
    document.addEventListener('DOMContentLoaded', function () {
        obtenerMargenEsperado();
        updateTotal();
        updateTotalGasto();
    });





   document.addEventListener('DOMContentLoaded', function () {

        function obtenerFechaActualGasto() {
            const hoy = new Date();
            const dia = String(hoy.getDate()).padStart(2, '0');
            const mes = String(hoy.getMonth() + 1).padStart(2, '0'); // Enero es 0
            const anio = hoy.getFullYear();
            return `${anio}-${mes}-${dia}`;
        }

        document.querySelectorAll('.fechagasto').forEach(function (inputFecha) {
            inputFecha.value = obtenerFechaActualGasto();
        });

    document.getElementById('agregarFilaGastos').addEventListener('click', function (e) {
        const idUnidadNegocio = $("#unidadNegocio").val();
        const idCentroCosto = $("#centroCosto").val();
        const costoGastoValue = document.getElementById('ccostogasto').value;
        e.preventDefault();
        const newRow = document.createElement('tr');

        const servicioCell = document.createElement('td');
        const montoCell = document.createElement('td');
        const centroCostoCell = document.createElement('td');
        const segmentoCell = document.createElement('td');
        const idCuentaCell = document.createElement('td');
        const cuentaCell = document.createElement('td');
        const eliminarCell = document.createElement('td');
        const idSegmentoGastoCell = document.createElement('td'); 

       
        const idSegmentoGastoInput = document.createElement('input');
        idSegmentoGastoInput.type = 'text';
        idSegmentoGastoInput.className = 'idsegmentogasto';
        idSegmentoGastoInput.name = 'idsegmentogasto';
        idSegmentoGastoInput.style.display = 'none'; 
        idSegmentoGastoCell.appendChild(idSegmentoGastoInput);

       
        const selectGastos = document.createElement('select');
        selectGastos.className = "gastosSelect";
        selectGastos.name = "idgastos[]";
        selectGastos.innerHTML = '<option value="" disabled selected>Seleccione un Gasto</option>';
        servicioCell.appendChild(selectGastos);

      
        selectGastos.addEventListener('change', function () {
            checkRequiredGasto(selectGastos);
        });

        
        const montoInput = document.createElement('input');
        montoInput.type = 'text'; 
        montoInput.className = 'montogasto';
        montoInput.name = "montogasto";
        montoCell.appendChild(montoInput);

            const IdGastoProyectoCell = document.createElement('td');
            IdGastoProyectoCell.style.display = 'none';
            const hiddenIdGastoProyectoInput = document.createElement('input');
            hiddenIdGastoProyectoInput.type = 'hidden';
            hiddenIdGastoProyectoInput.name = 'IdGastoProyecto';
            hiddenIdGastoProyectoInput.value = '';
            IdGastoProyectoCell.appendChild(hiddenIdGastoProyectoInput);

   
        montoInput.addEventListener("input", formatInput);

     
        centroCostoCell.innerHTML = `<input type="text" name="costogastos[]" value="${costoGastoValue}" readonly />`;

    
        segmentoCell.innerHTML = '<input class="segmentogastos" name="segmentogastos" readonly />';

        idCuentaCell.innerHTML = '<input class="idcuentagastos" name="idcuentagasto" readonly />';

       
        cuentaCell.innerHTML = '<input class="cuentagastos" name="cuentagastos" readonly>';

        
        const eliminarBtn = document.createElement('button');
        eliminarBtn.textContent = 'Eliminar';
        eliminarBtn.style.color = 'white';
        eliminarBtn.style.backgroundColor = 'red';
        eliminarBtn.className = 'eliminar-btn';

      
        eliminarBtn.addEventListener('click', function () {
            newRow.remove(); 
            updateTotalGasto();
            obtenerMargenEsperado();
        });

        eliminarCell.appendChild(eliminarBtn);

           
            const fechaCell = document.createElement('td');
            const fechaInput = document.createElement('input');
            fechaInput.type = 'date';
            fechaInput.name = 'fechagasto';
            fechaInput.className = 'fechagasto';
            fechaCell.appendChild(fechaInput);

      
            fechaInput.value = obtenerFechaActualGasto();


        
        newRow.appendChild(servicioCell);
        newRow.appendChild(montoCell);
            newRow.appendChild(fechaCell);
        newRow.appendChild(centroCostoCell);
        newRow.appendChild(segmentoCell);
        newRow.appendChild(idCuentaCell);
        newRow.appendChild(cuentaCell);
            
        newRow.appendChild(eliminarCell);
        newRow.appendChild(idSegmentoGastoCell);
            newRow.appendChild(IdGastoProyectoCell);
      
        cargarGastos(newRow.querySelector('.gastosSelect'));

       
        document.querySelector('#tablagastos tbody').appendChild(newRow);

      
        obtenerMargenEsperado();
    });
});




    /*TABLA FACTURAS */
   /* document.getElementById("plazo").addEventListener("input", generarFilas);
    document.getElementById("fechaInicio").addEventListener("input", generarFilas);
    document.getElementById("montomonedaorigen").addEventListener("input", actualizarMontoYGenerarFilas);
    document.getElementById("tasacambio").addEventListener("input", actualizarMontoYGenerarFilas);

    function actualizarMontoYGenerarFilas() {
        const tasacambioInput = document.getElementById("tasacambio");
        const montomonedaorigenInput = document.getElementById("montomonedaorigen");
        const montoInput = document.getElementById("monto");

        const tasacambio = parseFloat(tasacambioInput.value.replace(/\./g, '').replace(',', '.')) || 0;
        const montoMonedaOrigen = parseFloat(montomonedaorigenInput.value.replace(/\./g, '').replace(',', '.')) || 0;
        const montoCalculado = tasacambio * montoMonedaOrigen;

        montoInput.value = montoCalculado.toLocaleString('de-DE', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });

        generarFilas();
    }


    function generarFilas() {
        var plazo = document.getElementById("plazo").value;
        var fechaInicio = document.getElementById("fechaInicio").value;
        var monto = parseFloat(document.getElementById("monto").value.replace(/\./g, '')) || 0;
        var afectaIVA = document.querySelector('input[name="afectaiva"]:checked')?.value;
        var idcuenta = document.getElementById("idcuentafactura").value;
        var cuentacontable = document.getElementById("cuentafactura").value;
        var nombresegmento = document.getElementById("nombresegmentofactura").value;
        var tablaBody = document.getElementById("tabla-body");

        tablaBody.innerHTML = "";

        var totalMonto = 0;
        var totalIVA = 0;
        var totalFinal = 0;

        if (plazo > 0 && fechaInicio) {
            var fecha = new Date(fechaInicio);
            fecha.setMonth(fecha.getMonth() + 1);
            var montoPorMes = monto / plazo;

            for (var i = 1; i <= plazo; i++) {
                var fila = document.createElement("tr");

                var mes = ("0" + (fecha.getMonth() + 1)).slice(-2);
                var año = fecha.getFullYear();
                var mesAño = mes + '/' + año;

                var iva = (afectaIVA === "si") ? montoPorMes * 0.19 : 0;
                var total = montoPorMes + iva;

                
                totalMonto += montoPorMes;
                totalIVA += iva;
                totalFinal += total;

                fila.innerHTML = `
                    <td style="padding: 10px; border: 1px solid #ddd;">${idcuenta}</td>
                    <td style="padding: 10px; border: 1px solid #ddd;">${cuentacontable}</td>
                    <td style="padding: 10px; border: 1px solid #ddd;">${nombresegmento}</td>
                    <td style="padding: 10px; border: 1px solid #ddd;">${mesAño}</td>
                        <td style="padding: 10px; border: 1px solid #ddd; text-align: right;">
        <input type="text" value="${montoPorMes.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}" readonly style="width: 150px; text-align: right; font-size: 16px; padding: 5px;">
    </td>
    <td style="padding: 10px; border: 1px solid #ddd; text-align: right;">
        <input type="text" value="${iva.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}" readonly style="width: 150px; text-align: right; font-size: 16px; padding: 5px;">
    </td>
    <td style="padding: 10px; border: 1px solid #ddd; text-align: right;">
        <input type="text" value="${total.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}" readonly style="width: 150px; text-align: right; font-size: 16px; padding: 5px;">
    </td>
                `;

                tablaBody.appendChild(fila);

                fecha.setMonth(fecha.getMonth() + 1);
            }

           
            var filaTotales = document.createElement("tr");
            filaTotales.innerHTML = `
                <td colspan="4" style="padding: 10px; border: 1px solid #ddd; font-weight: bold;">Totales</td>
                           <td style="padding: 10px; border: 1px solid #ddd; font-weight: bold; text-align: right;">
            <input id="netofactura" type="text" value="${totalMonto.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}" readonly style="width: 150px; text-align: right; font-size: 16px;">
        </td>
        <td style="padding: 10px; border: 1px solid #ddd; font-weight: bold; text-align: right;">
            <input type="text" value="${totalIVA.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}" readonly style="width: 150px; text-align: right; font-size: 16px;">
        </td>
        <td style="padding: 10px; border: 1px solid #ddd; font-weight: bold; text-align: right;">
            <input type="text" value="${totalFinal.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}" readonly style="width: 150px; text-align: right; font-size: 16px;">
        </td>
            `;

            
            tablaBody.appendChild(filaTotales);
            obtenerMargenEsperado();
        }
       
    }

    */


    $(document).ready(function () {
        $("#unidadNegocio, #centroCosto").change(function () {
            obtenerCodigo(); 
            obteneridcuenta(); 
            //obtenerValoresServicio();
            obtenerValoresConsultores();
            obtenerHonorarios();
        });
    });

    function obtenerCodigo() {
       
        var idUnidadNegocio = $("#unidadNegocio").val();
        var idCentroCosto = $("#centroCosto").val();

        if (idUnidadNegocio && idCentroCosto) {
            $.ajax({
                url: '/Proyecto/Getcodigoccosto',
                type: 'GET',
                data: {
                    idcosto: idCentroCosto,
                    idunegocio: idUnidadNegocio
                },
                success: function (data) {
                    if (data && data.length > 0) {
                        $("#codigoccosto").val(data[0].codigo);
                        $("#codigo").val(data[0].id);
                        $(".ccostoservicio").val(data[0].codigo);
                        $("#ccostogasto").val(data[0].codigo);
                        $("input[name='costogastos']").val(data[0].codigo);
                        if (data[0].id) {

                            obtenerHonorarios();

                        }
                    
                       
                    } else {
                        $("#codigoccosto").val('');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error en la solicitud AJAX:", error);
                    $("#codigoccosto").val('');
                }
            });
        } else {
            $("#codigoccosto").val('');
        }
    }

    function obteneridcuenta() {
        var idUnidadNegocio = $("#unidadNegocio").val();
        var idCentroCosto = $("#centroCosto").val();

        if (idUnidadNegocio && idCentroCosto) {
            $.ajax({
                url: '/Proyecto/GetValoresFactura',
                type: 'GET',
                data: {
                    idcosto: idCentroCosto,
                    idunegocio: idUnidadNegocio
                },
                success: function (data) {
                    if (data && data.length > 0) {
                        $(".idcuentafactura").each(function (index, element) {
                            $(element).val(data[0].idcuenta);
                        });
                        $("#cuentafactura").val(data[0].cuenta);
                        $("#nombresegmentofactura").val(data[0].nombre);
                        $("#idsegmentofactura").val(data[0].idsegmento);
                        //generarFilas();
                    } else {
                        $("#idcuentafactura").val('');
                        $("#nombresegmentofactura").val('');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error en la solicitud AJAX:", error);
                    $("#idcuentafactura").val('');
                }
            });
        } else {
            $("#idcuentafactura").val('');
        }
    }
    
    
    
    /*VALORES CUENTAS SERVICIOS */
    


    $(document).on('change', '.serviciosSelect', function () {
        var $row = $(this).closest('tr');
        const idUnidadNegocio = $("#unidadNegocio").val();
        const idCentroCosto = $("#centroCosto").val();
        var nombreservicio = $(this).find('option:selected').val();
        console.log(idUnidadNegocio);
        console.log(idCentroCosto);
        console.log(nombreservicio);
        $.ajax({
            url: '/Proyecto/GetValoresServiciosEdicion',
            type: 'GET',
            data: {
                idcosto: idCentroCosto,
                unegocio: idUnidadNegocio,
                idservicio: nombreservicio
            },
            success: function (data) {
                if (data && data.length > 0) {


                    $row.find('.idcuentaservicio').val(data[0].idcuenta);
                    $row.find('.cuentaservicio').val(data[0].cuenta);
                    $row.find('.nombresegmentoservicio').val(data[0].nombre);
                    $row.find('.idsegmentoservicio').val(data[0].idsegmento);

                } else {
                    console.log("No se encontraron valores.");
                }
            },
            error: function (xhr, status, error) {
                console.error("Error en la solicitud AJAX:", error);
            }
        });
    });

    function cargarServicios(selectElement) {
        $.ajax({
            url: '/Proyecto/ObtenerServicios',
            type: 'GET',
            success: function (data) {
                $(selectElement).empty();
                $(selectElement).append('<option value="" disabled selected>Seleccione un Servicio</option>');

                $.each(data, function (index, servicio) {
                    $(selectElement).append('<option value="' + servicio.id + '">' + servicio.nombre + '</option>');
                });
            },
            error: function () {
                alert('Ocurrió un error al cargar los servicios.');
            }
        });
    }


    $(document).ready(function () {
        $('.serviciosSelect').each(function () {
            cargarServicios(this);
        });
    });



   

   

    /*VALORES CONSULTORES*/ 


    function obtenerValoresConsultores() {
        var idUnidadNegocio = $("#unidadNegocio").val();
        var idCentroCosto = $("#centroCosto").val();

        if (idUnidadNegocio && idCentroCosto) {
            $.ajax({
                url: '/Proyecto/ObtenerValoresConsultores',
                type: 'GET',
                data: {
                    idcosto: idCentroCosto,
                    idunegocio: idUnidadNegocio
                },
                success: function (response) {
                    if (response && response.length > 0) {
                   
                        $(".idcuentaconsultor").val(response[0].idcuenta);
                        $(".cuentaconsultor").val(response[0].cuenta);
                        $(".idsegmentoconsultor").val(response[0].idsegmento);
                        $(".cuentasocio").val(response[0].cuenta);
                        $(".idsegmentosocio").val(response[0].idsegmento);
                        $(".idcuentasocio").val(response[0].idcuenta);

                      
                        $(".nombresegmentoconsultor").val(response[0].nombre);
                        $(".nombresegmentosocio").val(response[0].nombre);


                    } else {
                    
                        $(".idcuentaconsultor").val('');
                        $(".cuentaconsultor").val('');
                        $(".idcuentasocio").val('');
                        $(".cuentasocio").val('');


                       
                        $(".nombresegmentoconsultor").val('');
                        $(".nombresegmentosocio").val('');
                        $(".idsegmentoconsultor").val('');
                        $(".idsegmentosocio").val('');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error al obtener el servicio:', error);
                    $(".nombresegmentoservicio").val('');
                }
            });
        }
    }

   
        function formatInput(e) {
        var valor = e.target.value;

        
        valor = valor.replace(/\./g, '').replace(/[^0-9.,]/g, '');

    
        if (valor !== "") {
            valor = parseFloat(valor.replace(',', '.')).toLocaleString('de-DE', {
                minimumFractionDigits: 0,
                maximumFractionDigits: 0
            });
        }
        e.target.value = valor;
        updateTotalGasto();
        obtenerMargenEsperado();
    }
    /*formateando valores*/ 
    
    document.getElementById("monto").addEventListener("input", formatInput);
    document.getElementById("montomonedaorigen").addEventListener("input", formatInput);
    document.getElementById("tasacambio").addEventListener("input", formatInput);
    document.querySelectorAll('.montoservicio').forEach(input => {
        input.addEventListener("input", formatInput);
    });
    document.querySelectorAll('.montogasto').forEach(input => {
        input.addEventListener("input", formatInput);
    });


    document.querySelectorAll('.eliminar-btn').forEach(function (button) {
        button.addEventListener('click', function () {
            button.closest('tr').remove(); 
        });
    });


    function updateTotalGasto() {
        let total = 0;

        const montos = document.querySelectorAll('.montogasto');
        montos.forEach(input => {
      
            const value = parseFloat(input.value.replace(/\./g, '').replace(',', '.'));
            if (!isNaN(value)) {
                total += value;
            }
        });

        document.getElementById('montoTotalGastos').innerText = total.toLocaleString('de-DE', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
        return total;
    }




    function cargarGastos(selectElement) {
        $.ajax({
            url: '/Proyecto/ObtenerGastos',
            type: 'GET',
            success: function (data) {
                $(selectElement).empty(); 
                $(selectElement).append('<option value="" disabled selected>Seleccione un gasto</option>');

           
                $.each(data, function (index, gasto) {
                    $(selectElement).append('<option value="' + gasto.id + '">' + gasto.nombre + '</option>');
                });
            },
            error: function () {
                alert('Ocurrió un error al cargar los gastos.');
            }
        });
    }
    $(document).ready(function () {
        $('.gastosSelect').each(function () {
            cargarGastos(this);
        });
    });



    $(document).on('change', '.gastosSelect', function () {
        var $row = $(this).closest('tr');
        const idUnidadNegocio = $("#unidadNegocio").val();
        const idCentroCosto = $("#centroCosto").val();
        var nombreGasto = $(this).find('option:selected').val();
        console.log(idUnidadNegocio);
        console.log(idCentroCosto);
        console.log(nombreGasto);
        $.ajax({
            url: '/Proyecto/GetValoresGastosEdicion',
            type: 'GET',
            data: {
                idcosto: idCentroCosto,
                unegocio: idUnidadNegocio,
                idgasto: nombreGasto
            },
            success: function (data) {
                if (data && data.length > 0) {

                    $row.find('.segmentogastos').val(data[0].nombre);
                    $row.find('.idcuentagastos').val(data[0].idcuenta);
                    $row.find('.cuentagastos').val(data[0].cuenta);
                    $row.find('.idsegmentogasto').val(data[0].idsegmento);
                } else {
                    console.log("No se encontraron valores.");
                }
            },
            error: function (xhr, status, error) {
                console.error("Error en la solicitud AJAX:", error);
            }
        });
    });
   
   

   



   
   

    function obtenerHonorarios() {
        var idUnidadNegocio = $("#unidadNegocio").val();
        var idCentroCosto = $("#centroCosto").val();
        var idConsultor = $("#idconsultor").val();
        
        if (idUnidadNegocio && idCentroCosto) {
            $.ajax({
                url: '/Proyecto/ObtenerValoresHonorarios',
                type: 'GET',
                data: {
                    idcosto: idCentroCosto,
                    idunegocio: idUnidadNegocio,
                    idrecurso: idConsultor
                },
                success: function (data) {
                  
                    if (data && data.length > 0) {
                        $(".nombresegmentohonorarioA").val(data[0].nombre);
                        $(".idcuentahonorarioA").val(data[0].idcuenta);
                        $(".cuentahonorarioA").val(data[0].cuenta);
                        $(".idsegmentohonorarioA").val(data[0].idsegmento);
                        $(".nombresegmentohonorarioB").val(data[0].nombre);
                        $(".idcuentahonorarioB").val(data[0].idcuenta);
                        $(".cuentahonorarioB").val(data[0].cuenta);
                        $(".idsegmentohonorarioB").val(data[0].idsegmento);
                        $(".nombresegmentohonorarioC").val(data[0].nombre);
                        $(".idcuentahonorarioC").val(data[0].idcuenta);
                        $(".cuentahonorarioC").val(data[0].cuenta);
                        $(".idsegmentohonorarioC").val(data[0].idsegmento);
                       
                        
                    } else {

                        $(".nombresegmentohonorarioA").val('').hide();
                        $(".idcuentahonorarioA").val('');
                        $(".cuentahonorarioA").val('');
                        $(".idsegmentohonorarioA").val('');
                        $(".nombresegmentohonorarioB").val('');
                        $(".idcuentahonorarioB").val('');
                        $(".cuentahonorarioB").val('');
                        $(".idsegmentohonorarioB").val('');
                        $(".nombresegmentohonorarioC").val('').hide();
                        $(".idcuentahonorarioC").val('');
                        $(".cuentahonorarioC").val('');
                        $(".idsegmentohonorarioC").val('');
                        
                       
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error en la solicitud AJAX:", error);
                }
            });
        }

       

    }

    

    document.addEventListener('DOMContentLoaded', function () {

        const costoSocio = parseFloat(document.querySelector('[data-costo-unitario]').getAttribute('data-costo-unitario')) || 0;
        const costoStaff = parseFloat(document.querySelector('[data-costo-staff]').getAttribute('data-costo-staff')) || 0;
        const costoConsultora = parseFloat(document.querySelector('#idconsultora').value) || 0;
        const costoConsultorb = parseFloat(document.querySelector('#idconsultorb').value) || 0;
        const costoConsultorc = parseFloat(document.querySelector('#idconsultorc').value) || 0;

        const inputHorasStaff = document.querySelector('#horasStaff');
        const inputHorasSocios = document.querySelector('#horasSocios');
        const inputHorasConsultora = document.querySelector('#consultorA');
        const inputHorasConsultorb = document.querySelector('#consultorB');
        const inputHorasConsultorc = document.querySelector('#consultorC');

        const totalStaffElement = document.querySelector('#totalstaff');
        const totalConsultorAElement = document.querySelector('#totalconsultorA');
        const totalConsultorBElement = document.querySelector('#totalconsultorB');
        const totalConsultorCElement = document.querySelector('#totalconsultorC');
        const totalSociosElement = document.querySelector('#totalsocio');
        const totalCostosDirectosElement = document.querySelector('#totalcostosdirectos');

        function actualizarTotalCostos() {
            const totalSocio = parseFloat(totalSociosElement.textContent.replace(/\./g, '').replace(',', '.')) || 0;
            const totalStaff = parseFloat(totalStaffElement.textContent.replace(/\./g, '').replace(',', '.')) || 0;
            const totalConsultora = parseFloat(totalConsultorAElement.textContent.replace(/\./g, '').replace(',', '.')) || 0;
            const totalConsultorb = parseFloat(totalConsultorBElement.textContent.replace(/\./g, '').replace(',', '.')) || 0;
            const totalConsultorc = parseFloat(totalConsultorCElement.textContent.replace(/\./g, '').replace(',', '.')) || 0;

            const totalcostos = totalSocio + totalStaff + totalConsultora + totalConsultorb + totalConsultorc;
            totalCostosDirectosElement.textContent = totalcostos.toLocaleString('de-DE', {
                minimumFractionDigits: 0,
                maximumFractionDigits: 0
            });
        }

        function actualizarElementoHoras(input, costo, outputElement) {
            input.addEventListener('input', function () {
                const horas = parseFloat(this.value) || 0;
                const total = horas * costo;
                outputElement.textContent = total.toLocaleString('de-DE', {
                    minimumFractionDigits: 0,
                    maximumFractionDigits: 0
                });
                actualizarTotalCostos();
            });
        }

        actualizarElementoHoras(inputHorasSocios, costoSocio, totalSociosElement);
        actualizarElementoHoras(inputHorasStaff, costoStaff, totalStaffElement);
        actualizarElementoHoras(inputHorasConsultora, costoConsultora, totalConsultorAElement);
        actualizarElementoHoras(inputHorasConsultorb, costoConsultorb, totalConsultorBElement);
        actualizarElementoHoras(inputHorasConsultorc, costoConsultorc, totalConsultorCElement);

    });


    // Función para calcular el margen
    function calcularMargen(costoSocio, costoStaff, costoConsultora, costoConsultorb, costoConsultorc, horasSocios, horasStaff, horasConsultora, horasConsultorb, horasConsultorc) {
        const totalSocios = horasSocios * costoSocio;
        const totalStaff = horasStaff * costoStaff;
        const totalConsultoresExternos = (horasConsultora * costoConsultora) + (horasConsultorb * costoConsultorb) + (horasConsultorc * costoConsultorc);

        const margenSocios = totalSocios;
        const margenStaff = totalStaff;
        const margenConsultoresExternos = totalConsultoresExternos;

        return {
            margenSocios: margenSocios,
            margenStaff: margenStaff,
            margenConsultoresExternos: margenConsultoresExternos,
        };
    }

  
    function obtenerMargenEsperado() {
        const costoSocio = parseFloat(document.querySelector('[data-costo-unitario]').getAttribute('data-costo-unitario')) || 0;
        const costoStaff = parseFloat(document.querySelector('[data-costo-staff]').getAttribute('data-costo-staff')) || 0;
        const costoConsultora = parseFloat(document.querySelector('#idconsultora').value) || 0;
        const costoConsultorb = parseFloat(document.querySelector('#idconsultorb').value) || 0;
        const costoConsultorc = parseFloat(document.querySelector('#idconsultorc').value) || 0;

        const horasSocios = parseFloat(document.querySelector('#horasSocios').value) || 0;
        const horasStaff = parseFloat(document.querySelector('#horasStaff').value) || 0;
        const horasConsultora = parseFloat(document.querySelector('#consultorA').value) || 0;
        const horasConsultorb = parseFloat(document.querySelector('#consultorB').value) || 0;
        const horasConsultorc = parseFloat(document.querySelector('#consultorC').value) || 0;
        const totalMonto = updateTotal();
        const totalGastos = updateTotalGasto();
        
        const margenes = calcularMargen(costoSocio, costoStaff, costoConsultora, costoConsultorb, costoConsultorc, horasSocios, horasStaff, horasConsultora, horasConsultorb, horasConsultorc);
        const netoFacturaElement = document.getElementById('monto');
        const ingresos = netoFacturaElement ? parseFloat(netoFacturaElement.value.replace(/\./g, '').replace(',', '.')) || 0 : 0;
        

        
        
        document.getElementById('ingresosvalor').textContent = ingresos.toLocaleString('de-DE', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });
        document.getElementById('porcentajeingresos').textContent = 100 + '%';

        document.getElementById('horassociosmargen').textContent = margenes.margenSocios.toLocaleString('de-DE', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });

        let margenSocios = margenes.margenSocios;
        let porcentajeSocios = (margenSocios / ingresos) * 100;
        document.getElementById('horassociosporcentaje').textContent = porcentajeSocios.toFixed(0) + '%';

        document.getElementById('horasstaffmargen').textContent = margenes.margenStaff.toLocaleString('de-DE', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });
        let margenStaff = margenes.margenStaff;
        let porcentajeStaff = (margenStaff / ingresos) * 100;
        document.getElementById('horasstaffporcentaje').textContent = porcentajeStaff.toFixed(0) + '%';

        document.getElementById('horasconsultoresmargen').textContent = margenes.margenConsultoresExternos.toLocaleString('de-DE', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });
        let margenConsultoresExternos = margenes.margenConsultoresExternos;
        let porcentajeConsultoresExternos = (margenConsultoresExternos / ingresos) * 100;
        document.getElementById('horasconsultoresporcentaje').textContent = porcentajeConsultoresExternos.toFixed(0) + '%';

        document.getElementById('serviciosmargen').textContent = totalMonto.toLocaleString('de-DE', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });
        let porcentajeServicios = (totalMonto / ingresos) * 100;
        document.getElementById('serviciosporcentaje').textContent = porcentajeServicios.toFixed(0) + '%';
        document.getElementById('gastosmargen').textContent = totalGastos.toLocaleString('de-DE', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });
        let porcentajeGastos = (totalGastos / ingresos) * 100;
        document.getElementById('gastosporcentaje').textContent = porcentajeGastos.toFixed(0) + '%';
        
        const totalegresos = parseFloat(document.getElementById('horassociosmargen').textContent.replace(/\./g, '').replace(',', '.')) + parseFloat(document.getElementById('horasstaffmargen').textContent.replace(/\./g, '').replace(',', '.')) + parseFloat(document.getElementById('horasconsultoresmargen').textContent.replace(/\./g, '').replace(',', '.')) + parseFloat(document.getElementById('serviciosmargen').textContent.replace(/\./g, '').replace(',', '.')) + parseFloat(document.getElementById('gastosmargen').textContent.replace(/\./g, '').replace(',', '.'));
        document.getElementById('egresosmargen').textContent = totalegresos.toLocaleString('de-DE', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });
        let porcentajeegresos = porcentajeGastos + porcentajeServicios + porcentajeConsultoresExternos + porcentajeStaff + porcentajeSocios;
        document.getElementById('egresosporcentaje').textContent = porcentajeegresos.toFixed(0) + '%';
        const totalmargen = parseFloat(document.getElementById('ingresosvalor').textContent.replace(/\./g, '').replace(',', '.')) - parseFloat(document.getElementById('egresosmargen').textContent.replace(/\./g, '').replace(',', '.'))
        document.getElementById('margenfinal').textContent = totalmargen.toLocaleString('de-DE', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });
        let porcentajemargen = 100 - porcentajeegresos;
        document.getElementById('margenporcentaje').textContent = porcentajemargen.toFixed(0) + '%';
    }

    document.addEventListener('DOMContentLoaded', function () {
        document.querySelector('#horasSocios').addEventListener('input', obtenerMargenEsperado);
        document.querySelector('#horasStaff').addEventListener('input', obtenerMargenEsperado);
        document.querySelector('#consultorA').addEventListener('input', obtenerMargenEsperado);
        document.querySelector('#consultorB').addEventListener('input', obtenerMargenEsperado);
        document.querySelector('#consultorC').addEventListener('input', obtenerMargenEsperado);

        document.querySelectorAll('.montoservicio').forEach(input => {
            input.addEventListener('input', obtenerMargenEsperado);
        });
        document.querySelectorAll('.montogasto').forEach(input => {
            input.addEventListener("input", formatInput);
        });
        // Llama a la función para mostrar el margen inicial
        obtenerMargenEsperado();
    });



    $(document).ready(function(){

        $.ajax({

            url: '/Proyecto/ObtenerUltimoNumProyecto',
            method:'GET',
            success:function(data){
                $('#numeroProyecto').val(data);
            },
            error: function(error){
                console.log('Error al obtener el proyecto:',error);
            }
        });

    });
    document.getElementById('clearBtn').addEventListener('click', function() {
  
        window.location.reload();
    });
    function checkRequired(selectElement) {

        const row = selectElement.closest('tr');

        const montoInput = row.querySelector('.montoservicio');

        
        if (selectElement.value) {
            montoInput.setAttribute('required', 'required');
        } else {
            montoInput.removeAttribute('required');
        }
    }
    function checkRequiredGasto(selectElement) {

        const row = selectElement.closest('tr');

      
        const montoInput = row.querySelector('.montogasto');

   
        if (selectElement.value) {
            montoInput.setAttribute('required', 'required');
        } else {
            montoInput.removeAttribute('required');
        }
    }

    document.getElementById('horasSocios').addEventListener('input', function () {

        let horasSocios = parseFloat(this.value);

       
        let totalSocios = parseFloat(
            document.getElementById('totalSocios').innerText
                .replace(/\./g, '')   
                .replace(/,/g, '.')    
        );


        if (!isNaN(horasSocios) && horasSocios > totalSocios) {
            alert("Las horas de socios no pueden ser mayores que " + totalSocios);
            this.value = ''; 
        }
    });

    document.getElementById('horasStaff').addEventListener('input', function () {
        let horasStaff = this.value;
        let horasStaffNum = parseFloat(horasStaff.replace(',', '.'));
        let totalStafff = parseFloat(document.getElementById('totalStafff').innerText.replace(/\./g, '').replace(/,/g, '.'));
        if (!isNaN(horasStaffNum) && !isNaN(totalStafff)) {
            if (horasStaffNum > totalStafff) {
                alert("Las horas de staff no pueden ser mayores que " + totalStafff.toLocaleString('es-ES'));
                this.value = '';
            }
        }
    });
   
    const currentDate = new Date();
    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
    const formattedDate = currentDate.toLocaleDateString('es-ES', options);

   
    document.getElementById('current-date').textContent = formattedDate;
</script>


<script>
    
    const cuotasInput = document.getElementById('cuotas');
    const tablaBody = document.getElementById('tabla-body');
    function formatearMiles(valor) {
        return Number(valor.replace(/\D/g, '')).toLocaleString('de-DE', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0,
        });
    }

    cuotasInput.addEventListener('input', () => {
  
        const numCuotas = parseInt(cuotasInput.value);

        tablaBody.innerHTML = '';

   
        if (numCuotas > 0) {
    
            for (let i = 0; i < numCuotas; i++) {
                const fila = document.createElement('tr');

              
                const fechaEmision = document.createElement('td');
                fechaEmision.innerHTML = `<input type="date" name="fechaemision" style="width: 100%; padding: 5px;">`;

                const fechaVencimiento = document.createElement('td');
                fechaVencimiento.innerHTML = `<input type="date" name="fechavencimiento" style="width: 100%; padding: 5px;">`;

                const monto = document.createElement('td');
                monto.innerHTML = `<input type="text" name="montocuota" class="monto-factura" style="width: 100%; padding: 5px;" placeholder="MontoCLP">`;

                const observacion = document.createElement('td');
                observacion.innerHTML = `<textarea name="observacioncuota" style="width: 100%; padding: 5px;" rows="2" placeholder="Observación"></textarea>`;

                const idCuenta = document.createElement('td');
                idCuenta.innerHTML = `<input value="41001" readonly type="text" style="width: 100%; padding: 5px;" placeholder="IdCuenta">`;

                const idcuota = document.createElement('td');
                idcuota.style.display = 'none';
                idcuota.innerHTML = `<input value="" name="idcuota" readonly type="text" style="width: 100%; padding: 5px;" >`;
           
                fila.appendChild(fechaEmision);
                fila.appendChild(fechaVencimiento);
                fila.appendChild(monto);
                fila.appendChild(observacion);
                fila.appendChild(idCuenta);
                fila.appendChild(idcuota);
                

               
                tablaBody.appendChild(fila);
            }
      
            const montos = document.querySelectorAll('.monto-factura');
            montos.forEach((input) => {
                input.addEventListener('input', function () {
                    const cursorPos = this.selectionStart;
                    this.value = formatearMiles(this.value);
                    this.selectionStart = this.selectionEnd = cursorPos;
                });
            });
        }
    });






</script>